Notebook[{

Cell[CellGroupData[{
Cell["FaizonZaman/ImageFilterAnalysis", "Title",
 Deletable->False,
 TaggingRules->{},
 CellTags->{"Name", "TemplateCell", "Title"},
 CellID->302546598,ExpressionUUID->"365c7c57-d2ba-4122-9ca8-37d3d012907c"],

Cell["Explore repeated application of image filters", "Text",
 Deletable->False,
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.9468391120877857`*^9, 3.9468391185671883`*^9}},
 CellTags->{"DefaultContent", "Description", "TabNext", "TemplateCell"},
 CellID->840423204,ExpressionUUID->"475405ea-ccb3-4d44-9da9-d1da55ea7067"],

Cell[CellGroupData[{

Cell["Paclet Manifest", "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "PacletManifest"},
 CellTags->{"Paclet Manifest", "PacletManifest", "TemplateCellGroup"},
 CellID->196832285,ExpressionUUID->"d4c9a1d6-b9b0-42a4-a484-1434302d562d"],

Cell[BoxData[
 TemplateBox[{},
  "PacletDirectoryChooserTemplate"]], "PacletDirectoryChooser",
 TaggingRules->{"PacletDirectoryType" -> "Notebook", "Refreshing" -> False},
 CellTags->"PacletManifestPanel",
 CellID->115408480,ExpressionUUID->"b421a769-2747-4248-9f23-664d4a6e54d0"],

Cell[CellGroupData[{

Cell["", "FileManagerTopSpacer",
 CellGroupingRules->{"SectionGrouping", 99},
 TaggingRules->{},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1419059761,ExpressionUUID->"5eb2f3ea-feb5-4eee-be87-0814cfc51aa7"],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 InterpretationBox[
  TagBox[
   ActionMenuBox["\<\"Documentation\"\>",{
    "\"Open/Close Group\"" :> (
      SelectionMove[ParentCell[EvaluationCell[]], All, Cell]; 
      FrontEndTokenExecute[EvaluationNotebook[], "OpenCloseGroup"]), 
     "\"Open Directory\"" :> 
     DefinitionNotebookClient`FileTreeOpen[ParentCell[EvaluationCell[]]], 
     "\"Un/Mark as Excluded\"" :> 
     DefinitionNotebookClient`FileTreeExclusionToggle[
      ParentCell[EvaluationCell[]]], "\"Copy Path to Clipboard\"" :> 
     DefinitionNotebookClient`FileTreeCopy[ParentCell[EvaluationCell[]]]},
    Appearance->None,
    BaseStyle->{"Text"}],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[0]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation"}],
  BoxID -> "FileTreePath",
  BaseStyle->{
   "Text"}]],ExpressionUUID->"41270e01-4a9d-4c92-9349-1314fb1148cd"]], \
"FileManagerDirectory",
 CellMargins->{{Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 100},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerDocumentationIconTemplate"]], Background -> 
     None], Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->184019545,ExpressionUUID->"0b59bb98-8640-4ca3-a423-e13020ff2ec6"],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 InterpretationBox[
  TagBox[
   ActionMenuBox["\<\"English\"\>",{
    "\"Open/Close Group\"" :> (
      SelectionMove[ParentCell[EvaluationCell[]], All, Cell]; 
      FrontEndTokenExecute[EvaluationNotebook[], "OpenCloseGroup"]), 
     "\"Open Directory\"" :> 
     DefinitionNotebookClient`FileTreeOpen[ParentCell[EvaluationCell[]]], 
     "\"Un/Mark as Excluded\"" :> 
     DefinitionNotebookClient`FileTreeExclusionToggle[
      ParentCell[EvaluationCell[]]], "\"Copy Path to Clipboard\"" :> 
     DefinitionNotebookClient`FileTreeCopy[ParentCell[EvaluationCell[]]]},
    Appearance->None,
    BaseStyle->{"Text"}],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[1]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English"}],
  BoxID -> "FileTreePath",
  BaseStyle->{
   "Text"}]],ExpressionUUID->"fbd67231-2843-41d3-ae5a-e1b437d1766a"]], \
"FileManagerDirectory",
 CellMargins->{{23 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 110},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerDirectoryIconTemplate"]], Background -> 
     None], Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1165310245,ExpressionUUID->"6a571fc9-d326-4dd7-938b-766bfb8d0d19"],

Cell[TextData[Cell[BoxData[
 InterpretationBox[
  TagBox[
   ActionMenuBox["\<\"Guides\"\>",{
    "\"Open/Close Group\"" :> (
      SelectionMove[ParentCell[EvaluationCell[]], All, Cell]; 
      FrontEndTokenExecute[EvaluationNotebook[], "OpenCloseGroup"]), 
     "\"Open Directory\"" :> 
     DefinitionNotebookClient`FileTreeOpen[ParentCell[EvaluationCell[]]], 
     "\"Un/Mark as Excluded\"" :> 
     DefinitionNotebookClient`FileTreeExclusionToggle[
      ParentCell[EvaluationCell[]]], "\"Copy Path to Clipboard\"" :> 
     DefinitionNotebookClient`FileTreeCopy[ParentCell[EvaluationCell[]]]},
    Appearance->None,
    BaseStyle->{"Text"}],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[2]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "Guides"}],
  BoxID -> "FileTreePath",
  BaseStyle->{
   "Text"}]],ExpressionUUID->"09bdb9c2-53b2-472d-ae8c-59c8d2283dd5"]], \
"FileManagerDirectory",
 CellMargins->{{46 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 120},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerEmptyDirectoryIconTemplate"]], Background -> 
     None], Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->318427075,ExpressionUUID->"276d15a0-48b1-42ae-93f4-052cfb7fa28b"],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 InterpretationBox[
  TagBox[
   ActionMenuBox["\<\"ReferencePages\"\>",{
    "\"Open/Close Group\"" :> (
      SelectionMove[ParentCell[EvaluationCell[]], All, Cell]; 
      FrontEndTokenExecute[EvaluationNotebook[], "OpenCloseGroup"]), 
     "\"Open Directory\"" :> 
     DefinitionNotebookClient`FileTreeOpen[ParentCell[EvaluationCell[]]], 
     "\"Un/Mark as Excluded\"" :> 
     DefinitionNotebookClient`FileTreeExclusionToggle[
      ParentCell[EvaluationCell[]]], "\"Copy Path to Clipboard\"" :> 
     DefinitionNotebookClient`FileTreeCopy[ParentCell[EvaluationCell[]]]},
    Appearance->None,
    BaseStyle->{"Text"}],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[2]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages"}],
  BoxID -> "FileTreePath",
  BaseStyle->{
   "Text"}]],ExpressionUUID->"77ab6681-b7a1-4a69-800f-8a50f0e5c176"]], \
"FileManagerDirectory",
 CellMargins->{{46 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 120},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerDirectoryIconTemplate"]], Background -> 
     None], Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->274601201,ExpressionUUID->"dcc113ba-ba3e-497b-bc4f-06a5f4ef3d25"],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 InterpretationBox[
  TagBox[
   ActionMenuBox["\<\"Symbols\"\>",{
    "\"Open/Close Group\"" :> (
      SelectionMove[ParentCell[EvaluationCell[]], All, Cell]; 
      FrontEndTokenExecute[EvaluationNotebook[], "OpenCloseGroup"]), 
     "\"Open Directory\"" :> 
     DefinitionNotebookClient`FileTreeOpen[ParentCell[EvaluationCell[]]], 
     "\"Un/Mark as Excluded\"" :> 
     DefinitionNotebookClient`FileTreeExclusionToggle[
      ParentCell[EvaluationCell[]]], "\"Copy Path to Clipboard\"" :> 
     DefinitionNotebookClient`FileTreeCopy[ParentCell[EvaluationCell[]]]},
    Appearance->None,
    BaseStyle->{"Text"}],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[3]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols"}],
  BoxID -> "FileTreePath",
  BaseStyle->{
   "Text"}]],ExpressionUUID->"1b8dca55-0396-4c5a-9a78-952aed234096"]], \
"FileManagerDirectory",
 CellMargins->{{69 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 130},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerDirectoryIconTemplate"]], Background -> 
     None], Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->280027804,ExpressionUUID->"42235642-dbdb-4b5e-a977-df440f77fc87"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"ImageFilterAnalysisData.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "ImageFilterAnalysisData.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "ImageFilterAnalysisData.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1290631251,ExpressionUUID->"e0de933b-9a83-48ae-ab73-1238992188df"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"RunImageFilter.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "RunImageFilter.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "RunImageFilter.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->2054600857,ExpressionUUID->"e8c323bc-06a4-4087-acab-48ed51fe7f4f"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"TestFilters.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "TestFilters.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "TestFilters.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->139559839,ExpressionUUID->"f3aeb2bd-d433-4d5d-8df0-90b6e9d6794d"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"$DefaultTestFilters.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "$DefaultTestFilters.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "$DefaultTestFilters.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->530071549,ExpressionUUID->"d9fc54f2-14c8-40fd-9276-1dbe5d86937b"]
}, Closed]]
}, Closed]],

Cell[TextData[Cell[BoxData[
 InterpretationBox[
  TagBox[
   ActionMenuBox["\<\"Tutorials\"\>",{
    "\"Open/Close Group\"" :> (
      SelectionMove[ParentCell[EvaluationCell[]], All, Cell]; 
      FrontEndTokenExecute[EvaluationNotebook[], "OpenCloseGroup"]), 
     "\"Open Directory\"" :> 
     DefinitionNotebookClient`FileTreeOpen[ParentCell[EvaluationCell[]]], 
     "\"Un/Mark as Excluded\"" :> 
     DefinitionNotebookClient`FileTreeExclusionToggle[
      ParentCell[EvaluationCell[]]], "\"Copy Path to Clipboard\"" :> 
     DefinitionNotebookClient`FileTreeCopy[ParentCell[EvaluationCell[]]]},
    Appearance->None,
    BaseStyle->{"Text"}],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[2]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "Tutorials"}],
  BoxID -> "FileTreePath",
  BaseStyle->{
   "Text"}]],ExpressionUUID->"6498923d-a992-4ac7-bf4a-aa5d5c0e20ce"]], \
"FileManagerDirectory",
 CellMargins->{{46 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 120},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerEmptyDirectoryIconTemplate"]], Background -> 
     None], Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1150356287,ExpressionUUID->"a31d14de-2d46-4e21-b847-040fc16a8846"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 InterpretationBox[
  TagBox[
   ActionMenuBox["\<\"Kernel\"\>",{
    "\"Open/Close Group\"" :> (
      SelectionMove[ParentCell[EvaluationCell[]], All, Cell]; 
      FrontEndTokenExecute[EvaluationNotebook[], "OpenCloseGroup"]), 
     "\"Open Directory\"" :> 
     DefinitionNotebookClient`FileTreeOpen[ParentCell[EvaluationCell[]]], 
     "\"Un/Mark as Excluded\"" :> 
     DefinitionNotebookClient`FileTreeExclusionToggle[
      ParentCell[EvaluationCell[]]], "\"Copy Path to Clipboard\"" :> 
     DefinitionNotebookClient`FileTreeCopy[ParentCell[EvaluationCell[]]]},
    Appearance->None,
    BaseStyle->{"Text"}],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[0]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel"}],
  BoxID -> "FileTreePath",
  BaseStyle->{
   "Text"}]],ExpressionUUID->"bf76c1ba-977e-423f-ad7e-8521c1d99ecc"]], \
"FileManagerDirectory",
 CellMargins->{{Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 100},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerKernelIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->440041135,ExpressionUUID->"cad465ac-e0cd-4376-b13b-5fa8809c57e9"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"ImageFilterAnalysis.wl\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "ImageFilterAnalysis.wl"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[1]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "ImageFilterAnalysis.wl"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{23 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 110},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerWLIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1985159324,ExpressionUUID->"bddefd5f-8b67-44e8-8d0f-4994f5891969"]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"PacletInfo.wl\"", 
     FileNameJoin[{
       NotebookDirectory[], "PacletInfo.wl"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[0]]& ],
  FileNameJoin[{
    NotebookDirectory[], "PacletInfo.wl"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 100},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerPacletInfoIconTemplate"]], Background -> 
     None], Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1266818676,ExpressionUUID->"e3953fc4-b56e-457d-919b-be61fb6ae08c"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"ResourceDefinition.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "ResourceDefinition.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[0]]& ],
  FileNameJoin[{
    NotebookDirectory[], "ResourceDefinition.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 100},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->867013982,ExpressionUUID->"7f46a477-891c-43c7-acc2-abe227ddc10a"],

Cell["", "FileManagerBottomSpacer",
 CellGroupingRules->{"SectionGrouping", 100},
 TaggingRules->{},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1268611174,ExpressionUUID->"0dab05ee-007f-4be1-a24f-1b253b435085"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Web Content",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"WebContent", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Provide content that you want to display on the main landing page \
for your paclet.", "MoreInfoText"], Background -> GrayLevel[0.95], 
        FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5,
         ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoWebContent"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "840ec0e7-8a55-4399-bb2e-8526347ef18d"]
}], "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "WebContent"},
 CellTags->{"TemplateSection", "Web Content", "WebContent"},
 CellID->184208365,ExpressionUUID->"abe3de79-cea5-4be5-92f8-9d9baeabbb46"],

Cell[CellGroupData[{

Cell[TextData[{
 "Headline Image",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"HeroImage", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "Provide an image that you want to display on the main landing page \
for your paclet. This will be displayed along side the basic description \
that's given below. The image can be given directly (i.e. pasted from the \
clipboard) or as code that generates the desired image. \n\nIf importing the \
image from a local file, use notebook-relative paths when possible (e.g. ", 
           Cell[
            BoxData[
             StyleBox[
              RowBox[{
                TagBox[
                 ButtonBox[
                  StyleBox[
                  "Import", "SymbolsRefLink", ShowStringCharacters -> True, 
                   FontFamily -> "Source Sans Pro"], BaseStyle -> Dynamic[
                    FEPrivate`If[
                    CurrentValue["MouseOver"], {
                    "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                    "Link"}]], ButtonData -> "paclet:ref/Import", 
                  ContentPadding -> False], 
                 MouseAppearanceTag["LinkHand"]], "[", 
                RowBox[{
                  TagBox[
                   ButtonBox[
                    StyleBox[
                    "FileNameJoin", "SymbolsRefLink", ShowStringCharacters -> 
                    True, FontFamily -> "Source Sans Pro"], BaseStyle -> 
                    Dynamic[
                    FEPrivate`If[
                    CurrentValue["MouseOver"], {
                    "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                    "Link"}]], ButtonData -> "paclet:ref/FileNameJoin", 
                    ContentPadding -> False], 
                   MouseAppearanceTag["LinkHand"]], "[", 
                  RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    TagBox[
                    ButtonBox[
                    StyleBox[
                    "NotebookDirectory", "SymbolsRefLink", 
                    ShowStringCharacters -> True, FontFamily -> 
                    "Source Sans Pro"], BaseStyle -> Dynamic[
                    FEPrivate`If[
                    CurrentValue["MouseOver"], {
                    "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                    "Link"}]], ButtonData -> "paclet:ref/NotebookDirectory", 
                    ContentPadding -> False], 
                    MouseAppearanceTag["LinkHand"]], "[", "]"}], ",", 
                    StyleBox["\[Ellipsis]", "TR"]}], "}"}], "]"}], "]"}], 
              ShowStringCharacters -> True, FontFamily -> 
              "Source Sans Pro"]]], ") rather than absolute file names."}], 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoHeroImage"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "bccc7c7a-bb17-4c65-9b07-c2800932ff4d"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "HeroImage"},
 CellTags->{"Headline Image", "HeroImage", "TemplateCellGroup"},
 CellID->509724307,ExpressionUUID->"a28d4fde-20df-4005-81c2-f787017da0f3"],

Cell[BoxData[
 TagBox[
  GraphicsBox[
   {EdgeForm[GrayLevel[0]], FaceForm[GrayLevel[1]], RectangleBox[{0, 0}], 
    InsetBox[
     StyleBox[
      TagBox["\<\"Image Placeholder\"\>",
       Annotation[#, "PlaceholderImage"]& ],
      StripOnInput->False,
      FontFamily->"Source Sans Pro",
      FontSize->16], {0.5, 0.6}], InsetBox[
     StyleBox["\<\"Replace this with an image\\nthat you would like to \
display\\non the landing page for your paclet.\"\>",
      StripOnInput->False,
      TextAlignment->Center,
      FontFamily->"Source Sans Pro",
      FontSize->10,
      FontColor->GrayLevel[0.5]], {0.5, 0.4}]},
   ImageSize->250],
  #& ,
  TaggingRules -> {"DefaultContentBoxes" -> True},
  AutoDelete->True]], "Input",
 TaggingRules->{},
 CellTags->"DefaultContent",
 CellID->445097320,ExpressionUUID->"c50b9c3f-523e-42e0-8a27-a802b713024c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Basic Description",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"LongDescription", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Give a short paragraph explaining your paclet. This is the first \
text that users will see when visiting the main landing page of your paclet.",
          "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoLongDescription"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "0fb84b4a-b28c-4370-a383-ffe30a353a44"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "LongDescription"},
 DefaultNewCellStyle->"Text",
 CellTags->{"Basic Description", "LongDescription", "TemplateCellGroup"},
 CellID->433339604,ExpressionUUID->"bc45681c-4e59-4616-b47b-0204d4e40626"],

Cell["Explore properties of repeatedly applying image filters.", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.9467632143294353`*^9, 3.946763252108014*^9}},
 CellTags->"DefaultContent",
 CellID->441612482,ExpressionUUID->"82b3d3c0-74db-40c4-9ee6-c45fc5b4fe7e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Details",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Details", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Details may include a long description of the resource's contents, \
history, methodology or other relevant information. Give references here if \
they are directly relevant to the resource. The details will appear above the \
examples on the webpage for the resource.", "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoDetails"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "4b8c8144-ca58-4b4d-9a5f-7c9551cf203b"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Details"},
 DefaultNewCellStyle->"Notes",
 CellTags->{"Details", "TemplateCellGroup"},
 CellID->484110581,ExpressionUUID->"26e7fd48-02dd-4152-8a71-a00847d03d93"],

Cell[TextData[{
 "Borne out of exploring image filters with Processing + p5js see Github link \
below `",
 StyleBox["ArcanePropagation",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 "`."
}], "Notes",
 TaggingRules->{},
 CellChangeTimes->{{3.946763293479485*^9, 3.946763329480654*^9}, {
  3.946841482764503*^9, 3.946841486769417*^9}, {3.9561708167804728`*^9, 
  3.9561708177230663`*^9}},
 CellTags->"DefaultContent",
 CellID->889292814,ExpressionUUID->"0fb0cf0b-d521-41fa-bf97-b7f33323f9a8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Primary Context",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"PrimaryContext", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "Specify the primary context of your paclet that users should load \
with ", 
           Cell[
            BoxData[
             StyleBox[
              TagBox[
               ButtonBox[
                StyleBox[
                "Needs", "SymbolsRefLink", ShowStringCharacters -> True, 
                 FontFamily -> "Source Sans Pro"], BaseStyle -> Dynamic[
                  FEPrivate`If[
                   CurrentValue["MouseOver"], {
                   "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                   "Link"}]], ButtonData -> "paclet:ref/Needs", 
                ContentPadding -> False], 
               MouseAppearanceTag["LinkHand"]], ShowStringCharacters -> True, 
              FontFamily -> "Source Sans Pro"]]], " or ", 
           Cell[
            BoxData[
             StyleBox[
              TagBox[
               ButtonBox[
                StyleBox[
                "Get", "SymbolsRefLink", ShowStringCharacters -> True, 
                 FontFamily -> "Source Sans Pro"], BaseStyle -> Dynamic[
                  FEPrivate`If[
                   CurrentValue["MouseOver"], {
                   "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                   "Link"}]], ButtonData -> "paclet:ref/Get", ContentPadding -> 
                False], 
               MouseAppearanceTag["LinkHand"]], ShowStringCharacters -> True, 
              FontFamily -> "Source Sans Pro"]]], 
           " in order to access the paclet's functionality. If your paclet is \
not meant to be loaded via a context, this section can be left blank. If \
specified, the primary context will also be displayed on the main web page \
for your paclet."}], "MoreInfoText"], Background -> GrayLevel[0.95], 
        FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5,
         ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoPrimaryContext"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "8b319edb-c51c-49ba-b884-3bf411cfa43e"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "PrimaryContext"},
 DefaultNewCellStyle->"Text",
 CellTags->{"Primary Context", "PrimaryContext", "TemplateCellGroup"},
 CellID->945361513,ExpressionUUID->"82b14d5e-b043-4ea0-bd99-617e073d7330"],

Cell["FaizonZaman`ImageFilterAnalysis`", "Text",
 TaggingRules->{},
 CellID->1806880137,ExpressionUUID->"54ddc95b-05aa-4123-8e14-03eccd91db7f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Main Guide Page",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"MainGuidePage", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Choose one of your documentation guide pages to feature as part of \
the main landing page for your paclet. This guide page should correspond to a \
general overview of your paclet.", "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoMainGuidePage"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "b517fae2-42c5-4a5c-bce1-01b698f56f8d"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "MainGuidePage"},
 CellTags->{"Main Guide Page", "MainGuidePage", "TemplateCellGroup"},
 CellID->587602718,ExpressionUUID->"bcc6052f-5402-49b2-b5fd-fc70cf13d1f3"],

Cell[BoxData[
 TemplateBox[{},
  "MainGuideChooserTemplate"]], "MainGuideChooser",
 TaggingRules->{"Refreshing" -> False, "Relative" -> True},
 CellTags->"MainGuidePagePanel",
 CellID->614786987,ExpressionUUID->"1ed17dc3-6465-4a5b-9b7c-83db107d13e5"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Examples",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"ExampleNotebook", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Provide examples showing how to install, configure, and load your \
Paclet along with some basic usage. This section will be displayed on the \
main landing page for your Paclet when deployed to the cloud or published in \
the Wolfram Language Paclet Repository.\n\nThe usage examples should provide \
a succinct overview of what types of features users can expect from your \
paclet. Detailed examples should be reserved for the corresponding function, \
guide, or tutorial pages.\n\nThe default content appearing here shows the \
recommended structure for this section, but any of it can be removed or \
changed as desired. Use additional cells and cell styles as needed.", 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoExampleNotebook"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "e33c411c-daef-4533-b739-4b5b2e25bc00"]
}], "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "ExampleNotebook"},
 CellTags->{"ExampleNotebook", "Examples", "TemplateCellGroup"},
 CellID->365974185,ExpressionUUID->"7d404065-83c6-4ae7-9a46-93b7c4a2bf6d"],

Cell[BoxData[
 RowBox[{"Quit", "[", "]"}]], "Input", "Excluded",
 TaggingRules->{},
 CellChangeTimes->{{3.9467649778700047`*^9, 3.946764979833617*^9}},
 CellLabel->"In[1]:=",
 CellID->332743059,ExpressionUUID->"116ba612-8439-40b2-8b94-3d37b7d79824"],

Cell[CellGroupData[{

Cell[TextData[{
 "Initialization for Examples",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"ExampleInitialization", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "Put any initialization code that's needed for evaluating examples \
here.\n\nCells marked as excluded will not appear anywhere in the published \
paclet except for the definition notebook.\n\nCells can be toggled as \
excluded using ", 
           Cell[
            BoxData[
             StyleBox[
              RowBox[{"Tools", 
                RowBox[{" ", "\[FilledRightTriangle]", " "}], "Cells", 
                RowBox[{" ", "\[FilledRightTriangle]", " "}], 
                RowBox[{
                  RowBox[{"Mark", "/", "unmark"}], " ", "selected", " ", 
                  "cells", " ", "as", " ", "excluded"}]}], StripOnInput -> 
              False, ShowStringCharacters -> False, FontFamily -> 
              "Source Sans Pro", FontSize -> 14, FontWeight -> "SemiBold", 
              FontColor -> GrayLevel[0.28627]]]], 
           " from the toolbar above."}], "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoExampleInitialization"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "61f4a696-5318-4108-b15b-670f66748afb"]
}], "Subsection", "Excluded",
 Editable->False,
 Deletable->True,
 TaggingRules->{"TemplateGroupName" -> "ExampleInitialization"},
 CellTags->{
  "ExampleInitialization", "Initialization for Examples", "TemplateCellGroup"},
 CellLabel->"In[1]:=",
 CellID->468286435,ExpressionUUID->"3d3d5c6c-a2fd-4add-9663-f8de89186c7b"],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "PacletDirectoryLoad", 
   "[", "\"\</Users/faizonzaman/Developer/wolfram/ImageFilterAnalysis\>\"", 
   "]"}], ";"}]], "Input", "Excluded",
 TaggingRules->{},
 InitializationCell->True,
 CellLabel->"In[1]:=",
 CellID->996717066,ExpressionUUID->"19d5ac9f-4c1e-45a3-8c37-6182529a7bc8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Needs", "[", "\"\<FaizonZaman`ImageFilterAnalysis`\>\"", "]"}], 
  ";"}]], "Input", "Excluded",
 TaggingRules->{},
 InitializationCell->True,
 CellLabel->"In[2]:=",
 CellID->172764492,ExpressionUUID->"112dc484-9629-4996-81f0-23c5d352a9b2"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Basic Examples", "Subsection",
 TaggingRules->{},
 CellID->462042388,ExpressionUUID->"28b74be2-26c5-4a9d-8838-017daf1e9fae"],

Cell["Interactively run various filters:", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.9468358492170877`*^9, 3.946835852573235*^9}, {
   3.947794597308798*^9, 3.9477946570030107`*^9}, {3.9495135641065607`*^9, 
   3.949513572918131*^9}, 3.956171658995281*^9},
 CellTags->"DefaultContent",
 CellID->319073343,ExpressionUUID->"a3196440-02c4-43fb-b2cf-0972cd4c54e0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"TestFilters", "[", "]"}], "//", "Quiet"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.94676335747213*^9, 3.946763408554326*^9}, {
  3.946764997815691*^9, 3.946765002415235*^9}, {3.956170836144691*^9, 
  3.9561708371545477`*^9}},
 CellTags->"DefaultContent",
 CellLabel->"In[3]:=",
 CellID->593829399,ExpressionUUID->"f090bace-cffd-44a1-be28-1d254c68c7d2"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
8U6dOrVgwYKBAweOGzdu8+bNt27dMjeRBw8esHtkzzzzjLUyZgHBwcH784d9
4ah79+4sqw4ODmytUaNGsZC5c+eqmHlOIWheVlYW1bLhYJSRkUHh4eHhRtfS
0zyK7OvrGxQURHk2vTnao9u3b9PwGh0dbfggvR5Pnjzx8/OjEigwJqVGaaak
pJiOZiJX3t7eMTExpqPRbtI+UrHQH5ZtCJjGhOb9lRrG4riEHzdcusl/MU9k
nOvH0DwAgDawoubR4NusWTPDx7pmz55t1te9ba15c+bMmZgHjf4mov36668m
nlWjAZ3ifP755+zn2rVr2VpGNe/ixYtsixs3brTFHpnAFpo3fvx4Ozu7WrVq
UeKffvrpCy+8wHa5cePG7Ok1Gps++eSTEiVKsPCaNWsavsHBNY+y9/HHH/PI
pUuXpjJMTEw03O7169d79epFrYLXQsOGDamajGbSxcXlP//5z7PPPstilitX
rkePHnfv3tWLlp6e/s0339SuXZs3ufr1669cuVKqhTNnzqT9pd3kIVT7dnls
2rTp9OnT7dq1K1myJEuBiuXAgQOG+Xn48OGwYcNKlSrFotH+9u/fPywsbMqU
KZRO1apV5ZQ8KBATmvfb3R1Urf6x1+3P9zEa4eR9x5zcnFsxnriaBwDQDNbS
POqOKlSokJ8U0VgmPylba1716tVZ+h4eHiaiydG8iIiIBQsWbNiwITk5ma1l
VPPWrFnDAslSbLFHJrCF5o0ePZoiV65c+cMPP9QrFtIqV1dXbk1SZs2aJU2E
aR55Mq8OKVRQ2dnZ0vj+/v4vvvii0bpYuHChXg5Xr15N7sSWcoHU5T18SPon
bfwtW7bkS6Ux+/bty6ORi1IIZZiHREVFsWhDhw4tW7asYZa2bNkizQ9VxJtv
vmkYrU6dOgMHDqQ/aNfklDwoENPP5n19oa/pNywKjADNAwAULayleWvXrmUj
10svvURSkZKSEhYWNm7cOBZISkC+obcKxfH29k5MTNQLL1DzyFuCg4NN54cS
uXXrFru1qoe5mtewYcM9BhhNOVOB5snZqcy82+K3b982LMz8sJ3mMSZMmEAj
HRW1vb09rzXmP5cvXw4JCaF9Z1e6ypQpk5WVxRNhmsf49NNPnZyc7ty5s2nT
ptdff50FSh/bo7ZUq1YtCiR5+/7778kkAwICyOVefvllFnnHjh08ckZGRrly
5SiwQYMGFPPJkye0OrVPZnGdO3fmMR0cHNjq3377bXR09KNHj9zd3d9++20W
yIXQhOaxtk3ZvpMHqSzTy6pVq6anp7PIubm5n332GYvcsWPHnTt3hoaG0v4y
wWNA86xFgROqKPwHzQMAFC2spXn9+vVjA9akSZN4IA24H3300Vt5SB/SozGu
e/fuNO7r8m7SderUicY+vjQ/zYuLi/v6668bNWrEr4R88cUX/N0HBg3Ww4YN
IzFjcWgTNKwHBgaypZMnT+YXeRj085dffjG6R1zz3nzzzfz2esCAAezmXX43
bdndPb0tVqtWTf5OUQGyTZAvffjhh+wu5K5du9hSqrvw8PD8spdppuaRbHyU
DzSi8chc80jjpYn07NmThVOxSG96zps3j4VTG+CBXPNop6SRqQZr1qzJFkVE
RLBAKiIWsmLFCukWyZfYJb7y5cvn5OSwwOPHj7PIBw8elEamCu3atWu3bt1I
0VlI69atdQZzxVAG3nvvPYrJ50M2oXnUwLy8vKSrc90lAWAhvr6+LKR58+ZU
HdLIVNfQPOtSmJpH54nQPACA4FhL80iu2IBVr169a9eumYh5+vRp/oQSh4xu
9+7dLIJRzUtJSenRo4fOgLZt28bGxrI4pEzkk4ZxKlasePXqVYowfvx4w6Vk
DkbzKUfzPv74YxZn9erVLERP88gZDLdYoUIF+Tv1/vvvs8C6devyCEzzPD09
Sf+oMG/fvp1fDq01bx7VDo/MNS84OFiayPLly1k4VbE0/Pz58yxc6l1M88qV
K5ecnKyXGToLYPFPnDjBQtgExe3btzfMOb+MTIXAQk6ePMlC9G4TG8ImxCPr
joyMNBHNhOb16dNHL7KLiwtbxJ/Q27p1KwuhRqgX+dGjR+xRB2ietTCheVsC
lsZmRJ178Ft+EbYFrqAIzn8ehuYBADSDtTSPj2WMJk2afPnll1u2bKEBURqN
FI7dUCPs7e3Pnj07f/58dpuvZMmS7EVLo5r37bffssA6deqQ5Bw5coRciIWQ
YbI4X331FQuhTZBlkXqxyzXEwIEDM/NehVi3bl358uVZIA3f9NPHx8foHnHN
IwW6+2+4gxWoeWRZtAl+e65p06b0c9u2bfJ3imseE5IBAwZQwbq5udGiw4cP
s/Bz587lVy9maR758OB8kCoK07znn39eLxGqbpYfqkFpOAkYC9+/fz8PZJpH
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
cWYocb1Nz58/nyVrNH5qaiqPyepl9OjR+eX8qZl1mp/m5eTkfPTRR2zR9evX
ebhZdUqwtzmo7mhFHhgaGkots1atWtKc21rzaFusuHbt2sVSu3Llil5FmJiU
BpoHAADFAatoXlpW2qPsR/znT0E/keO1v9A+K8cK38Eh0aLBTnqNomPHjr/9
9lt+b3Feu3bN8LPa58+fZ+tKn8siJWBX2GbMmKEXv3nz5hQ+fPhwaWC/fv0o
sHLlyiRIevFZDrt06cJDfvzxR7bFdevW6UUmJVOoeVLatm2rK+jZvAULFrDM
7N69WxpO8vP222/r8m6bGu6Uxfzyyy8mNE8KuyQ1depU09HMqlMWOGbMmHN5
HDx4cMmSJcxyDcXJrDp9/Pgxu8s8btw4w0zSKYn0p601j3Pq1CmWWoHP5kmB
5gEAQHFAuebFPoqtdrxazRM1/0z78/87/Iy/y/5W1u6wXWBSoJJk9aAxnQ18
HDIxX1/fAlekwff+/fsuLi5GL1vReK3Le7aKRnAeePnyZRbZy8uLB2ZlZT33
3HMUOH/+fMOtkEswW+AhnTt3ppBXXnlFb/R/au03beVoHrkKxWnWrJmhG1+6
dInt7L59+6ySn6c20Dw9TNSpiXnzypQpQ+6dKZn5zdw6JTp06KDLu+s9c+ZM
01oFzQMAAKA6yjUvKDlId0hH/7q4/f91DzaDylfeXylJMz8CAwPt7e3Z0MwG
7lu3bhlGS0tLI2kZMWIEqSB//YHx/fff/yvzQUEsXPq8PZvMTe9FAD8/PxaT
BvqhBjCPIvhNXvY42ahRowyzV/iaV6lSJV3evVHDRaRMpUqV0hm7pGkxttA8
mXXKNa9u3bpv5FG2bFkmZvyGL8fcOn2a95Jyo0aN+Kap8JcsWULN0jDD0DwA
AACqY5WbtsO8hjHT23R/U8nDJenf/VT9IdWKREdHMxMj3n77bb2lhw8f5k/U
kwe+9dZbgwcPnjNnDntyXk/ziO7du+sk9+ZoTGcauXXrVmk0Ey8aSImKinoq
kY158+YZ5r+QNS81NdVEZog6derQ0k8//dQq+XlqA82TX6eGz+atWLFCL4Rj
Vp1y6KhZuXIle3+HQ7Vw5MgR6ffUoHkAAABUxyqal/A4ocqxKsz06B9Zn8IE
5dCrVy9d3jsF0qe2aDxiQz+ZgJOTk3S2vVq1aumMaR7/3hYNvvTz559/1uW9
zqk3Ux+fdW3ZsmU38ocN9PR/dsXJ6IxwttC8IUPynYA6NzeXvZpq9IkynlVz
75yawLqaZ1adGmre48eP2VYqV66ckJAgTdmsOjUkNDSUWkvXrl35NC/29vZ8
Kdc8yrPeijbSPDmvonOKkOZRyqTQy5cvnzVr1rRiw5dffjlx4kS1c1Fk+Oqr
r0wU1/Tp0wszM0AhEyZM+O677/JbqrHapN2ZPXv2ypUrT5w4ER4ebosu1Fpv
2q69u5Zrnl+in/IEOfm9auHg4MCGHuk9NeY8NEQaPrGfn+ZlZ2fXrVuXL2rR
ogX9PXnyZL1oVFZshjqZNzfZ1Z7u3bsbLrKu5rF7i3369DERp2PHjjqD29AM
0hhWjHpvZyjBuppnVp0afdOWX7UbP368dHVz6zQ/goKC2rRpwzZBdscCIyIi
WMjGjRv14vMJjU1oHvvGH+11gVt3d3dnqUkfJS2QIqF5vr6+8+bNo+Nl/fr1
Li4u1FZ9iw10hrhnz578lvr5+RVmZsSHemxHR8f8lqK4ihaDBg2ic/D8lmqs
Nml3qGc7d+7czz//TCd3S5cupUHEuh2ptTQvKyer3fl2JQ6VmHRrkvLUONTX
tWvXjl1nk0Lu161bN13eI1g8MCcnhz1mpjfZ3dM8mSlfvrxRzSMWL16sy3sR
gwZKXd4UK3ywlsJeSi1TpozRZ7H0GDhwIBsZ9Z4eJClt3bq1FTVv2LBhlFrt
2rVNzH03c+ZMlhnDG4hsThU7OzuzrgWZxoqaZ26d5jehCmsttJsBAQHScLPq
lKCD0Wg58/dBTp06xULo9IE55IgRI6QxHz58yJ3QhOaxai1XrpyJSVEY5FdG
d9k04mvewYMH7e3tT548mVIsoVZ9+PBhtXNRZPjuu+9+++03tXMBrMPQoUPv
37+vdi5UICkp6cCBAyR7NKBYsS+14rx5qVmpf2f8bZWkGL///jsbXGgU/uGH
Hy5dukSjDAkeOdjgwYPZIjq6pauwudRatGjBZzCLiYmhsYzGdxbfqObFxsay
G5eNGzem/7/77rtG80O2yZ7nr1Gjxt69e/llxidPnmzbtu3NN9+UTuDm7+/P
Jt+oU6fOtWvXnuaN++7u7g0aNGA5sZbmbdq0iRcFN5BHjx5dvnyZx6H2w65Y
khfROS+7C5mYmPj555+zda34/sVTa1/NM6tOU/LRPDpjYvG7du0qDTerTimE
Yr766qtOTk5Uwjw8OTmZT8onnTqvVatWurznCtiUL9R6z5w5I53W2ITm8Tlw
lixZwuTq9u3bRq/XUaWzpyupimk3eTj1k9Jvx6SnpydIeOmll3R59/F5SIrk
E29UDtLIq1atYpmJjIzkgVLdtbrmnThxgvJGhalyt6se0DyzgOZpiWKreQza
9wEDBpw6dcpa3alNv2mrHHIY6ccjaKTmr9nq8h7Wkk6EQixcuJAtorG1ZcuW
DRs2ZD/r1atHWpWf5hHDhw/nyRo+TMUhR2JWoMubmLdt27bNmjXjL346ODhI
I3/77bc8zYoVK1KWuOBZUfPIN9goz7bStGlTMiKWyQcPHvBorq6u/KtYJHsk
G8xCiU6dOkmlRTnW1Tyz6jQl/69gsHvlhN4nwOTX6bp169g7y7q8z5pQ5qno
3nnnHXZRkZg7d640ZenHSigOa7q04s8//8yqzITmRUVF8WTpj6pVq9IftEWj
kSlj/AChUxXKP7P6kSNH8jj29vY6k1DB8sjUJ5iOrPv3XX7rat7x48eplyPB
Vru7VRNonllA87REMdc8gsZuGrAuX75slR5VcM0jKIdDhgzhgzuDRj0aK/Uc
72neVYj58+dLzbBBgwazZ89OT09n0kV/G93K9evXWfzatWsbznQnJSwsrH//
/lLbpIGb9INGPcMVt27dKv1Q16uvvnr06NHTp0/T36+//rqSYpESERHBbkpy
nnnmGdKVGzduSKNFRkZ+/PHH7B4oo3LlyqRk+b1iYDHW1Tyz6jQlf80jbWCv
ojRq1Ehvkfw6TU5OJvGjRXqTupBdb9myxTDnK1eu5DEpzf/85z/UAGgRu297
7tw5EztOS6k1SrPUuXPnFMk1NymbN2/mWsggI5006X9PULApIk0gff4hJibG
dGRi+/btPL4VNY8a84gRI6hG1O5oVQaaZxbQPC0BzSMCAgJGjRqVkJCgvFMV
X/M4iYmJbm5u7u7uNKaYjpmWlkaGc/bsWb2pMKwIjf4hISEkbLdu3Srw6Slq
sZcuXbJ1OcfGxrq4uFy8eNHHx0fvlVIp5MYUwcPDw4qfvSgERKvTrKysO3fu
UGv08vKS3tg1hJKiBJ2dnU1USn48efLk9u3bp06doq3Ex8cXmCXqGVgbuHfv
ntXt3QRW1Ly1a9fu2bNH7S5WfaB5ZgHN0xLQPMYvv/yyf/9+5Z1qEdI8AICY
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
7du3V6xYwXyPysGCNK1VXNbVvLi4uA0bNjCD+vzzz6WLaJfZI46ku5MmTaJy
uHbtGtlvw4YNWVLr16+Xxp82bRoLb9269Zo1a8h+qWkNGzaMBTZv3jwyMpJH
1tM88knmeNWqVfPy8uLRuObp8k5wduzYQW3V0dFResGwcuXKmzZtovCzZ89S
1bBAEiGeiFVae4qB5pHj8fijR48u8F62USzTPP48BjFkyBBnZ2fTW4+JiWEl
RsW+bNmyy5cvX7p0iYqIXwXlr25x4dd7PZ8qgjV+2lMeuHDhQhaZTqaot6Ea
3759O/3NAhcsWGDWTkHzAAAioKLmhYSEvPzyy7x7J5Fo06bNmDFj9u/fLz2/
5ph4Ns/e3r5z584ff/wxF7+UvBGfDbUtWrTggXwg++CDD4xuRcBn88hPWrVq
xZYeOHCAh9Nes0ASG2n8X3/9lYVPnz6dhVCRshDpbW6Chkgqt7fffptfz5Gf
JkP1Z/OIbnlQTki92MU6aksDBw4kGZCuMmLECBb/p59+kob7+PiwtcqVK8ev
X4WGhrLIdevW1bsT+tVXX7FF0ktPUs0je2R3/ch+b968KV2Xa96LL74ovfNL
6sXCSUGvXLnCw8kky5cvr/v3I6zWau16mjdq1Cj2M7/nKORg8YQqJFE6CVWr
ViVxpZry9/c3jOzm5tY5D70+Z9GiRWx1avAshE5GmM7p3bdduXIli3nx4kUW
cu/ePRazWbNmZFY8ZkRERJMmTXR5Jz5mzd8OzQMAiIC68+aR6X3yySdsiJRC
Axb5nt7wasGbtl9//bUu7x4lH775wCcdTKWornk9e/a0/4fhw4d37dqVP33U
vn176VWO1q1b64w9rUewm3qUFPt58OBBlsLUqVNNZ0N+mgwRNM8QcrMff/wx
ODhYugpT5Xbt2hmmtmLFCrYifz2BdJqFODk56UUmoWIviX/00Uc8kGsepcAm
+qY8GCoK17z+/ftLw6l9Mp2jMx29VdjVpFdeeaXAMjG3tUs1j61LzJgxo8AN
mUDJ9Mhr165l91j16NChg6Ojo5wUqMcw3As6i9EZ3Lft1KkTBUofJT106BBb
1/Bldn6WZNZEzdA8AIAIqP4VDCI8PHz16tW9e/eWPvnMOmHpY3tyNO/hw4ee
np7Ozs40TG/evJknyJ+gZgMfDan53RVSXfOMQmM35TwsLIzHJ9lgi8hejhrA
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
87QENI+xdu3aPXv2KO9UoXkAAIVYUfPCw8NHjhwZGRmpdherMtA8s4DmaQlo
HhEUFDRq1Kj4+HjlnSo0DwCgECtqHnHo0CGSnNjYWLU7WjWB5pkFNE9LQPMi
IiIGDBjg6upqlR4VmgcAUIh1NY9YvXo19XLF2fSgeWYBzdMSxVzzyPG++uqr
gwcPWqs7heYBABRidc0jdu3aNXbs2PPnz6vd6aoDNM8soHlaojhr3rFjx0aN
GnX8+HEr9qXQPACAQmyheYSXl9e0adMmTJiwbds2Dw+PgICAOxoiODjYxFJS
XEdHR8vW1SQFFte+ffssWxcUPqZrZMiQIf7+/patW+Sg3QkMDLx48eL69etH
jx49f/586uis25FC8wAACrGR5jGCgoJIeBYsWDB16tRJGmLy5Mkmlg4ePHjg
wIGWrVsMITEYNGiQ2rkA1oFsZ8yYMWrnovCgnm3hwoWHDh0KDQ21RRcKzQMA
KMSmmgcAAMBioHkAAIVA8wAAQEygeQAAhUDzAABATKB5AACFQPMAAEBMoHkA
AIVA8wAAQEygeQAAhUDzAABATKB5AACFQPMAAEBMoHkAAIVA8wAAQEygeQAA
hUDzAABATKB5AACFQPMAAEBMoHkAAIVA8wAAQEygeQAAhUDzAABATKB5AACF
REVF3b9/X+3ODAAAgD7UOVMXrfYoAQAowsTFxYWEhKjdmQEAANCHOmfqotUe
JQAARRjqSXx8fNTuzAAAAOjDOme1RwkAQNHGz88vISFB7f4MAADA/6BumTpn
tccHAECRJzo6OigoSO0uDQAAwP+gbpk6Z7XHBwBAkSc7O9vX1zcmJkbtXg0A
AMD/Q4JH3TJ1zmqPDwAALZCWlnbjxo34+Hi1+zYAACjuUFfs5eVF3bLaIwMA
QDukpqZSx0KnkGr3cAAAUHyJiYmhk27qkNUeEwAAWoNOHn19fYOCgvBGBgAA
FDLU8VL3S50wruMBAGxEdnZ2dHS0n5+fj49PSEjI/fv3/wAAAGAzqJulzpa6
XOp4qfvF83gAgEKATi3j4uKioqL+BgAAYDOom6XONhPz4wEAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAECxwdvbe69JMjMz1c5j
USInJyc4ODgmJkbtjAAAAACguDNkyBCdSR4+fKh2HosGISEhvXr1evHFF1m5
NWrUaNq0adnZ2WrnCwAAAADFFK55nfIhISFB7TwWATw8PCpVqsRKsmzZsiVL
lmR/9+nTJzU1Ve3cAQAAAKA4wjSvZcuWamekCJOZmVm1alUqxpdeesnT0zM3
NzctLW3BggXM9KZOnap2BgEAAABQHFGueXFxcd7e3l5eXiZu7yYkJPj6+pIC
xcbGFpigv7+/NBr9Tek/evQov/ikVXfv3qUMpKSkyMnwtWvX7O3tlyxZQjmX
E79AtmzZQmVYsmTJO3fuSMO/++47Cn/xxRdlZgwAAAAAwIqYq3nt27cnb7ly
5Qr97e7u/vbbb/On+J555pkFCxZIIycmJi5fvrx169a0iEerUaOGo6OjNFp8
fHylSpUaNGjg4eFRr149pkxTp059/Phx//792Q1QWov0Ty8zf//996BBg154
4QWegUaNGh04cMBE/slFS5UqxeIPGDBA5l6bplWrVpRav3799MIjIyPt7Oxo
0bp166yyIQAAAAAA+ZireY0bN6b4J06cOHXq1LPPPqv3vsbu3bt5zLNnz1as
WJEvqlChAvcxYtmyZTxmdHQ0C6xWrRqPQILUo0cPaeK9evWS5oTyQGmyRTVr
1mzRokWZMmXYzzFjxuSX/02bNvEES5cubeIioUyys7OZyx08eNBwabdu3WjR
119/rXArAAAAAADmYpnmffbZZ+RIJUuWHDt2rK+vL8lSfHz8sWPH6P885p07
dyhCgwYNyKzu37/PAj08POrXr08pPP/88/wmL9c8SvP06dN3796tU6cOC5kz
Zw5F69u3L/1dqlSp3NxctkpERARzvCZNmly8eJEFZmZmsvukxIULF4zm38fH
h2temzZtLCgxPSIjI1lqN2/eZPtCBnvkyJGcnBz6SYJHiyj/yjcEAAAAAGAW
TPPKli3b0YARI0YYxmeaR5QvX97Z2dl04teuXXvy5Ile4Pnz51kK5EIshGve
Dz/8wEKGDh1KP9955x3mddu3b2cR+Hx0/fr1o5+VK1cOCwvTS585YZcuXfLL
1ezZs6tUqfLmm2+6urqazr8cvLy8WN7I9+jne++9x34eP36cfs6bN4/+btWq
lfINAQAAAACYhYl584zKCde8/fv3m7ut7Ozs+/fvu7i4sBQWLVrEwrnm8Utw
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
QPO0h/yqhOapAjRPZKB5wgLNExZonshA87SH/KqE5qkCNE9koHnCAs0TFmie
yEDztIf8qoTmqQI0T2SgecICzRMWaJ7IQPO0h/yqhOapAjRPZKB5wgLNExZo
nshA87SH/KqE5qkCNE9koHnCAs0TFmieyEDztIf8qoTmqQI0T2SgecICzRMW
aJ7IQPO0h/yqhOapAjRPZKB5wgLNExZonshA87SH/KqE5qkCNE9koHnCAs0T
FmieyEDztIf8qoTmqQI0T2SgecICzRMWaJ7IQPO0h/yqhOapAjRPZKB5wgLN
ExZonshA87SH/KqE5qkCNE9koHnCAs0TFmieyEDztIf8qoTmqQI0T2SgecIC
zRMWaJ7IQPO0h/yqhOapAjRPZKB5wgLNExZonshA87SH/KqE5qkCNE9koHnC
As0TFmieyEDztIf8qoTmqQI0T2SgecICzRMWaJ7IQPO0h/yqhOapAjRPZKB5
wgLNExZonshA87SH/KqE5qkCNE9koHnCAs0TFmieyEDztIf8qoTmqQI0T2Sg
ecICzRMWaJ7IQPO0h/yqhOapAjRPZKB5wgLNExZonshA87SH/KqE5qkCNE9k
oHnCAs0TFmieyEDztIf8qoTmqQI0T2SgecICzRMWaJ7IQPO0h/yqhOapAjRP
ZKB5wgLNExZonshA87SH/KqE5qkCNE9koHnCAs0TFmieyEDztIf8qoTmqQI0
T2SgecICzRMWaJ7IQPO0h/yqhOapAjRPZKB5wgLNExZonshA87SH/KqE5qkC
NE9koHnCAs0TFmieyEDztIf8qoTmqQI0T2SgecICzRMWaJ7IQPO0h/yqhOap
AjRPZKB5wgLNExZonshA87SH/KqE5qkCNE9koHnCAs0TFmieyEDztIf8qoTm
qQI0T2SgecICzRMWaJ7IQPO0h/yqhOapAjRPZKB5wgLNExZonshA87SH/KqE
5qkCNE9koHnCAs0TFmieyEDztIf8qoTmqQI0T2SgecICzRMWaJ7IQPO0h/yq
hOapAjRPZKB5wgLNExZonshA87SH/KqE5qkCNE9koHnCAs0TFmieyEDztIf8
qoTmqQI0T2SgecICzRMWaJ7IQPO0h/yqhOapAjRPZKB5wgLNExZonshA87SH
/KqE5qkCNE9koHnCAs0TFmieyEDztIf8qoTmqQI0T2SgecICzRMWaJ7IQPO0
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
8KZt+/btnxrTPIpDQ+GsWbMMtwjNk4/Cm7bDhw9/9OiRoeaRy1HiXl5eLVq0
0LsFD82TifKbtvv37zd9Ne+ll1568ODB+PHjq1evzkKgeXKwyk3bwMBAqiAT
tUO88MILu3fvfu2119hPaJ4coHnaQ35V5qd5pBBPoXk2Q6Hm0bntU2Oa9/nn
n//999+tWrUy3CI0Tz4KNW/06NGZmZmGmlejRo21a9empqbSJjZs2NCrVy++
CJonE+Wad+TIEX9///wOTHI8Mo2FCxd26NDh+vXr7KCD5snBKpoXFBRkWvPK
li27YMGCli1b8hBonhygedpDflVC81TBRprn5eV19uzZqlWrOjo6Ojk50XDm
4ODAFkHz5GMjzWM0btz4u+++I2OhDVEzKFGihA6aJxubal716tXJVdjF8B07
dsTGxrJwaJ4cCkHzypQpc+jQof79+/MLrTponjygedpDflVC81TBRprn5uZG
x/KwYcNq1qxZqlSpXbt2UbSpU6fqoHnmYFPNY5QrV87FxSUnJ4e9MAjNk4nt
NO+ll14i6+CR169fHx0dzf6G5snB1ppHZ6/z58/fvXv3xYsXs7Oz+YrQPDlA
87SH/KqE5qmC7TTP1dWV/6RV1q1bR/6gg+aZQyFoHkEH15MnT3755RcdNE82
NtK8559/Pjw8fMuWLSR7dfPYs2dPbGws/VG6dOl+/fpB8wrE1ppXoUKFZs2a
scqiUyQ67tjUytA8OUDztIf8qoTmqYKNNM/d3Z06QGnIuHHjEhMTddA8cygc
zStRosTvv//u7e2tg+bJxkaaV758eQrfvXu34z+EhoZSJdIf9erVIxWB5hVI
4Tybx3jhhRfoOB06dKgOmicPaJ72kF+V0DxVsJHmkTa4ubnZ2dnxkMmTJ+Nq
nrkUjuYRp06doh5YB82Tja1fweDQ6lFRUexv3LSVQ2FqXunSpZ9C88wBmqc9
5FclNE8VbKR5NWrUoPD33nuPh0yaNOny5cs6aJ45FI7mVatW7fr16+vWrdNB
82RTaJq3YcMGPJtnFoWpeZ06daLGgJu28oHmaQ/5VWlU8+zs7Bo3bvw0TxgM
J/MHylGieVQj1DdSINWR9MIdQWqxcuXKS5cuValS5dlnn23evPmyZcsqVKig
g+aZgxLNK1269MSJE3NycsqVK8feos2PoUOH0rbKlCmjg+bJRqHm0UFx8uRJ
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
NFWvgE4JAGKUYV74MsxLPEVflYZ54StkzANL7r777n/84x9NAmqarJsCahbQ
zclqHlCLgFom65aA/pmsVgH9K6DWybo1oDYB3Zas2wNqm6w7ArozoHbJuiug
9gF1SFbHgDolq3NASQF1SdbdAXUNqFuyugd0T7J6BHRvQPcl6/6AHgjowWT1
DMh75KCnDjKAR4sgugShyLNWsHl4OAySZ5BpPSoHUTwI+f7ZYUhAjzkN/b0e
D+gJp2G/15MBDU/WiIBGOo36vUYH9G+nMb/X2IDGOY3/vSY4TQxo0u812WnK
7zU1oGlO03+vGU4zA5r1e812mhPQ3N9rntP8gJ5K1oKAnv69FjotCmjx77XE
aWlAFGNopGeYF74M8xJP0VelYV74Chnz8L833HBDJDVlyJDhjDPOONMpY8aM
Z5111tlOmTJlyuyUNWtWcp7NiQaT3SlHjhw5c+bUdeXKlSt37tx5nM4///wL
nC688MKLLroor1O+fPny589f0KlQoUIXOxUuXLhIkSKXOBUtWrRYsWKXOhUv
XryEU8mSJS+77LJSTqVLly5TpkxZp/Lly1dwqlixIm34CqdKlSpVdqpSpcqV
V15Z1alatWrVq1ev4VSzZs1aTldddVXt2rXrOtWrV69+/fpXOzVo0KCh0zXX
XHPttdde59SoUaPrr7/+Bqcbb7yxsZPIWbQsMPYw7AHYE69HXGGtR1nPrh5W
BaUeRD15etoUXnqk9AzpuRFQ9FgoFPT453mvXzLgeagTyHlyA9U8m3kk8/Ql
4vKU5eEqyFEenDwgCYc8Anns8agjsPE84xnGQ4vgZJnT8uXLVzitXLly1apV
zzg9++yzq1evfs5pzZo18nFr167Fzb3o9NJLL61fv/5lp1deeeVVpw0bNmzc
uHGT02uvvbZ58+bXnd54440tTlu3bt22bdubTtu3b9/htGvXrt27d+9xeuut
t95+++29Tvv27dvvdODAgXfeeeddp4MHDx46dOiw03vvvXfE6f333//ggw8+
dProo48+/vjjT5w+/fTTz5w+//zzL7744j9OX3755VdfffW10zfffPOt03ff
fff999//4PS///3vR6effvrp559//sXp119//e2331J1GRQjrSWcO5JhXvgy
zEs8RV+VhnnhK3zMA0g8yInlBHJiuUxOgFyWLFmyOgnnznUSy3mcy+WUAucu
dBLO5XMC5wo4nZzoBHUnITpBXbly5co7eagT11Vy8lAnrqvmJK6r6eShDtWp
U+eP0O4ap5Og3T+cPNqp/9P3eaagOwFeCroT4Pn+ySDd+e5HMZ7vZvSdir4j
UYznOwx996DvElQ3YOyY53vkfP+b73DzpCfY8z1pvuvMk55gz/eJ+U4w8Z7v
7wrynu/ICvKe76fyfVO+P+rkyCfq+yPkW+ck8HvFyVOfwO81J4HfG06iPg9+
252gvp07d+5yOgn7HXA6Cfu973T06NEPnDz+iQBT4J8IUPgnAvzGyeOfCPC/
//3v/5xEgB4Cf3USBFKMhnkJLMO8xFP0VWmYF74M8wzzDPMM8wzz4go+6UuG
eYmn6KvSMC98GeYZ5hnmGeYZ5sUVfNKXDPMST9FXpWFe+DLMM8wzzDPMM8yL
K/ikLxnmJZ6ir0rDvPBlmGeYZ5hnmGeYF1fwSV8yzEs8RV+VhnnhyzDPMM8w
zzDPMC+u4JO+ZJiXeIq+Kg3zwpdhnmGeYZ5hnmFeXMEnfckwL/EUfVUa5oUv
wzzDPMM8wzzDvLiCT/qSYV7iKfqqNMwLX4Z5hnmGeYZ5hnlxBZ/0JcO8xFP0
VWmYF74M8wzzDPMM8wzz4go+6UuGeYmn6KvSMC98GeYZ5hnmGeYZ5sUVfNKX
DPMST9FXpWFe+DLMM8wzzDPMM8yLK/ikLxnmJZ6ir0rDvPBlmGeYZ5hnmGeY
F1fwSV8yzEs8RV+VhnnhyzDPMM8wzzDPMC+u4JO+ZJiXeIq+Kg3zwpdhnmGe
YZ5hnmFeXMEnfckwL/EUfVUa5oUvwzzDPMM8wzzDvLiCT/qSYV7iKfqqNMwL
X4Z5hnmGeYZ5hnlxBZ/0JcO8xFP0VWmYF74M8wzzDPMM8wzz4go+6UuGeYmn
6KvSMC98GeYZ5hnmGeYZ5sUVfNKXDPMST9FXpWFe+AoZ8/DX4ErkFJWCCZGA
MLPTSYAwp9N5vwdCT4NCQdFgfqdT4kBBYGknEaCHwApOKSCwspMgMIh/IkDw
L8h+9ZxOwn6NnER9HvyaOHnqE/g1dxL43eIE9f3LKQXyCfaO570OTuK9zk5B
3hPpCfZEeoK9+5086Qn2RHqCveMxT4DnGe//nMR4Q50EeJ7xhjvBeCnoToAn
uhPgpaA7AV4KtJvtJKgT1wnqxHULncR1S5w81InrVjmdnOgEdZ7ohHOvOnmc
8yAnlksBcmI5gZxYbreTQO6UKO6ok/jNI5zntxTwJn47CbyJ34C3n51SkNsp
CTymtYRzRzLMC1+GeYmn6KvSMC98hYx5AwYMgAd8R1Owr0ndTUH8kEQgkrqe
CARt2iRLBpInFkGL5LmFwAltPNsEu7NEOJLv1CLgbXyvV9DG41CQiIKdYBy9
gWzuTlbXZHmC8hAliaM4dkuW71ILslYQtzxxST2TFex/C3bBebNeyfKEJkh7
JFknsfFmnugEdf2SuU49eN7ghDYDnHwvX5ADfXffgGSdxGZIsnzHYLBv8P+S
FTQbmiyPl8FeRN+RKPGR72aUPIgG+xvV5SiJSyXQlI+C3ZJBdvX46glW8r2U
Qlk+8t2YQZtgZ2aQeD30inunTZtGuqfiyclKYSN5SBYne1Qm3XeQSt4giNPq
LA32l/ouU4qLlhDOHckwL3wZ5iWeoq9Kw7zwFTLmgQSrVq2KvVH5EZ9T0o9O
BL777jt1X/w5ffzxx0eOHFEXyu4/qx07dmh4LoXWRy1805LUtPikWrhw4eRT
1KTfCx54LDZBVrSKB2ITyN3u97rzFNWsWbOmJ1WT1FS3bt2rolat40RiuXLl
Sv9ZqWO5YMGC6qb+c8qbNy83BL0+gc46dfGtU+2rP16NGjUCs8O5IxnmhS/D
vMRT9FVpmBe+Qsa8Xr16LV26NMYWBappLOnP6csvv/zkk0/8YNaf0MGDB/ft
26cBtT+tzZs3+xG9P6fVq1cviE3z58+fEJvGjx8/JDYJ8x6MTR06dGgfm1q2
bNk8Nl1zzTVXx6AGDRpUqVLlihhUqVKl4sWL+zcN/oSKFi16wQUX6D2HP6dc
uXLFTnr/+Mc/aBXh3JEM88KXYV7iKfqqNMwLX4Z5hnmGeYZ5hnlpxTCmVGWY
l3iKvioN88KXYZ5hnmGeYZ5hXloxjClVGeYlnqKvSsO88GWYZ5hnmGeYZ5iX
VgxjSlWGeYmn6KvSMC98GeYZ5hnmGeYZ5qUVw5hSlWFe4in6qjTMC1+GeYZ5
hnmGeYZ5acUwplRlmJd4ir4qDfPCl2GeYZ5hnmGeYV5aMYwpVRnmJZ6ir0rD
vPBlmGeYZ5hnmGeYl1YMY0pVhnmJp+ir0jAvfBnmGeYZ5hnmGealFcOYUpVh
XuIp+qo0zAtfhnmGeYZ5hnmGeWnFMKZUZZiXeIq+Kg3zwpdhnmGeYZ5hnmFe
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
HjmWjQFbrK+c+bl7DnQU28IBp0yJuqJBoR0iledTTjnFLSoExcmPssubannw
wQfnzZs3ceJEnC+8XGX/hVTALcCDcEqkdAAP9+rzMvmtb31LLalS1QsdBXBR
8fGhOskW4MGDB+tIulkcnDmWE7UXFaZU8vP/fC5INf7RFMq9U6dOvaeQcvw2
+1PK4bsvYB7Ckb2NK5PKJ22rzs6q8lVLFfM2PFn7pqxiXu3Lepm0HTt2rI7h
Mb///vuz4WLp0qU0HfW6fPnySZMmZawsW2vjDe3tt9+mAs4777wveEODghnT
e/nll5977rl4Q/Ma8eoOK1IZMcMCBkqDe6KqcNJWPNtWJmoeXzVp0qRx48YN
C9ltt920iL+Qyd57742LgNBll10G87IRFZbEpsrQoUPV1QknnNCmTRtwBXtw
1KGHHuocEeEWOIevYF7Hjh0R0UEHHSQ58Z966qktW7aMEbxWrVqhJpW/zz77
uGWHHXbAlnGni3li8i7WVJxIwoOJ7lAoRhK5SojnNfm56aabQGZgSYAGDRoo
Qtu2bRVtr732UkyUuKaFZF0OswE2qKYgmjU+O0hgzzH7KWBe586d3QXe5EGd
AFolAmknn3wykof6SO/KK6/MvolgXgb91KFsbLPNNt8pRDFlOyXaZJNNFF81
6kKAUMHlXACR4GeZGTBgQBycXVZIxhgzgpfRvCip7Ld1Dg6zPO+MM87Ae2oG
12VVXuyo3HfffRisRLtIqK9coffnP//57cpEoTapTFRvddK2Kl+pVDFvw5O1
b8oq5tW+1P4WjBkzZsRsnb4h3XJMLztnM2QXDxc1hQkU4d955x00gtPmzp1L
k65atSoeLmqKITua9L333jv//PPdHhcYH3/8MborvaFRsmCSFn7mmWfQoCQA
YYVbMCp3drbxxhs3b968WbNm2Yix//77B0K+973vwbCmTZtSuAp76aWXSm5E
IbEhfM0118SgCpg54ogjgoiIzrODrEARjhLt7rvvHlcXJ510EtyCMf6FRhLC
P/5CSv3797/88sudK07cQEhXgC233DK+MORnv/32o3OdbLXVVnGIJvMoMb6x
br/9dlXdr18/t4BAqWy33XbC1KlTp0OHDrKEY/FnJm179eqVeVtZAmMgNnaS
yc8LKa2U5Jg50HinlUSjRo28HFQabpQBEbpdV4H98X/hJ3SMHxA1owhZZ4jx
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
Hn1lR0ZspCxatChOaQWg/rDNp59+eumll8aJhgBQsLScfPPNN9PLoPHyyy+/
4447StIrvaEBA3999tlnWOXOO+/EmRUaVFknzs4OOOCAvQoBHsE8zQFRWrRo
ccwxx0gFRWTSFuMhPVX3/xZy9dVXe0kiOriV0TyEBs9OOOEEyNS7d28/ReWI
3zAM+vpeIVLJOkCwJ3VsIy1QlwWHhxxyCFDs0qVLhvLq1avnRiUdOHCgprnx
xhu9omVMQihUZmS1Tp06SG/bbbeNdWWZibO2LbfcEt3JiRy2a9eue/fu2X+R
PbDBvNMKQVk//OEPY19FYyG68F6WyWWDRpyIuSIn99xzz/Tp05F/JkZh3qBB
g3QDlBW/HiA5gCdjMqMeYloQ3DpR1bLdoEGDb33rW8qrJuUkxBta00tjEjmY
l9G8zM/G0sua2y7i4yxjgDIAmN1Ii00vRGfGdeVG2jXNpzgJ5kUef/xxndmr
r8IetdFGG1W40xZLV52dVeUrlSrmbXiy9k1Zxbzal9rfaUv9ZUQOyD3wwAMZ
sst0pN7i54MPPpgACxcuLL2hxThwzefe0ErSox/p2eXLlwM5LFRTWORDApn/
XbBgAT1CKX/44Ye/+93vrrrqKgGQnpMKDapU7uyMoCngge522WUXQKU5nOyx
xx5NmzaNbWS1kTnKLMwj8MYbEvIF8w4//HDckj0dHTp0wDluBHuxjdyjR49T
TjklM6o4J742MF7jxo1zAvCctGnTBmKhneOOOw6oNGvWLG4jMhcMgdCXFAG2
5gNRbdu2BTMYEsvpP4AqS+CcuCW7HuAfvIR5UCrOziClnwBPKmBPcvKfjbEy
Cc+cx+hc1un97HPJQF92Rmg4fUYH0B/wfOb78JjeoggaReSx8CxLOxSySyHl
tPjOxcCjAm6xxRZ4VVPKkrzJgET1JW+hyz+XeGErDfrFpl+mkstJW73r5z//
eVYYyr/2ih9b/TzTtdlhUXo3K0fznnjiidBOZm/BlTaqsEfNmjWrwtc1mP/P
7KX89U7bqrOzqvwXpIp5G56sfVNWMa/2Zb3YzaOMMjm7ZMmSckxv/PjxdO6n
n34ay8lLly4N6ZXe0CggwPPZZ59l7jVWVl577bXsvV29evXkyZMHDRrkJN7Q
Mir48ssvU6DnnnuuG5EeLVxTDA9WiHkwY0plgtmg3f9TiIaIz7J/+qd/QmgH
HHBA9+7dQYs3YaA0m22R8Lhx41TUiBEj/IWOWrduLTw8QFMqtn379mDv+OOP
R3QY8rDDDsNXmninnXaKKeYcW7ZsiSRhnsdNDAIgt2x6/fGPf1y3bl0UBIHO
LQR9ZUetWs0KQEn369dvs802g3OiikVlR2QVvx7bbbfd5ptvLksx1HzQQQeJ
H0phsCzMQ1YnF6IIP/zhD3NUXkXIfPoZhYSdziycZUgUcQ0ePHjSpEka9667
7gL2N9xwA62hw4gKpwkp0QaFqNXwJ8ZDd5kWz8CpGqtXr96mm24qt1S8G90u
UZiH3zJjmwG90udFUs9onvPsE4nni2y2VVFSl2ctpXEx3h8KY8hBuHL4rsQ8
F5988snZs2fr3hnQWyeYh2bbVCZK8Z/ZzatiXlXWiVQxb8OTtW/KKubVvtS+
Fwzvc8lRJfFwgfdQ34UXXrhy5UoaHD7VFJaTH3jggQzZQUFq0ZXly5cjvb/2
hpYtG/TsRx995B0y5HPLyVStOHHCokWLoOA555zzwQcfSB20vPHGGxVO2la+
0xZ/ZiI1hkp2K0TnR3qUdWwjg4qBAwdmYR6Beddffz3SUwn+AietWrXK6j7g
1LVrV2zWpUuXY445BjRuvfXWGK9nz56JP7ZEskStU6dOuMuzBskOPPDAjh07
IkxM2L9/f6ACh1wXG+hCLIia8sWWgrVo0cJFjVW3kO23395dO+ywAyz8zne+
40Q8MU6y5ZZbglVMKIeK065du9hCOb6QWEiWfymG7pwAvJNOOinuPEJ9P/nJ
T1Lb2abhSuBQW2tf/wqvWWMZxk+RqD0FlxP5yYztjjvuKEvKDur222+/PQqR
c5in6rBcdoL4Usj0a6ZrSbguy/NKJx1ZXFpus80t2SQih/Kp+6m0GMorTR9n
L23pyjauzTJfSZw7Pv/885VjXsOGDX9QmShj4LM6aVuVr0iqmLfhydo3ZRXz
al9qGfO8vYFWzedzrwiNEl+4cCHdVy7DQzWrV69e0xtaNlzEG5q3RCwn6y1A
Lqz4yiuvzJs3j6p146233hrLyVdcccVdd92VMb25c+fCKnjw6aefTps2TZEr
3IJx9dVXf1aZUHDhkKDd7rvvngnQTNr26tULwATzQN3IkSNjMW/s2LEwD2QC
jxhUQVZHHXVUbCC3bt1aJfTp0wc9YoYAWyZwQZdUxA/wYJX4Y/AE/EC1GEiJ
K7TDDz8c84AWbXT77beDkzvvvBMuurF79+4aSFbDdfXq1ctivG0KcUW6SMM5
zIujXuQpibjnyNo8SNa7d29sJs/BvACSZkKSyt6sWTNw6Fyu0GaHDh2yiRhk
HnLIIYixdyEtW7b0Mxs9xKNxnccHRxbmZR5ZbmOQ0FHMMqnbq4p4lCu3TmQF
YPZf0Psl5pXua0utVDJexvQymqex1KrOPGrUqKlTp/pI0WNLqylrDuI5z4aL
jOaR4A3M017fqEx8PVX4uvbQVZ2dVeUrlSrmbXiy9k1Zxbzal/UyaTt+/Hg8
9stf/vKhhx5atmwZ/Q7GaCggt3LlSv/SlQKs6Q1NMPqRLl6xYgXSwDkCiJBS
+PDDD2NEhb4AOcuXL7/pppuGDBkSVgR1cZc2f/78OXPm0Okff/yxqCo0qCKe
HSqTeOD6X//rfzlmNC/7Q7NtFnRlY+ngwYPVRgAvx+uvv17xMYaGC/bAzubN
m7sRO7mOjjxEmTzddtttM2SXLR4xvOxBEwZHgSiwJ7mjjz4aKaHBsJAIMaT6
D5A4gVhQTbogDUfJtiJkbpT4Ka1sa5Wc4oCofQuRQ1fityKjeWAvmCeJrMpD
R/EG6y8kecQRR0gOH8LOjoW40rYQIAcX+/bt68bjjjsOfGZIULuLB7zFkRza
BJ/xfyEPOrkawM+KJrf+VdKtttpKtiUK1ZQ3GyvgnK8DaP3bQuLmrFySVyLf
RcVmIldyDObhVU2Gxu+++26dOWN0jn9aQ8o9FyoW0pSYl6lbnzNvViZqbIvK
RLtUnZ1V5SuVKuZteLL2TVnFvNqX9bIFw2OeSU9KM2N6GbJ77rnnMmR38803
X114Q9MlZs6c+fbbbyO9V155BadlGR69kDE9Svmee+4Bgeeff/6LL774wgsv
ALBPPvnk9ttvp6xrCtPKUow3NLcLExvL693ZGcF1evs/FhI3Z7AEkCA3mKfI
amzQoEEjRowoh/Iw8Lhx41QOOIl9kjDennvuefjhh59ZuAZDbnvttVfDhg1D
OIBHtNmNu/fee7dp02bo0KEHHXQQ9OrVqxdScsW9ArixVatWqEkz6RXyEDtm
QKtz586qmkIMmsr29ttvX69evWDq1ltv/d1CAF5WGNavXz9DiMjKCWZDaBBO
cj169Mg0K06L1zN0pNWyheHEE09MueLOwy19+vSRmTggQ++gN5oifkDcpaIc
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
z4bmuf1g5Zo1a9YVlbfffpu/H3/88WeffbatqGzdunXXrl179uz50WPPwZO8
48Gjjz5Kq4jmjCTNix5pXvwIX5XSvOiJWPOmTp26YMGCezzu9vi7x10eSwu4
88477yjg9ttvv62AW2+9dcmSJSwEY24vwAIMwm4pwE/lZH87n7PwqzFmCP/r
YWekxR43FLBo0aLrr7/+uuuuYyGYGvaPMa7zuNbjbx7XeCxcuJC/foDF/K2A
awogbEEB8+fPn1fA3Llz58yZw9+FBViAYQEGYbMLQIf87q+ZBViMH2bWFAzL
K2DGjBlXF0CDmV5AITF+2DQPawNXeUwtYMqUKX7Ar8ZM8ZjsMamA3NzcKwtA
CaYUUEiM339oejnOY6xHTk7OxAKCYeMKsBhjzJgxowu44oorLi+Af1nYmAIs
wCBgVAF/KeCyyy67tICRI0fyLz/MD/BjRhZwySWXXFzARRdd5Pesotz8yyIT
YvywER6m6Obtwwq44IILzj//fNZbmB+wf4xx3nnnnVvAUI8hQ4YMHjyY9RZ2
XgF+gB9jDPIY6DHAo78HxUWTiOaMJM2LHmle/AhfldK86IlY80ijjzzyyME2
oV9++eVnj7179/7k8eOPP+7evfsHj++///47j127dn377bf/8fjmm2++/vrr
rzzsWhLs3Lnz888/37Fjx/bt263TY6vHli1bPvX4+OOPN2/e/JHHhx9+6F//
2rhx4/seGzZseO+99971WL9+vXWhwFtvvbXWY82aNatXr37T49///vcbHnZB
7VWPV1555eWXX/6Xx4svvviCx/PPP//cc8/902PVqlXPPPPM0x5PPfWUf0Xv
iSeeWOHx+OOPP/bYY496PPzww//weOihh/7v//7PupUeeOCB+++/f7nHfffd
Z5cUly1bFlTroE77kux7b9B4bwy4rm+wQXf1XTRomEFv9K0y6IE0Od/rfKPz
Jc0MzfeuoJUFXcs3qKARBV3IN5yg2/jG4otKUD+CytGvXz+7un3OOef08ejd
u3evXr2spzQ7O7tHjx7dPbp16/bfHl27du3SpUtnjz/96U/+dfmzzjqrg0f7
9u3btWvX1uPMM89s3bp1K48zzjjjdI9TTz21ZcuWp3jYjQEtPE488cQ/evCd
bd68eTOPpk2bWudw48aNTzjhhIYeDRo0qF+//vEe/s0Jxx57bN26det41K5d
+5hjjjnKo1atWjU9rJv6yCOPrFat2hFHHFG1atUqHnafA1SqVKlixYoVPMqX
L1+uXLmyHllZWYd7lClTpnTp0pkeJUuWPMyjRIkSB9tXf/bZZ9NmojkjSfOi
R5oXP8JXpTQveiLWPHI3NpK/n7n5V3x2exQub+ZvCfIW9Ddf4bZ44G+feByU
xb3zzjsmcuZyb3n4ImculyBy5nImcvDSSy8Fde55D7s8FzQ6k7pCjM6kDj1+
2MOXOvM6u6RoXnefhy915nV+f6l5XYLaWa+mCV6C3d1Y0Eu5yCPB7oL9jcFe
RL9v0O8Y9Lv7zPH8Xr79NS/Ya+f3xfmmZ7Ln97/5vWrBvrIE37vEI9jrleB7
F3gE+6ZM+cz6gn1N1tFk4neOh299Jn7ZHiZ+3TzQFRO/wt2vvYfvfnYpv7VH
UP9OO+20Uz1MAk/2OGlfCfwvD5PAph5mgCaBjRo1OigPPNrDVNBs0FQwaIP7
C2Elj0KEsIyHf9/F/k5IMdJmojkjSfOiR5oXP8JXpTQveqR50jxpnjRPmpdW
8SleSPPiR/iqlOZFjzRPmifNk+ZJ89IqPsULaV78CF+V0rzokeZJ86R50jxp
XlrFp3ghzYsf4atSmhc90jxpnjRPmifNS6v4FC+kefEjfFVK86JHmifNk+ZJ
86R5aRWf4oU0L36Er0ppXvRI86R50jxpnjQvreJTvJDmxY/wVSnNix5pnjRP
mifNk+alVXyKF9K8+BG+KqV50SPNk+ZJ86R50ry0ik/xQpoXP8JXpTQveqR5
0jxpnjRPmpdW8SleSPPiR/iqlOZFjzRPmifNk+ZJ89IqPsULaV78CF+V0rzo
keZJ86R50jxpXlrFp3ghzYsf4atSmhc90jxpnjRPmifNS6v4FC+kefEjfFVK
86JHmifNk+ZJ86R5aRWf4oU0L36Er0ppXvRI86R50jxpnjQvreJTvJDmxY/w
VSnNix5pnjRPmifNk+alVXyKF9K8+BG+KqV50SPNk+ZJ86R50ry0ik/xQpoX
P8JXpTQveqR50jxpnjRPmpdW8SleSPPiR/iqlOZFjzRPmifNk+ZJ89IqPsUL
aV78CF+V0rzoiV7zEJUDthmTwL0eJoE/emCA33v4+mcG+I2Hr39mgAn6ZwZo
+mcGaOJXuPtt8CjE/dZ4mPX54ve6h1mfL34vefjWZ+L3nAfiV4jymfUVonxm
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
4gAcVG1Onz79f0S0hJ/WdrqInPDfnXTPjVwcOaiTmxCiaKTbYsQBCF+VnDbH
jBlz6aWXXiaigtK+8sorQyassWPHjh49eoyICkp7ypQpYarmqquumjhx4gQR
IRQ4xR6ydqaIyAlTNX/18k66f2oXOw7qB+xfpXnOE74qqf1zzjmnbdu27UVU
tGnTBtOj5MOcDAcOHNi7d+8+IioobVwijIRPnTr1z3/+8wgRIRQ4xR7mzEZY
up202MEXJ0zV/NXLO/9PREteXl7I2jHSbTHiAISvSr5u/fr169ChQ0cRFZje
ZZddFlLzBg8ejIf3FVFBaYfXvIsuuujPIkIocGmes0jzXEaaFzPCV6U0L3qk
eS4jzXMZaZ7LSPNcRpoXM8JXpTQveqR5LiPNcxlpnstI81xGmhczwlelNC96
pHkuI81zGWmey0jzXEaaFzPCV6U0L3qkeS4jzXMZaZ7LSPNcRpoXM8JXpTQv
eqR5LiPNcxlpnstI81xGmhczwlelNC96pHkuI81zGWmey0jzXEaaFzPCV6U0
L3qkeS4jzXMZaZ7LSPNcRpoXM8JXpTQveqR5LiPNcxlpnstI81xGmhczwlel
NC96pHkuI81zGWmey0jzXEaaFzPCV6U0L3qkeS4jzXMZaZ7LSPNcRpoXM8JX
pTQveqR5LiPNcxlpnstI81xGmhczwlelNC96pHkuI81zGWmey0jzXEaaFzPC
V6U0L3qkeS4jzXMZaZ7LSPNcRpoXM8JXpTQveqR5LiPNcxlpnstI81xGmhcz
wlelNC96pHkuI81zGWmey0jzXEaaFzPCV6U0L3qkeS4jzXMZaZ7LSPNcRpoX
M8JXpTQveqR5LiPNcxlpnstI81xGmhczwlelNC96pHkuI81zGWmey0jzXEaa
FzPCV6U0L3qkeS4jzXMZaZ7LSPNcRpoXM8JXpTQveqR5LiPNcxlpnstI81xG
mhczwlelNC96pHkuI81zGWmey0jzXEaaFzPCV6U0L3qkeS4jzXMZaZ7LSPNc
RpoXM8JXpTQveqR5LiPNcxlpnstI81xGmhczwlelNC96pHkuI81zGWmey0jz
XEaaFzPCV6U0L3qkeS4jzXMZaZ7LSPNcRpoXM8JXpTQveqR5LiPNcxlpnstI
81xGmhczwlelNC96pHkuI81zGWmey0jzXEaaFzPCV6U0L3qkeS4jzXMZaZ7L
SPNcRpoXM8JXpTQveqR5LiPNcxlpnstI81xGmhczwlelNC96pHkuI81zGWme
y0jzXEaaFzPCV6U0L3qkeS4jzXMZaZ7LSPNcRpoXM8JXpTQveqR5LiPNcxlp
nstI81xGmhczwlelNC96pHkuI81zGWmey0jzXEaaFzPCV6U0L3qkeS4jzXMZ
aZ7LSPNcRpoXM8JXpTQveqR5LiPNcxlpnstI81xGmhczwlelNC96pHkuI81z
GWmey0jzXEaaFzPCV6U0L3qkeS4jzXMZaZ7LSPNcRpoXM8JXpTQveqR5LiPN
cxlpnstI81xGmhczwlelNC96pHkuI81zGWmey0jzXEaaFzPCV6U0L3qkeS4j
zXMZaZ7LSPNcRpoXM8JXpTQveqR5LiPNcxlpnstI81xGmhczwlelNC96pHku
I81zGWmey0jzXEaaFzPCV6U0L3qkeS4jzXMZaZ7LSPNcRpoXM8JXpTQveqR5
LiPNcxlpnstI81xGmhczwlelNC96pHkuI81zGWmey0jzXEaaFzPCV6U0L3qk
eS4jzXMZaZ7LSPNcRpoXM8JXpTQveqR5LiPNcxlpnstI81xGmhczwlelNC96
pHkuI81zGWmey0jzXEaaFzPCV6U0L3qkeS4jzXMZaZ7LSPNcRpoXM8JXpTQv
eqR5LiPNcxlpnstI81xGmhczwlelNC96pHkuI81zGWmey0jzXEaaFzPCV6U0
L3qkeS4jzXMZaZ7LSPNcRpoXM8JXpTQveqR5LiPNcxlpnstI81xGmhczwlel
NC96pHkuI81zGWmey0jzXEaaFzPCV6U0L3qkeS4jzXMZaZ7LSPNcRpoXM8JX
pTQveqR5LiPNcxlpnstI81xGmhczwlelNC96pHkuI81zGWmey0jzXEaaFzPC
V6U0L3qkeS4jzXMZaZ7LSPNcRpoXM8JXpTQveqR5LiPNcxlpnstI81xGmhcz
wlelNC96pHkuI81zGWmey0jzXEaaFzPCV6U0L3qkeS4jzXMZaZ7LSPNcRpoX
M8JXpTQveqR5LiPNcxlpnstI81xGmhczwlelNC96pHkuI81zGWmey0jzXEaa
FzPCV6U0L3qkeS4jzXMZaZ7LSPNcRpoXM8JXpTQveqR5LiPNcxlpnstI81xG
mhczwlelNC96pHkuI81zGWmey0jzXEaaFzPCV6U0L3qkeS4jzXMZaZ7LSPNc
RpoXM8JXpTQveqR5LiPNcxlpnstI81xGmhczwlelNC96pHkuI81zGWmey0jz
XEaaFzPCV6U0L3qkeS4jzXMZaZ7LSPNcRpoXM8JXpTQveqR5LiPNcxlpnstI
81xGmhczwlelNC96pHkuI81zGWmey0jzXEaaFzPCV6U0L3qkeS4jzXMZaZ7L
SPNcRpoXM8JXpTQveqR5LiPNcxlpnstI81xGmhczwlelNC96pHkuI81zGWme
y0jzXEaaFzPCV6U0L3qkeS4jzXMZaZ7LSPNcRpoXM8JXpTQveqR5LiPNcxlp
nstI81xGmhczwlelNC96pHkuI81zGWmey0jzXEaaFzPCV6U0L3qkeS4jzXMZ
aZ7LSPNcRpoXM8JXpTQveqR5LiPNcxlpnstI81xGmhczwlelNC96pHkuI81z
GWmey0jzXEaaFzPCV6U0L3qkeS4jzXMZaZ7LSPNcRpoXM8JXpTQveqR5LiPN
cxlpnstI81xGmhczwlelNC96pHkuI81zGWmey0jzXEaaFzPCV6U0L3qkeS4j
zXMZaZ7LSPNcRpoXM8JXpTQveqR5LiPNcxlpnstI81xGmhczwlelNC96pHku
I81zGWmey0jzXEaaFzPCV6U0L3qkeS4jzXMZaZ7LSPNcRpoXM8JXpTQveqR5
LiPNcxlpnstI81xGmhczwlelNC96pHkuI81zGWmey0jzXEaaFzPCV6U0L3qk
eS4jzXMZaZ7LSPNcRpoXM8JXpTQveqR5LiPNcxlpnstI81xGmhczwlelNC96
pHkuI81zGWmey0jzXEaaFzPCV6U0L3qkeS4jzXMZaZ7LSPNcRpoXM8JXpTQv
eqR5LiPNcxlpnstI81xGmhczwlelNC96pHkuI81zGWmey0jzXEaaFzPCV6U0
L3qkeS4jzXMZaZ7LSPNcRpoXM8JXZYLmdSqU9NpRbCia5vU7EOn2o5hQNM27
6ECk145iQ9E0b+KBSKMaxYkiaN6sA5FeNYoT0ryYEb4qg5rXtm3bNoVy1lln
pVuR4kARNA96FEp2dna6/SgmFEHzhg8fPrRQzjvvvHT7UUw4WM2jKnNycv5S
KKNHj5bppYSD1Twsji/alEK5+uqrJXspQZoXM8JXpa95KFyZMmVKFErr1q3V
p5c8B6t5uEe3bt0O2w+rFFvOysrStd2UcLCad8kll/xq7QSpWbPmyJEj061I
ceBgNQ9P6Nq1a+G106xZM13hTQkHq3kLFy486aSTCq8dvpILFixItyLFAWle
zAhflUHNK126dEahSPNSQtE0b//qqFKlCnZny4cffrg0LyUUQfO6d+9e+Ben
Ro0a0ryUUATN69KlS+G107RpU2leSiiC5p144omF1w7fR2leSpDmxYzwVbm/
5rVp06brvlSvXl2al0KS1zykrlevXsuWLfvv//5vaV5qKYLmIRKoQtffoGbN
mkcccYQ0LyUkqXks9+/fnyquVq2aNC/lJKN5JUqU6NGjB7XTokULad7vgTQv
ZoSvyv0179NPP03YGl80aV4KSVLzMjMzn3vuubvuuuuwww4Lip80LyUUQfP4
XlAdv/VlHDhwYLly5aR5KaHImodFXHXVVe+//z4bmTNnzhtvvFGrVi1pXmpJ
RvPuvffel19+mdqhyu68884yZcpI81KLNC9mhK/KBM3jZPjQQw+VLVv2yCOP
rFkACiHNSyHJaB51sWrVqgceeCDoeNK8FFIEzWvXrh057tRTT60ZoGrVqitX
rrztttuomurVq0vzUkKRNa9nz56cGI8++mj7vvANWrt2rTQvtRRB8/7rv/6L
H0F43fPPP0/eoTpIQ5s3b2aNNC+1SPNiRviq3L837/XXX1+8eLH/UzeINC8l
FFnz+IX79NNPL1myZP+qkealilTdm/fHP/5x06ZNlrl0b16qKLLmDRo0iBOj
/4v1lltu2bZtmzQvtRRB8xo3bnzyySdTNXXr1vW/OwMHDvz000/t6q00L1VI
82JG+KrcX/NWrFjx008/ffPNN8hew4YNpXkpp8iahzn8/PPP1II07/ejaE/a
JlRHyZIlOamynRIlSkjzUkiRNa9r16579+699957MzMzDzvssP/93//lVCbN
Sy1F0zx0jpwVzDVkonzvbgdpXgqR5sWM8FX5q0/a+vcaIRX+Tf7SvFRRZM17
9dVXH330URZwhpycnFGjRp1wwgnSvNSSEs2rXr36pk2b/NqR5qWKZB7BoKY4
p912223jxo1r1aqVX1nSvFSRTG/escce69dIpUqV8gvuCZfmpQppXswIX5WF
DKjCt+/xxx/fvXv3aaedJs1LIUXWvH/9618PPPDAxRdf3Lt3b+pry5YtO3fu
bNmypTQvhaRE85YuXXrdddf5L6V5qSIZzStbtuz06dP5ynCGHDp0qDQv5RRB
8/74xz9SL0uWLHnppZfKly9PdWRlZdWuXfuXX36R5qUWaV7MCF+VhY+bV7ly
ZbZ2zTXX2L+keSkhGc1DvDMzM6126tSps3Hjxo8++kial0KS17z69euvW7fO
H9JQmpdCiqx5devWXb9+/ZVXXpnhPdTJaY2tSfNSSzJP2v79739/9dVX+Zpc
ffXVZ5555s8//8yXUZqXQqR5MSN8VRaueaVKleIEyAarVKkizUsVSWpesIIw
8B07dkjzUkiSmnfYYYfxXv5ld+VJ81JL0TSPurj44ot/+OEHez6d09ry5cu3
b99uD8hI81JFksMjd+3atXfv3s2bN69ateqePXt69OghzUsh0ryYEb4qDzgL
Rvfu3dlg5cqVpXmposiat3r16ocffjhYOzfccAPZSpqXQpLUvGOOOWbjxo3H
H398sJqkeamiCJr3pz/9qVKlSmgDChG08c8++8wurEvzUkWqZsF4+umnn3/+
+ZIlS0rzUog0L2aEr8rCNY9fwQMGDOAMKc1LIUXWPP5++eWXJ510kl9Bixcv
3rp1qzQvhSSpeXfdddf111+f8D2S5qWKImveL7/8EnyaDHbs2CHNSy0p0bwu
Xbpg4O3atbOX0rxUIc2LGeGrsnDNY83u3bsvvPBCuwIlzUsJRda8UqVKvffe
e3/729+sdrKysjAKe0BGmpcqktG8hg0bvvXWW3YnuTTv96DIF22pVl76NYLa
LVq0SBdtU0vymkc1ff755+Sj4BppXkqQ5sWM8FVZiObxcsaMGWvXrq1du7at
kealhGRmwahevfqll156880333bbbTfddJMGVEk5yWjekiVLrrrqqoz9kOal
imSetO3atevtt99+mwf1W7FiRV/5pHkpIRnNq1WrFvWSm5ubMC6oNC9VSPNi
RviqDGpeZmZmo0aNzvLIzs5+4IEHevToYZdrpXkpJMk5ba3XqEmTJnXq1PHX
SPNSRTKaZ08qSfN+P5LRPP+LA8HnoKV5qSIZzStTpgz1sv93R5qXKqR5MSN8
VQY1r2TJklhcjseIESP2/8ZJ81JC8pq3P9K8VJGScfOkeb8TSWreryLNSxWp
egRDmvd7IM2LGeGr8oBP2gaR5qUEaZ7LSPNcRprnMtI8l5HmxYzwVRnUvFKl
ShX+jZPmpYTfQ/PKlCkjzUsJv4fmVa9eXZqXEn4PzWvSpIk0LyUUbRaMwmtH
mpcqpHkxI3xVBjWvfPnypQvlzDPPlOYlTxE0r3v37ocXSqVKlaR5KaEImtej
R4+yhVKnTh1pXko4WM2bPHkyEl6uUE466SRsMN2KFAcOVvPwt9NPP71CoQwc
OHD+/PnpVqQ4IM2LGeGr0tc89OOsA5FuP4oJB6t55m/nHIh0+1FMOFjNM/0Y
cSDSa0ex4WA1D8aHIL12FBsOVvNg5syZeYVCQHrtKDZI82JG+Krk60Zea9eu
XQcRFW3btr300ktDat6gQYN69+7dR0QFpR1e8/4cQvBECqHAD1bzRGQUQfNE
ZEjzYkb4qpw+ffqwYcMwvX4iKijtMWPGUPIHrB1kg7x2wQUXDBNRQWnn5uaG
0byrrrpqlIgcij3MmY2wXBE5Yarmr17eKbwTT6Scq6++OmTtGOm2GHEADqo2
+cb9j4iWMBbh146ImPDfnWkicg7q5CaEKBrpthhxANLdQIQQQghxqJJuixEH
IN0NRAghhBCHKum2GHEA0t1AhBBCCHGokm6LEQcg3Q1ECCGEEIcq6bYYcQDS
3UCEEEIIcaiSbosRByDdDUQIIYQQhyrpthhxANLdQIQQQghxqJJuixEHIN0N
RAghhBCHKum2GHEA0t1AhBBCCHGokm6LEQcg3Q1ECCGEEIcq6bYYcQDS3UCE
EEIIcaiSbosRByDdDUQIIYQQhyrpthhxANLdQIQQQghxqJJuixEHIN0NRAgh
hBCHKum2GHEA/j/scbnX
    "], {{0, 459.}, {422.5, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->144.],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{422.5, 459.},
  PlotRange->{{0, 422.5}, {0, 459.}}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.9468387555142317`*^9, 3.956171018334807*^9},
 CellTags->"DefaultContent",
 CellLabel->"Out[3]=",
 CellID->1383237886,ExpressionUUID->"73ebcb66-e96b-42c6-a3e1-c46f6a2e0146"]
}, Open  ]],

Cell[TextData[{
 "Saving returns an ",
 Cell[BoxData[
  FormBox[
   StyleBox["ImageFilterAnalysisData", "Input"], TraditionalForm]],
  ExpressionUUID->"436e2784-d04f-485a-a1a5-e500a1c82e38"],
 " object:"
}], "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.9468358492170877`*^9, 3.946835852573235*^9}, {
  3.94683603483926*^9, 3.9468360530163383`*^9}},
 CellTags->"DefaultContent",
 CellID->1871142315,ExpressionUUID->"7a3a9d6c-a8c1-493e-922b-e3d31524b4b8"],

Cell[CellGroupData[{

Cell[BoxData["ifaResult11"], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.9468358412795763`*^9, 3.9468358423105307`*^9}},
 CellLabel->"In[4]:=",
 CellID->1099091806,ExpressionUUID->"c6a78d63-ebfc-4bbf-8a59-a672fd0643dc"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
    "], {{0, 64.}, {366.5, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{144., 144.},
    RasterInterpolation->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{366.5, 64.},
  PlotRange->{{0, 366.5}, {0, 64.}}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.94683641789112*^9, 3.9468376094009943`*^9, 
  3.946838866247292*^9, 3.956171248372962*^9},
 CellLabel->"Out[4]=",
 CellID->2035623686,ExpressionUUID->"5f7a6c98-9a8b-4332-be7b-26308a006a0e"]
}, Open  ]],

Cell[TextData[{
 "Get the results as a ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["Tabular", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {"Link"}]],
    ButtonData->"paclet:ref/Tabular",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "6ee23212-537d-4b8f-9a03-6ce22b224ec7"],
 ":"
}], "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.9468358492170877`*^9, 3.946835852573235*^9}, {
  3.94683603483926*^9, 3.9468360530163383`*^9}, {3.946836431756287*^9, 
  3.9468364560056677`*^9}},
 CellTags->"DefaultContent",
 CellID->976842775,ExpressionUUID->"71232bcc-9232-458e-a1d6-adec76e3ddc2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ifaResult11", "[", "\"\<Data\>\"", "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.9468358412795763`*^9, 3.9468358423105307`*^9}, {
  3.9468364202758408`*^9, 3.946836425006907*^9}},
 CellLabel->"In[5]:=",
 CellID->1295685007,ExpressionUUID->"a003edea-118e-44bb-8db6-570cff9d03c3"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
t1OlSoWS119//czZP6Vw5MhvpBr2bJkyZZESWIwneYSmE5DjP4/Mmxeq2mc0
ONLXSFMfVzxi3ptb6WiiNXnENpNHbLCzeSRS+99j+PCR6umrohdfzKdOSShP
mjxVwYKkTGiyDHX27N0vQwMkt6xYsdIfZ84jJcbbLVv+b3vkmiKPKff+A4fk
TLEoUaJEWImcphGfOHGqfv0GanSbNJhffz1KfxWTbY4Rj8jA5Gh5xCQ4FvdC
pPZEb0UrLu0/qLFjv9VfHDXju1n6G6ckTpwYPcv2Hbtl7oIFi9BBuHR6770K
oEUrc62sP1IbL/npp5/JA3yhDBkyDBk67Iu+X2K6X/8B9u9Kg2PEI9Hu2V27
98rX1FNz23YhchivWr1WxUR/8KPntRhPj+unaTp+2jYeiV3TJO4/YKB6siF6
kK/69Z8/f6Hr3/f79dhbyTATA4/Ifek/qvyxvtC8N7fS0ZibPGKbySM22PE8
onz9xu3NP/2ycdNP6t9ajz5y9DjSJ7nLqEejjQWVrF33o+E2tjEytmHT5p9h
b/+EYGvDf9uGT1GPIPeLY8Qjceho90Kkdr579559K1et0dOcwegOVq9Zt237
rpu37rrPPXny9I8bNuGQ0D8c0+JcK+uP1DLwn37aErFtp2Egid8dIx55kv2I
ABoOcgkawNw9JtHGk6bp+G/beOQJ/eeFy+t/3Ih+xKefYt6bW+lovJk8YpvJ
IzY4cHiEjoX9xSO0r20Pj9A0HYBOKDyS0E0esc3kERtMHqFNTB5xqskjNE37
yOQRe0wesc3kERtMHqFNTB5xqskjNE37yOQRe0wesc3kERtMHqFNTB5xqskj
NE37yOQRe0wesc3kERtMHqFNTB5xqskjNE37yOQRe0wesc3kERtMHqFNTB5x
qskjNE37yOQRe0wesc3kERtMHqFNTB5xqskjNE37yOQRe0wesc3kERtMHqFN
TB5xqskjNE37yOQRe0wesc3kERtMHqFNTB5xqskjNE37yOQRe0wesc3kkVh4
3foNU6fNiNi202J98ghtYvKIU00eoWnaRyaP2OOEyyM4Ng4cPLx02Yo1a9df
u37L79sTrZ3HI7du/+XNcfXLLVqsmMvl6vNFX4v1ySO0ickjTjV5hKZpH5k8
Yo8TKI9MnDQlU+bMrsdKnjx5pY8q79t/UF/n5MnTYWG/nTp9Nm4/GusM/21b
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
ecQ2k0dsMHmENjF5xKkmj9A07SOTR+wxecQ2k0dsMHmENjF5xKkmj9A07SOT
R+wxecQ2k0dsMHmENjF5xKkmj9A07SOTR+wxecQ2k0dsMHmENjF5xKkmj9A0
7SOTR+wxecQ2k0dsMHmENjF5xKkmj9A07SOTR+wxecQ2k0dsMHmENjF5xKkm
j9A07SOTR+wxecQ2k0dsMHmENjF5xKkmj9A07SOTR+wxecQ2k0dsMHmENjF5
xKkmj9A07SOTR+wxecQ2k0dsMHmENjF5xKkmj9A07SOTR+wxecQ2k0dsMHmE
NjF5xKkmj9A07SOTR+wxecQ2k0dsMHmENjF5xKkmj9A07SOTR+wxecQ2k0ds
MHmENjF5xKkmj9A07SOTR+wxecQ2k0dssIFHbt/5K/77wIFD2NRff/3V71vi
eP+2dStCfenyFb9vCR23Pnzkv1APKvH7ltA07TBLOnHr9h2/b4mzfUz7W+nw
4SN+3xLHWxD75q3bft8SB/sniqIoiqIoiqIoiqIoiqIoiqKowJbfrx+zYhk/
8ttvv0VRPta2bdsQ6r/++svfG0LFsX7//b8XHv/xxx/+3hCKopwmubjl//2/
/+fvDXG40IAjzmjM/b0hzpeMH/nPf/7j7w1xssgjlInII04VeYSiKB+JPGKP
yCO2iTxig8gjlInII04VeYSiKB+JPGKPyCO2iTxig8gjlInII04VeYSiKB+J
PGKPyCO2iTxig8gjlInII04VeYSiKB+JPGKPyCO2iTxig8gjlInII04VeYSi
KB+JPGKPyCO2iTxig8gjlInII04VeYSiKB+JPGKPyCO2iTxig8gjlInII04V
eYSiKB+JPGKPyCO2iTxig8gjlInII04VeYSiKB+JPGKPyCO2iTxig8gjlInI
I04VeYSiKB+JPGKPyCO2iTxig8gjlInII04VeYSiKB+JPGKPyCO2iTxig8gj
lInII04VeYSiKB+JPGKPyCO2iTxig8gjlInII04VeYSiKB+JPGKPyCO2iTxi
g8gjlInII04VeYSiKB+JPGKPyCO2iTxigxzMI1/5XvbsIz/KIo8gFF9++WVf
nfC2X79+/XXqZ1lYm7zqJ+z5voEj8ghFUT4SecQekUdsE3nEBjmbR1599dXM
Or388ssbNmy4oNOpU6dCQ0OPHTt29LGOHz8+d+7csLCwHY+1e/fuBQsWLFq0
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
oigfiTxij8gjtok8YoPII5SJyCNOFXmEoigfiTxij8gjtok8YoPII5SJyCNO
FXmEoigfiTxij8gjtok8YoPII5SJyCNOFXmEoigfiTxij8gjtok8YoPII5SJ
yCNOFXmEoigfiTxij8gjtok8YoPII5SJyCNOFXmEoigfiTxij8gjtok8YoPI
I5SJyCNOFXmEoigfiTxij8gjtok8YoPII5SJyCNOFXmEoigfiTxij8gjtok8
YoPII5SJyCNOFXmEoigfiTxij8gjtok8YoPII5SJyCNOFXmEoigfiTxij8gj
tok8YoPII5SJyCNOFXmEoigfiTxij8gjtok8YoMczCNf+V727CM/yiKPTJo0
adGiRb/otGzZsgYNGpTW6YMPPmjRokXx4sXffixMt2zZslKlSmV0atKkSa1a
tcrqhLeoZs/3DRyRRyiK8pHII/aIPGKbyCM2yNk88uqrr2bW6eWXX96wYcMF
nU6dOhUaGnrs2LGjj3X8+PG5c+eGhYXteKzdu3cvWLAA+TY+dJMmTCxfvpw8
ooTg5MiRI61OuXPn3rJlyy2drly5MmXKlDk6ff/99+PHj1+8ePGSx1q6dOms
WbMwa5FOCD6QxJ7vGzgij1AU5SORR+wRecQ2kUdskLN55Pnnn3fplCFDBvCF
vs6DBw9Wrlx5586d24919+5dZMWHDx/GL/20pnPnzq1Zs2bdunV79+7drQkT
mzdvJo8oAd9Sp06tD3X69OkRKH2df/75Z8aMGQt1AmtMmDBhgU4onD17Njhl
/vz5UoIJAEvp0qV9+S0DUeQRiqJ8JPKIPSKP2CbyiA1yNo9kzpxZnyQDT5Bg
6+tERkauWLHi5s2bNx7r1q1bS5YsOXjw4KlTp37XdObMmdWrV69duxYJ9k5N
mNi0aRN5RAk/1bRp0xrQD4HS1/n777+nT5+uQEM0fvx4fQl4ZNasWeARTPyg
Sc5MlS1b1pffMhBFHqEoykcij9gj8ohtIo/YoEDjEUOSDB5ZtWoV8m0Djxw7
duz06dN6HtmwYcPevXvJIx7lkUf27NmjrwMemTFjhlydJVdhCY+gRM6VKB4B
hsybN++7774jj/hO5BGKonwk8og9Io/YJvKIDQo0HkHGe+rUKVXn4cOHc+fO
DQ8PV9drIfdGAjx//nwgiVyydf78+XXr1iFz3rx5s1yyhVdsAHlEKSwszJ1H
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
2p10VoD57voImmXhFISRYGnPnj3ly5en/GXKlClZsiQtI5bLzs6mPCgQ7CEs
w6GPBAUF2ZQZS9Cwz5kzB70tXqanp6vzYE+GK7z88svsI6bitT6ya9cuqr0l
SpRAYPzEE09gGRFgdHS0s1UuXbokouUhQ4a4tDmP9pGcnBw0v6KhoGOW6Ny5
s84JfPiITRd8FOVEDURjS4nPPfdcuXLlRHN38+ZNl/bW030EDaaY30k0ttWq
VSu08qC0US0pP2oymSPQuLPBbPqY6iPXfs09dOjfR44cu/2f34vFR9CJIx4o
q4CFWrVqwT569OiBbg5BlJ+fH0Ksfv36hYaGwqAhI+jIlixZEhERERUVtX37
9oSEBGwlMjISwv7tt9/+s2C+36SkJJ7vl/FoLOYj//jHP+x3GCA2QK+n+ZxT
p06JnstsH3FWaM5w5iMUsZjnI6IA0QaOUqhUqRL9rKMcgd8L777//vv0Mj4+
nlZHm6mJDQrt7xCPPfXUU7QtxLEogby8PDTUtHpwcLA68+HDhyld4yMINpC4
aNEietmlSxe8dHZ2DpZqYx8xE+/0kdu3b5PqNmrUKCsrCymXL19u1qwZUhAJ
5+bmOlyLaiPhVT6C3a5YsSLEDaEUvggC2gMHDojS2Ldvn866hw4d2m/H2rVr
ad1Zs2ZRtsWLF+MlrJCaU1RI5KHWZvLkyS7traf7CJ1BgpIcP34cLw8ePEh2
1q5dO/0VodhUqiNGjPj9998RDfbt25dS8Cu4mk0f83zkP3fyDiQn71S4cfM/
xeIjb7zxBsq8ogIW6tSpg8Rp06apr4+AqVOn0sURuj6CigoBQZiEZaTQW7Gx
sajwiQo4UmAr7COM5yLNR9CAZ2RkpKWlObuVWt9H7t69i0pI9/ygw6LzjQZ9
pHTp0viLLsnhFuldZz6CqBgRb3p6+r179xxmKJQi9BGUIX1xfR/Jzs5OSUlx
FvaoQR6UKo5r+wJ87bXXbK4zYcIE9d6Cb7/91qCPgKioqJ49e6IXUyei9bav
GA59BF9Hk9ixY0e8XLZsmcPNsY+YjXf6CIIEm3LT0cmTJ0XizZs3EX4gHZGG
/SoUQiNCprsNvcpHANorOIg65datW3RqfezYsa5+WocOHbAiAm9hDVSq3bp1
U2fDD4HEChUqYFvGP9yjfQQdGbWQu3fvFokbNmyg6kqDGZ1B53aaNGkiDuf7
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
qamqqkqWEbx2tbPg3+CJvQ4=
    "], {{0, 201.}, {536., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{144., 144.},
    RasterInterpolation->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{536., 201.},
  PlotRange->{{0, 536.}, {0, 201.}}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{
  3.946836425494104*^9, {3.9468367070558147`*^9, 3.9468367079849033`*^9}, 
   3.9468376123395767`*^9, {3.946837689997903*^9, 3.946837691902809*^9}, {
   3.946838873316676*^9, 3.946838877448207*^9}, {3.956171254963079*^9, 
   3.956171268894822*^9}},
 CellLabel->"Out[5]=",
 CellID->945769799,ExpressionUUID->"4dd4ffdc-25e3-4aae-994a-967e57101a36"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Scope", "Subsection",
 TaggingRules->{},
 CellID->964056545,ExpressionUUID->"ecb7fcf0-1981-41b2-b163-c3dc77c600ca"],

Cell[TextData[{
 "Pass in an image or use a name from ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{"ExampleData", "[", 
     RowBox[{"{", "\"\<TestImage\>\"", "}"}], "]"}], "Input"], 
   TraditionalForm]],ExpressionUUID->"6d0f25e0-80e5-41dc-8eb1-41e2a4e729b6"],
 ":"
}], "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.946763419440548*^9, 3.9467634437720633`*^9}},
 CellTags->"DefaultContent",
 CellID->217390316,ExpressionUUID->"09f31b0f-c8fd-46d4-b77d-5fa55fb73c44"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SeedRandom", "[", "1234", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"randimg", "=", 
  RowBox[{
   RowBox[{"ExampleData", "[", "\"\<TestImage\>\"", "]"}], "//", 
   RowBox[{
    RowBox[{"Function", "[", 
     RowBox[{"RandomChoice", "[", 
      RowBox[{"#", ",", "1"}], "]"}], "]"}], "/*", 
    RowBox[{"Apply", "[", "ExampleData", "]"}], "/*", 
    RowBox[{"Function", "[", 
     RowBox[{"ImageResize", "[", 
      RowBox[{"#", ",", "250"}], "]"}], "]"}]}]}]}]}], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.946765465999023*^9, 3.946765477641677*^9}, {
  3.9467655150475683`*^9, 3.946765600220742*^9}, {3.94683419566719*^9, 
  3.946834212594947*^9}, {3.94683774517174*^9, 3.9468378218016233`*^9}},
 CellLabel->"In[6]:=",
 CellID->1092789579,ExpressionUUID->"41c3216d-5aa1-4a0c-87e4-3ce28a7959c0"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
p1AkckyBmCuRCdJFbDTPRPFsEMN4ArVTqAOJeHC4BYHo47AG8HYcVWCIGEU4
4O0oAtAFMAyQOo4qYQbInkRhhoBhFUhAwCnBsj0rrW8ddB056n7zqMftE153
T3rePeF546DrrSNu1w+5n/vb6fR2u5PbHP5ZZ7V1wHhDr9HgAr2OGs3acvWK
fEVhuiwlUhjgThelSJ5ecnt303dyJOTL44if7+pmPm2a+bLr16dtP6dWfp1o
HQdIcDvq/s3QB3fCRh9EPn0Y8fRe5LtnqVNvS75+qPs22fTzY8f0ZPuP9w0/
Jso/vymYep0/+SJvYjQXrFePsp/dTX9wPeHOhYgbZ8PPHQk8ud/vyG6fA395
7tng8tcKhw3LbNf126zqtV7SbjJ2y/P5Le/Rm17PhwNGbwU+vuFz/YTHhaNz
zx1xOLbXZvcWk/UrDAYWarbWysoLxAkRdF6mZO9up4vn/S6cD7h8NQJoe+hm
9I1bMdduRl+9EXX5WuyZ86EnTwcfPx64e7fnurWOg/22tc7ybAppElG9YvJC
WPDdjPSNmpLlaqJlCsEmdcEOLdHf6sLD5ppnnXQOGkq2qzJ/qrFbtMWr1ASL
ZUyHmASCrxeSZSyWQcNRuIofCvkAAEBVbFEIeGMMDgOSaeCwXiG+2Uhns4ne
AikzT0Dks2g8BYfTcIqAyBOxAMirhESbnFqkYPY62lxLiLudk3m3ouJcUtI/
Hq4AOcopqIiCUkil2sMotJwngUrn09CAiFyhLlmpJt5qobnDx6zPY06Hj1Gu
rXqyjVq0pTzMQj3QSO4/Rx5lrl2pKS5n0AUywYnIiHOpqaeTUpYY6teAPc5i
eSQM+CSHRuMoNIiAPDDIHoOsUMgEVQln8FSWSqLwOApPoLB+/+Ariwcvt3ds
i46u0VPPURUVaCvKTPXq7UzrbUzLDPULVGWZHNmlLe000h3wCVjuF9ph61Sg
qpYpYJMEbChLBbN0EEP5sRTAGEcKtydRGxKxIGDA7eoookBRGVA7hvBA1Sis
VDv6v2pHla+V78DA4cGbKv/xh6YYyQmVbmw3PLbO9vgm+zPbnC7sdDr3l93Z
vxyOb7TePWCyc8Bka8+c9QvmDNTrdFaoNxaolqWIM6ME8YFckCvjbk3NUUPq
8lTf3vJ6dztg6lHY9xdpMx/7ZqcPT39e/+1Dz6d3deOjeW+fZt+9EXn5jN/N
SwH3bgfeuel3bzh07GH0+PPUj6+zp94Wf//QPP2x68t4w7eJ8k9vAOeAVTT5
ouD9WP7rx9mjQO1DibfOR147HX72aOCpA0Dt3ns2u+1Y57xtrfPG5Q6r+qwH
eyz7203ePox/fif05Yj/24chL+8GP7vlO3LR4/Z5j6un3E4fsD26y2LbGqNl
vZoLmmVleaKkKC7Ag4wJ4/9cb3P6yNxjR7wuXQy+fDHo6tXw0+eCz14IPXsu
8tBh/yOHfP7Z57V189zBFba9pYaFUnoeTwyo8n+bGdzKSH29YP4JL6fVmuIB
HfkqTfF2PcVBM42rPjbHzTV3a3C7NPjNcmqzKrtCxvZJ6MUKpkNEADFXslg2
qRKH/xGCQt4o5I5AjqgKEEwMgQC1z2PRLgG2yUj3mL//On2NehbLIf7I54lM
gEAcVswRAMIbBNigpmSnvc2FmJCb2WnXM9Ie1Ddczcr408IIhFYgyFwSTiah
CEwlgcErBVQZjdYR/zmoJj7s473P23Ony5wNHkb9XsYdXnOKHTSK5moVu+kV
uhkmWavmu5s02RtXitgqjthoanQ2PvZOY/PRqOg+LfUmngKGn0tAKTgEPjyS
gEJw2B1HHDEEFCZzBAIFKIajQ0g0jULzBNz+ooqzHT074uLmG2hW6SsKdORZ
uooqJ8tGf9cFwXM7A1zrbC1yZcJCMRNHIgvtnTZExi/zD64zt4liGRB+gyk8
lCZieTKMJX0Y0pshHH6nVCMc0UYhNRSVohjgdtFvb2dQiPoXY34v5QsEJv5N
rMD2MZghEQxVgo2MhT0tmYIIaUuO2mCd7roW/XXz9dY26K5p0BuYp9VVrNGU
oSiNlaT48ZGunKc5aaVD6MpQNQEq41BMBeqq0vxwx2tiJPTbaOzPd2WzX7fN
/tj3/dPKybeVb5/nPrsXd+9G5MiN2L1/2m3o0z+42+nUSc9rV/yePoh9N5b5
/nny5/Gqrx+6pj92T39s+zpR8gno/3Xe1OvCidHsN08yx+6njY6kPxxKun0x
6vKp0DNHAk4d8D2y13v3Xx47Nrj8udZl7VKHlX02S7stFreZTL0qnHqRMfEk
4u0Dv9f3A17eDXxy3ffBFe/h856Xjzic/sdq1wajJV3aXU2KmhJRViIfFcg5
WuJOlkR1qfa2LdaHD7qfOOJx7oTPmeM+p477nTjmf+Sgz77d7jv/clu/xnFg
qU1LgGoxhc4X4JsNtY/7eY/kZT0qz7+cGLXZymixkdYSA+0/DTWPOhhccjU/
baG/V1OwVUZvkpCb5PRqObtEyvRKqE4RpbR3HitikHQSisJUAlAVfwx2RZVB
L5aA82m0lkYWCIjlGrL97q4bTAxbhXQth5f/ppEaHqsX0q0SZomW4khgwI3s
3Ot5GXfLcm/kZN0qyt/tYtenLgIptZSCMkkoiUSAIJNYokZIV1IIUPsyDfm5
6Jih3Ox9HhbrLTV6bbTnmcqrLdVqbTQqLTTyDKWlllp19gY1mvIGCVfHEjvd
XS9lZFzKzzuXlbPOymqhVNDM4QUEnEHA8QQUCvIvjnrgiDMGW4CFQKkCNoKh
AhkyBf+j08zkcGH57oTkNlPDWn1F5Ry1EmOtPBOtEifLQjerAi+zBfHuLf7O
JYbaaUImlUQ6zUx3JGVsiElos3NMFXFRJBpOYfE0ViJlk3gSfKYvTbhSmA0J
jB3RQIG3w6rA21FU8t9qhykEJhGlzvHfgqfQ/379b5eGxmABDisoVI2E5Sis
QCF9FrZWRV31CS9j0tuE9LOkfcxIN2PKRhs3UcU1haiIglkcfC38PzUCRWGV
pQ1a7296Tz0M/f4y8dfHjv/6uX/m+9/Tn1d/fFf34mnq3eGoaxcCL54M3rbe
qrtObX6h+mC33aEDviO3Ip4/jAMA//ld2fRU989PvT8mWwC0A56fep374UUO
UPvbZ7lA7c9GUu7fiL92NuzcsaBTh/xP7vc99o/vrm3um1Y7rV/psKzXalW/
3dIeq0ULTN88iH4/mjr5LGH8Udjb+0DwgY+uBty/5H3vovvNU65nDtge3Gq2
ZrFub6taY5k4P1UQHUi7O5Dm+riWFPF0ZmsqtDaus/57m/3OzXb7/nLas815
60an9avt1q+wH+y36m0zrTYTVJIQCI9H3edeiYkYig2/HB90PD5kg5fDQhvD
hbama8z0jjkanrE3Ou9stU9fdbea4E8FvU5CrlWwS2VMn5hqF+JNQqKOxwD9
JuMqUdgfwZgKsHc3BHICasehMgZv4vEmGhmQsuv1tdYaG6wx1O+UCrrVpL3a
aoN6ahssTPd6e59LSryRl/egueX5ksErWWlngv0BtK831FkgYStZtJCCsmg0
lcEiSCSKxhulfB1P1VF/dInp/W7OF6Mj9jqY98mZBeqiCildrcaVq7L5MiYP
BAR1QbmaoEVd1Cyg+/W0rxWXDlXX3WlquVnfvGWuS4eEa+LJYhrJo5EU8Mk4
DAQPvN0WAxijzB0ZIj6KIcNJNFfIHskvHF6xbldKaqOuWpmOosRALdtQNcdG
P8PRKMxU1d9Qnhlg310UW+/lmM1z2QzWbGh4pLD8SEV9v29wqkgYRmJhBBpB
oREkFkhivhQ2l8IAt9sovR3WRmE1JckgQOr8/0idQv5l9X8XSigXIkRBnkWM
CNieQrw5OEiMhEjRICnqL0E9hagri9rRqCkJ6ynRCBYD/v+9ZcAewVAYU/Yz
lVmAUrY0QQQAHwstb9IeH/L68ihs+lX6zJe1Mz/+Buvbx77x53mP78bcuRl+
4ULQ/v0ey/pNakoVaeHCRB9xR4XdxZMhYw8jp15n/pisn/my/NeXpd/fN35+
kw/e+fgq+8PzrPFnWW+eZDx/mPb4Tsr96wk3zkedPx585oj/yYN+B/d47dw8
d9vGuZvWOq0atF/aa7m023Jhq8mzOwEv78dNPE36MBr/9mHgq3t+o7f9QFy9
f8nj1um55w7aH9hitHmJ9pIOjfY61dIscUIY4+VI2hhiBuq4hEEUAtjVgS0v
0Oxo1l/db75+icXqxZbLey0HOs3amw0bcjTrtflaElqnp3YxLOiQrelRO7P9
7rYbPGy67Q1bHA0b3CxWuVqdnGt+2sboirfrUFjgSRuT3VrijVIKCH6FhO4T
k90iEpSGeRxaRMHpOBSLQUDt/piKFwa54XASodIspGpZvIGG2gR4j5AaVJcO
asjWmxod8nQ7FhV1ODLiQnb2UEnZo/ZOIPjheZWv16y7VlS4z9l2i6VRr0LY
IiAqWaSAhrMYNIXFw2kkGBQLMVfJ4o0M0kqrbDfRH0pJOerns1DGNQhJQETV
ArJSQFYIiXo5Vy8XVArJdgW/wsz4aHTsuYzMS0Ulx6KjziQmrjCZAz6kmEHn
CagSnsqksUQQtEnEC4OtUcgY5A4MzhBxPhSRQsIrbMwfrVr75vCx64v7O20t
SnVlOYaKxDnyaGN5kpNBopu5n4VOiKNxbpRHbYhbvIgPwKAqI+OL8zsvd/Vv
TkzLlStiaTyExIIpNJBEAinMj8Y8GWUHEkC7KY5oKo0dliOo+LfaaYAxCPQ/
oP67CYkiMgy2wmE/Eg6n4EgaThOj6TI4RgqnKtBUBRYvRxPlSIqcSJJjEWLY
X4D48LAzh1jSiAGFaAH/JxABjjC4so1PAHvHIQpHWBza2Kk7ccPr0+PwH69S
Zz8Pzk7/Pftj66f3C16NZty/F3fhnM+RI26btzp2dhnm5cij/DkfWyrYkT17
1Ov10+ivb3Nmvg7O/Nj1c2r1t/HaL+/yP73JnXqZOTGW/upx+tsnGWMPgNqT
h6/HXj0XceFEEFD7qcP+QO27trru3Oq6Zf3cFUvtBnosF3eadbcavxrNejtW
9B7Uhadxb+4FvRrxGxv2eTzkc/+y563TLuf32e1eZ7y2X3dpp3ZjuTwnWZQS
yfu7kHZGuKE6pinBxCzK4rCAhE10iJhgcW2+Vlu5zsJq/bZSvYpMzaIAeYmE
XMATp/09HxfnXAn332dvvtnWeKm9UYuldoe3Xa2PbYeL2Rl3m6Pmutd93Z9l
Z4zExZyyMQb2vkKALRdTfSJisYRu5tAqFi2i4VRCJRqHQjDIH4O8UMgZVebW
VjFTzRK1DFrHoPMZuEdADsiFWx3sLmfl3K6uf7p4YLih8WF759Mly15v3nav
fcGLJcvOZ2ZsdbQZNNBqFdMVNFLKICUcls0TsQwWRKOeFFIkoEtotIbBG0HJ
EKD7TfVOeLk2cngzhy0Q0VUsPo+CalmkS842iugyAdNvYnwiLuFRV89wY9Pp
lJRzaZkbLc065cJKjizn8GohWSWkM1g8mcbigAgx2AnoCoXtMDiZo/xJPJqA
63W1hgeWje3Zd3peVZ2uapGmOE1XGqItiLTQSnW3jp5rHmhr6GmirS+kwk11
UrXVPFGoxsRkaPGye2s2HimubNDWSmOISAoNobAAEvUiEA8K+92WwQAy6WGw
NgZgBpUiqPB/Mea3zqnfOucQBGy9cBJKpuFEGk6i4QwGyeDgVBGarcCK5EiB
DC1WJYoUSIEcyZbCGRI0UYRE8FAYDwdwsBsNO9KwKYno4ogajkhxlMMRDkOA
t7MYtK3X5N11rw8jod9fpMx+Gvj1ZcuvLyun3tWN3o24ft7z6JG569eadbVo
lxYocmMlqb7CIAfW14Y5f8hz/Gnst4mK/5re9V+zJ2Z/HpieWjz1uuDzm+xP
z9PeP0uZeJb+6lHy6L3kh7cTb1+NvnY+8vzxgNNH/A7t9Tm4y2vvDvct6503
rnVYscSmv9eyb6F553zDyfEFHz/0fByvmxiNe3nP7+Vd37Fh76c3vR5e8bhz
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
SKCzJDdTtaHOuL7BqKHJtL7NvLrDuKJ1Tn2HRWWzaWapVnqhRlamZlqMLMqb
D3Kkg2woDyPcXgNzlyNxErhIhhaK0XwBlM0BbSsVnvr7Wb9kSgWwejILxbEg
EUP+FAQKij2uHL9R/pgLXHleL8ZQ5XAsgfx+DhpCUVhBwQnaRKEhk6Er8GTw
WAaLY/EsKZ8p5rJZIpMHQqJK9fUa7OwrdLRy9AxiFYpInimQ8XlyUbSADePo
MIbwoTBXCrUjEPPfE8UGysMI5QtQ6cSI8ucMyBDw7aGNQrSRhpc76+fbaM9z
0Sl3NYw1Uk03keXaa8aaqwXoinz0JRFW2vOivNoT/NI5okRAFikfAcNBGKmU
cmVSvl4uqJbxFVKuRMIViOhCMZ0joZN5PAUsFmxzOI6Fk4RIJAcF/O7POFOQ
BQWZEiqb56m+POc8MRz45Un09xeJP9+kz44Xzk6Uzo6Xz36YN/OhYuZD2c+J
cmDp0+8KfrzOA1L/9irv66us768yvzxP+aB8ECPmzUjY2FDAs2v+YzeCnl71
f3jR984Z78vH3U/vdzq8027nJov1K8wGAcZ06jXWqZfkSbJSJVGhbIAn/f6B
79sR39Ehz5c3PUeveN4743r9sMOpbaYHVhksiVMtBZmLgxsExFpPn7/CwzfN
tf3b2WiNldZCU8UKG91uDWGzkGrj8Q4GXiZR9gy7eayJ+v/ZeuuouLZ8W/jP
Q23X8qIEd3d3d7cECe5O0ASXAAGChSAhSJx4iAdCSELcXUmOdZ++3bdvd993
3/eN8a1dOX3lvW+MNWoUXtSea645f7YhLmohIMr4eD6LpVNIPI7kCuhUGi/l
U5Us3cAnWxisj49PSJgpTf4BlXhCSu+VMrNK8aKueE5bOKsrmtQTjGqxwyqm
U4o38JEaIZ7HwKkUHEEANYJ4cU2diBkOaaNc4cf3am0Kgzi0q9d3tAOqJ9SY
B88lYGtw3hC1ohETCjGm4bQYRUubWccuq85++75R5/59zt3jDh2jdl0TDs1D
9jt221e1W1Q0mldXm1YX6WUlSDJjpFv8BYlugkg7xk0Pt5OifkI0TYxkCuEc
PpINFgPnMHAWOINoXgINxdJQNJdYRH1J2INLLCJmBKxPIiqCKw4UqDugweuk
Ca4JVMigDIWaS7AsU7rIjE1UsoEEliSmtwqoaAJJopAU4IhlbAJDBuJwNo0m
0pgXjoTzmWSpMEnMj+KzQTThzxB+DOFCIgDtljjn34GA0UURsGTAnyIwjcBm
KFQJ2EaE9knQffr8KUftaR+TTmfdMju9LAutJCu9YBOdUHOdEGsDB4XQQ1+e
5WCSx2LlIhJcSqBkygVUvZStlwvr5KIauagZMLxSXCNjGxRskYTKF4NdiYG3
IoVBElngm7id7k9y+SZ38KoYxASHEiyIx0dsftzw+cvL0H//kv6PzZz//fO2
/+fXgv/3D0X/8Uvh//ql4H//sfQ//lDwj59z//Yt52+bmf/4sQCsv3/L/se3
7L9+yfjTh5Qfn0Z9vhe0+Sjs6/O4z0/i3t0Nf3kz8NGKP0D7pSXX80edD+23
nho1He43aW3S2V4uz8+SpMQLwwMYfw/m5xf+3576v7vj9f6Wx9s1z4eXXW6f
sj85bjrbrtfuINgmoTI1iUVH271+fn2ONmP25jOe5jOB5iMhhvvi7IddjZo1
+R1SuldI7GLRfiHWzvB2MnAzH20S/Y72NBKOxKB8EZvDp/IZokrItkqEXWKm
lUEGhUQfH+0G30/xOmm4j0WGJeSUUjisSQ1okrtlVK+U2ilCq1i0VkpkskgC
CYURkC8BOxNcsFofgwGxf69xUit2Du2EukOBwjFCjSV19xlAOwwwj4EjgEQk
JCIHIjlJ1TNk0z1k3bvXoW/Gcdd+p+EjXn3zrj0zTv3zHjtG7ZpG7LrHXToG
nRrbLGprDcuLtctztPPjNbcGCKPdmFAbyl2XsJTiFnzUlUWiwWtjoTgaiqe5
SwzMQgSNcMFGEvaiUBcSBlC3JGFjAtUlMU2ci3BqCnGlFDfWp81NGBN9yliX
NNEhVZq4ixaZY8FmmvATxWQkjUYweDyFJVMIoPp0PhFLck8SKSydxUNpIpyl
QviUL0uGsmSskAJo96EwV5I7y7gyMJSTeZooDASMhCvxhRkE9iWQUhptEhLj
eqIJA/4BO8WYjWyXtaTNQd7gqVvgYZLkbB1orOtloOWqLbGW8cP5RBqLpZJI
JgmOLaRYSO1QiJt0NCslTJWmcKcSAF60U87fqQBbgF8pYwoB4AVooQjPFyJZ
nFFFQyjYn+ZKxRwp2JJB9GGoJUn68ZLDt5vef3kR8Y+PSf9rM/k/AOB/zvr3
HzP+8eO2//g193//mvu3H9P/8WPm379m/ePHvH98zf/7Zt4/vuX825dtf3qf
9MuLmJ+eRv38Im7zSdynRzGvN8IfrfqvL3teP+u2fMz5yKzN5IjZaL9RT5t+
XaW8KEeSHCeICOL7udMOluTzFbd3d9zf3PZ4ds3j8QWnjbN2Vw9aH58wmyhX
lOnxE2x0rSV0p6ddo648Q8SUyAV1OoIeN+19yTZzlX77M90b9MXNMrYRCBgB
dkBBDwiQfj7SJUD7pHQbF7PC89Wt0/EEUiZkS/h0qZCtFrHb+WQ9g7bysSYK
6qDhXgHWzMAtDNQhQHdJqHYR1i2nuqVksxitFyKlLJwLTkYaVqdQed4kYkdA
pjikhcFSoHhxLhRDqZmc5EpYYZYk+TRNElxz5XcNz8Eeh0kCIQiE5WPpWXpd
uy1Hpl12zzj0HnDcc8TtwLmA8VMeoyc9B465jZ7w6j/oPnTYc2DOc9c+565h
2/49jo2N5nW1JpV5OrnxstQQcZwbG2LNuOrhljJMySA6FBfG9KAhQOOBJNdR
5UkC6QI7EhzOrQDOSUSfQnVIcBIhCj7mYi8MCpAEBcq8PUW+PmJ3d5Gzk8DK
nDYxII11yEA9KtuSyTURJEjJIBKOIBEg/iNJrgg5iESDKdSfwsBfiQQf0oQf
TXjQuDsJDgIqTkh40UCqcW5FHwVoB7oF+Q51IcJ1KklQOJVBdwixFiE2aSif
NpBOm8v2Wmt2mUl2WIgrzdhCO81cd5MsX4dEDwc3I10niTBdROUKiHwKLqPR
SgZtklAA4fVKcaMCLFG1DCgZtlxCV0iZ7XJmu5Ss0QRmDaAdK5UgBcCoslC8
ulrMi4YdKBi8SyZcBIy32Kj76YrLj3cC/vI85F9fR/7tc/w/vib/+7etf/2S
8vevW//xLe3fNlP+tpn2t830v29m/X0z969fsv/8Pu3P71P//CHtt3dbfnkZ
//VR1Md7ke/uhDy9EXDnsteVky7nDzsszdnNjFns2WXY3arTUKMszZelJYsi
Q/k+rpSLLZ5XoLx/0fH+RYf107a3z9jeOWWzesRyadRoqluvd6u0UEolawkj
jRTbnFQFpsJtMiqeBnqMLNUTNjirhra5z9YG7YlzrJbxK7giW6RfgHVQ0ABQ
NWJ8Ws5Magl3y+gWAVpOw+kEL51GCvlAyVOlQqaIwSsYbqxQI4M0UnATDZdz
sWtoO82roaF6PtyqSTSI0O1CtFKIFfGRLD5XGBBCwt4AQlxehvN6CowbBMQH
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
0m0qV1TkyrK5flJ+hC9rb4qnxIuXzrldXPG+eN376lrA0rjB2SnjU6NGJ0YN
T47oL/ToD1RIu/IlLYHCND6Wg2tM21k+KSu7GOw7baLdpSOt05VUGUsbXfWr
nQ2qPAwy7RU5epIKFh9Sii+5O91JiP1YVXXTy/6QnDygIKeV1BTQ+RK8XUaB
N20bCUURPD8M9sO5AoBYrskUTiJhLhHDIjk0lElDeXykWIRl8qEsIRrP2T0o
jIZ9SMSNhO1IxIZEzEhURcISLlLNQZ3iEK5GOwZxYgZH1HyOqokd+i9iR6DQ
JMXwIefFC6FHVyNmr/jOXws+th576m7SlSdpq0+3bbzOv/Fiy/rLrWtPEq/e
j7n2IPHGg63nb8ScuRp9bDl0dilwfM5795jzznar6hqjvFytjC3y+AhxmDff
04ZyMCJMlZi2BJWwiIBEaRKh1DzPktyOs7YRF5QZ13VZd4x79kz7tu71aNrj
Uj/kXD/k0jzsU9XlklNnnl1jmV1pGbdNJypRFRKq6enMtzWh9DVxRxnmJ8Z8
hViICPdhEW8WcaEhHxYFywGYXwK25tr9IC60TnC1oEou0oh8Vy/fbSmF/B6M
BU9SKCBFiDYBOm+sOO1stmijc9hBe8FNd9pTr8dNWeMoK3ZWZtjIMtz0SgLt
s6RskYBsEWNDWoJjrvZLHk7Hna0PWeoPatK9AnRaSS8YCheMRbPG4nFdwS4F
3acj6NMWNANaE2N5LJbFIttYOJGGwikogUHDacidhOwJyBJ4LgKIGURFo0Ic
0ePDAwWKZ8es3py3/3Ld/ad17x9v+fy45v2He34/b/j/cj8ArM83vD9c9/m0
6vvuqvfTZc87p1xXDjos77ddGjOf7zfe22G0p8WgvUq1PU+amyDcGsGP9WeC
3RkrA2xrvOT8ZY/ra/5Xb/it3gm+th4y2ak11a6aaNYa36kcbZD3lkh3pAnr
kvkNHmw+H6ukoHEzoxsZmUf9vDrlghZtcY2+pNxMXmCrzHfVKXU3qPAwLtWX
FRLwPj3Fo9StH7dXfGtrvhvmtaRNHdfjHzHgT2rTu8R4qxAro+EtBC8Kh1xQ
2BRFLFHYHgXPIU8M8sOg6N8nC8ExJBRLQXEMlMjAkTQcSMNeFOxIwo40N+HE
mECUOAz4kyFgPoV8XyyN0BRKUwiAGWdF1fUDJJdU/Z3YAa3JVFjLsN3sef/F
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
30u99CTrzvvam29KH2/2vPl1/8PP/R//ePztrweffh15/4fjL3+cW3ldt/qm
+ez9soWV+KlLscNno9vmfGvGPCr6XdJqTcMzVcGpKo8wsb2HwNyW1jcilSpM
IkaEfC658D2nhmE8DDz+N2D/twX9d/wjKCKFeQUKvM9I0CXExhR0r5yeM5HO
msquR7rN2BjUMtyMtQYR2a4QTJppnfS2O+xiPmui2C1nGwRYu4zaqyM8ba+7
7KR3wVV/yUpz0Vi4H6gXXWZYm+lT0F0ycocELeYjaRQUT0LRBC+KhBJJyBfj
eaA8oNvd1LPdtFFIjEIKbsoHlyKPp+E0Fs4TIlVyrEaB1iuxGiVerolUyJAa
BZ4rhCvlZLEETRMiCXwkRYiBx0gaCqQgV4JniUMGaqJWkqgU0ZgYsb/9OOLs
9cCLN0NuPIh7+an67Zfud197N38eBuuX36ZDBUgwA8cLwBkHRbBQOA2FUpAX
AQNDYYvzkgmoVkBWMlg9jXbxkWYaLqWQChqupuBBATZvqHrb1PClt/dTT9e7
9tY3DQ3LYcHj+txcuBYRudtAs0pMFQm4ut9cPtAwXJ+dHw5+M2zJJbghBcLV
63JtR0C5EcCcwgIgnCoNBo94DV/wm74avO9K4J5lz4GzHnvOeY9f8py97nPk
ht/SWsiBq94TF9wnzvsNHfccOOLVMeuyc69T9W6r8i6rrBqD2Dx5bLZWcJLU
3osO2Srbez547ILf+CXvay8rzz4qu/ay7syDwpljcSkRlqFRBg0DrvUjDoWd
tqXtLnVTXh2H3acu+Z+9m/byS+fHnwY+bO54/Lpg5V7M1VuRJy8HHD4XsHgi
YPKgV9eYQ/uIbU2baUGd/tZiRUKOPDhR5BclsnWjC9rMD6xGHVlPPH4n8fKz
vFvvah98alt/XfLkS+eLb8Ovfp7+8qezb349+vqXma9/ufzwU9/9T713PnSc
f1hwcC3m4I2UqUsJPUcCm6Z9aoZdi7oct1ZaReUYecdIXQMltu5CYytaS4eQ
yzGpBOPTGKUG/Pcaoe9FQWpK/yfJ/878/6VwuEcE8mOhThNBpybVI0b7ZdSC
sWyvLns12H7B1bpBwAXYq8X0ThGxR1d8NsBh0dFwWIffr2Dr+Ui9mNyjJ503
Vx60Us2baR62Vu43Fo/oMP3adLucbJNxd3ArY9EiFkulkCgCDiN4kVz2HPbC
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
CimikVoBWilAqlm4S4oNaPP7VfSUAXvQUjZrJjlkpThqLTliKT5kIdpnSPdo
EQ0yuFIEFQk4bs9i4Sw+nEDzoigojIKBNvYkIEc12mvSVTc3Qm7cjd14nvzk
fcGHnzp++dPc118nH72tunQn/sxa4tEr4duwH5JxXgrOy8I18gheDqmRQ/HS
CF4KphGB8TwRnhui4QxrpGEaXUKCG+nMwpUkYHuAbV4dxWtlgMhB6hm4kuHm
QJbTcJ16fFA+iyZQkD8OXgziznlenj0O/DhQ7Jxol3NQ50r1GJQjdviHH4Ki
Vd2HXHcechg86zS7ErW0kbt0J6fnsGfPEd+GaacdB1ybDzqOXvQ+dCt8Yc1/
9rrHwg3vyUsu01e8ATjHzvgOnfTqP+zest+5dtg+v800pVY7qVwrME3YOOkw
cTlk8rLfxSfZR9fjxi/57jru3HHIqWXWqXXWrWzIrmbYrqzHIrfVrGrctvuw
68ylkIsPtr3/aeTDT6Nff535tNnx8HnO+RsR51bDTl4Mmj3hM37YbeygW++U
Q+eEbWWPWUmbSW69Xka1Tmy+LCRD3HfY7cjN6JMbidee57z4tgusZ5sDlx9n
H7oRPXMpcPBIQHa0ZfIWw7BcVVSxqmkOOBTP+bXoM/fTn/04u/Fp4Mbb5lP3
CsaWQ/pOBvYcC22a8i0ZdM5utUquNgvP0fNPkvvFKBx8ROaOjIk1ranABUKE
YVCKu5Pv7ym5/452ruD5dz3/P0QOrn4EdildiddqE7VKrEGCbQemjA83C7lu
mgoAeD6WSwEGRmuF2C4tfqeK7dJme7XZPj1hO0C7PrtDi6mWAngjpRK0VklV
SLFMFspikUQKjeZueqhGOzjKEcgEhbxxOAaHUmk0lYCyCF4JhdTwkXKam8TV
LkQGtdkpQ+GcsWhSn3/YXLJko3ncUnLSQnrcTDyuTQ+pqD4l1STFKoQwpz1Y
Lh0PFEiSupY4AKCdhD0Y2PSHH6oztO48jrxxP3b9SfLzd3mffuJkzOefhh6+
Llt5kHrkWtjixaBs7IccQiOX4BUSGgWkegQQDeUAv4z9EINq+CE8b4TnivI8
UI0yitcsJBpZroe0lOQVk5yeLyPBD/K2Ebxsbtw02Lm8XAbK4qMJNLClvFAS
8sIRbq4XBllyfhwywiAdDFbPZ4MBq9MYF2lnKbimy3b3Wc/d57kyrYvPKu+8
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
AYsnLk2j/Fo6VEpAFRIEiqhgBROXh0QXQdk0xPsxFI/2wArYYm+ZgygDNHwV
AsogIA4C8hiUGwTAOj+BAK9N6GgyYpnuSQSciEjgl8cN2u3gbwMHaEOACoSW
RzQMIAShmX90ASHbArg/Kik0gQAkVnDq1gxbNs3GL4J3npduPM7vXnMu6rJJ
uG3t6SZnayVtpCvE5wrHlanljWh3bpmsPgw6eZ25dx27euk3vGfVs2HevmJe
M2lQMsCD0X67TT25VimyWMYfrlVTResmLZsXLdtWLScPXZbveU+ewFA3nT9x
3rz03Ll0PH/qd/ks+OWHnK+/tv3174tffu399e8zv/597fMvAw9eJG6du64e
Wq0c2CzsWE+vWwwuGrdO6Ff3aeU2c7LqVdKrFaPypHxTRNxj2baBjPBcmbV7
3uv3/bceBT96X/Tqa//567KZs6CmJevMbrWYGo5fjqxHvIyxvaCGKllbjiDG
RMeXqQ8du06deBw8j3v789BP/zi9+/bO9Jlf95ZL7bwJjPb0Tm5UtXpIsbJP
hoJbsoJtuISuA13DnKqmT5Hi4AVFsUwhiMrAkMjIHK6QJGTswvRNlgxIkQxK
lUgoUo3LV4nIUghNl4nIUAyOl/UME3f0Zju4sm0dGGZmVAMeSVeNoCGNVRLC
yNIwXBroSgfcaGhPMhBJA2LpQBQFFUqG9TYQSAZ9YclKBPxJyJsjD8KN/SwB
BjnKHqnOBEyxcHEHqGFQSiAgg+zDoKRBlAsRG0TEhhKxAXjQD4f2w4FxiA04
zJNgGZtUyyLWsYjtovQecWq/nOiAnFinCGVIhtklRWuTYtYIkZtEKeVCxCwa
Jp+Jz2bgUqjYKMRzD+NLBr1IyP9uSUBaXExxoCkB1Mei7BTw6+um95/4v3gT
/vpD8udvNT/9NvD6fe3OcXhbu25ymGSAEa2Vga8mChQTgSySQBUDV8Ym5rGI
+UxCGgUTSUTDxYUL9pY9CDM8oAUKKNxsKAmCKEEQzcOgfKBbYXBlSkS7IFeN
mGDYElDmeLgGB4yJGC4e5EAAEu8CoYUhxOmIftPM/E+owyITBABhCXxen07F
ol7DhunCw/itp/m9m963Wzi13Rkri/3eDmoyEkQlOYq0GD4oRzl3SLNhSW/t
Udzlu+r778oPX+QN79k0Lug3zhtVTxkU9uvkdWtltqilNahEl8mH5si4RLOL
+/T7dlzr58wGtm2nT52nDm3mjqz37vtuXrpcvYn+8demjz9Vw1D/238s/PJv
M//2j+0ff276+teJH77UPngZs33uvLxvvn5kO7drO7xiMrxs0T7Jr+nXLmxW
z2lUS6lUjMmT8YwXdIsRcgxhBWdKTsN/8sQJBvzlm9xnn9vvwaL9Xkz3lsOd
GaOEehWPVHGrQGETJ0E1LYqUBF6MifdNVmrbsR47cl9/FPrDb1PXn3vuvS29
96Z+5CCgb8+nctIgtYObUK8VVs7xzVH2zlByiJE09mKrm1IUuARJDk5IGmKJ
QhQ6hkRBa5lSAzNkkqpUEsuV0qqVs+tUcxs0Uqo5KZUqCaXKyUWq8Xmc8HT5
sFTpgGixgFBRTxj29nRLU6oJj8JTxHNEsZI0jAoVtKGi7YmAMxnwpaKDqcgb
TzcCyoWAdibcGAgQ0PY4IJBNsMGhzeG7DMEEjjJFWhxBPgaljUXcaJUwgCiA
0sNhfAmYECIUhgeDCegoAhhOADLphEI2vVSMWSzGmuZrj3E1BjmywxyZQVmR
fjmRMSXJURlmDRNfwyLWs0mNQqRKNr6Eja8Wp2ayCbEUJIgtkIJEw4RQQScC
aI7sgaAN8IAeHqUJofRY6LFRvfuPvZ+8DH78MuLNx9svXpSnBmjbqFP0RTB2
CoTkIIkFnvqMumybMLWMgs0lgUUMqJRNRBIHaPBTifbCob2wKCfMTaEKKzEM
gnYxDCCIQVNBUByDdALY4VAOOLj0RsH1gjEMdTxaBwdo4FCqOLQiktuFFsMh
Y1m0m7ZM4p/bBUgjPTIlhVLWoZVN8KuXjFt3LOcexC8/TG5ess/p5hY2uvf1
ZzjYystIkZRk6YoyFM9UmbwBrbYVw8NXBU+/9L/+afL5157pY5fBXdeuVTO4
6iwZ0i3p4+a2q6c3qEaXygXelrQPZUQWy0+e+HQs27eumE4d280d22/cdz98
GrD/2OPdt8p//5/rP/8+/O2vA3/7z42ff5/8z/+6++lb68ev9a8/lB9f+e/d
c944tl/et1vcd53bsu2eNmoY1a3q4RY1aWbVq8aXyIZkiLnHsNxiBO2D2J5x
wn0bFuMHdruPInefRG49jtt5mjR3ETp1GtmwYJjRqRxUoOAULW7oxNTk0+Tk
ScI0vEeUctE0t2fHafc67uGHOy+/DV59bDl+XjC079G+aVc9b5o3yE9q0oqs
UgssUnFJkrGOEjX2ZqubkeV4BBl1ghSHQBeCAY+xCRJNbVAr6dS506tf1sOv
HtSrHtAr6tDKadbObeHmt/IKWnTTqzVTyjVTyzRis+QjEmUDQ0XdvViurmw7
K4Ypj8xTxqmJY6XpGBkKqElC2m6tbzqmXGEWRRxOYBpH2gDMschLIjP4Xt+0
eHGxKC0MoAeB2hi0Oga4STSDNQwgCaL1sXAphw0n46Nheieg4wiYeDKuVFZm
2NiwUVuzXkd7IyBk2ctnw8vrwNtjRV9rlq81ydcZUpTqFGc2iFB7pARr2MRa
IdIdIVIhC59Jx0ZQoXAqPgRWyxQMrNsdCGhLwnc3LYCHB7gE+CkTaKjgPLz2
Ob/yefgs7N2POY8e5AdbyptwGMV5/OE5i8VD6/OQwPtR4duWxj1SQnmwpCGi
4Eo5G64IyJgwWKfBYgYSsMfeMgZRsB5TAlHwOiUOooSQKQz0jWU6IIxF5IoW
DuBCaE0sShVWLzhAGQ/I4YAbj6Mbn0ZkKBhB+J8C5obb8WiBWwL6dkK1SyZ3
Fnmdu5ajp8EtKzaFgzr5ffyYEhX3WElTd7YGlyoljlfn0RPr1AsHtZqW9M9/
uPP21+kfflt4/qVt4dyja92iZcmwckKnbESvckgvt52TWqcSVSobkC3hGMly
ixPqWrUb2nVvX7MY2rNaOnfduXI/eOJ19iLw6++D/+v/u//b3+d+/rfJb3/r
/elvE7/8Y/PbX8dffSy5fB4PF6ebp66rxzC9O05smA8vm7VPGN3p0yrtUM9r
UstvUU8ukQ9KE3WLYTpHse2CmVa+9LpJg/5dy7EDu61HIasPYx5+rFu+HzV7
N7Z52QYWM8HFio5x4gYuTF1zhoYGVUud5p4gnTXO695xmr/rc/G2+N2vU08+
dWw9Spo69e1Yty+bMMzq1Yxr0oqpV/fNU3BJlbIIFzLyYWtaUxUNiNIaOGFZ
SFKZ6JcpUzLEL+/TrR3mN02YNk2Y1I8bVQ3wKgf1a8bMygcNqkZMynr5RR36
mXU6yZVqSUWcxFyl6GR570BhN0+msyPT0pTC1yZqKeA0pXGSTIwgCS1DRDwN
YCFqgEPaWkyQPBSkVdsI5nMcEu6mg7TvwvocpQorWxAli4EFDCiBCF2UMAgK
YxAfiVASNpQEBRLQsG6/TSdmCTHb+Hornu7bsUkDTi7bEeH3cvOelFcdBgUs
mxmMqsstWBjN6fP6FCXH1GQ6Jdm5VKiUhSuiQ3dkxfLZpFASGEaFgqiQHwnt
hrxXAm0RFx0UEkECobQJgLTAX5KDRO8+dDt95HfvWeAPXwsePy1OcldaX4v7
8Hv91oXD7LbVm5r611XVL/IKZoz5NQx8Jh6VSADgwjmWAqMd2ZyBv1tXLMoK
LlQxML0jgIeluzAGzb6JfaHcbK3gMAAJCzCwgAiE+J5JQWhRLMCCnwgIwyBg
2BSMEB0rLgSJsrBCDCyLiljakgkghYTBACjbQMmaRZOGVYO+fduFB3HNSxZ5
PZzCfqOYEo5Psqy5u6CmHkNZkeESIZ/eysnrV+vbcXjxbfDdL5Ovvg0++FC2
dOHSuqTXMKdfO8WvHOEWdWllNaqm1qjElsr7p4k5RbDMvWhZLRr9W/bdGw59
W1bTR9Zr95xOnvk8ehv309+G/9f/Pv6P/1r/9R/jn39p/emvox++Nr56n3/5
PPbovufuXa+TB8Grh87zO9ZTmzb9ixbN4/yGYV5Fh2Zpi1Z+g1pCoVRwmohn
DNs5nGUfxDD3pBX1aHVvmXesG/dvG24+SnjyqXnzcfLkiXfLsnXhsE5snYpv
toJtiJiRLdvWQ9wjXC6mRiV9SL1yRn/m3PvF146XX7ovXmUePc/ceZQytu9V
M2ueO8BLaFJPaNT2zZd1y5CwjBCyDhPVtqUoG5HktAgKPFJ4sVL1hH79pFHz
hFHvglXrtEnbrEnjpHHduH7LnEnronnTvEX9pGnNuHnduHVZj2lxu1Fuo25G
pVZ0mnxQjKRfqKiXn7C9PcPMmKyngddSgDgSWCk6yCJhKHg0A4vcRw4W4EFI
KCQfi9LFAloYlDpGAF7olRCcA3LI+yO09E1BJ4YcaDaIFgOR5T6aiouA0Y7H
xCKvk6AKeZlZ/8DDpNTThPj93LxxZ/uHJSVPq6q2PF1XbK3GDbj9mpw+ZclR
TcVRVfkOGZF8Bq4QSVSESsVYOWxqKBkMp+IQmxoi6E1Ew0WiPQGwx8NPIsDD
AbpEQAYtYKdB2NqyPn7gefEk4Pm7pHcfi04OUj7/1PT6U+P+ZejEptmTrMy3
dXUfOrouEpN7lOXjsbfCISAcj44kgBFEMIQIwgzviwccYG2GQfYh4UIVFjMi
SKTXH2NHNwz/x5wd7mZYkooHRekYFTEcT5nEUyHqa5J1Ncna6gRNDkGdQ1KU
xctL4yREICFBZFrZM1G2fsW0bcukZ9e8e8uxeFA1u10+r1s7tVYjNFfBwlPY
1EncylMmqlI1sYmTP6AydRIMc+Drb0PPv7RfvM2fO7Xv2TBsW9JvnDUs71cv
aOfcbuAkIrslSsHpYm4RLFNXiluUcNOMYc+6Xd+G7ciu9eq5y8lT3+t38T/+
Uvf7P6b+8Z9LP/3W8enn+vdf6l58yH7wIvr4od/hfZ+9C++1Y/flA7elPef+
BaOeOdPWCb3GIX5Vh07OHeW0SrmEAqmwNFEfWMYE0K29aSZO1LxWjZ5N86F9
h74ds+1HMSevCtau4iaPfaqmdeqX+BndOvF1GhGlHI802aBCjneWTEyTYtW8
UdW8fsem6f13ZW9/mTp/U7b5JH14361l1bJhyaZk1CClVSumTt0vXxpGu328
mIk/S9eFrm5OVjUhxVap1c8aN8+ZdMyads2adM2bdS9aDK/bty9ZtiyZdq2Y
D27adyxbNcyZNS9Ydyw51o9b1wxaFncaZtbqpBSrRqXLhMVL+YYIO7uzbG1p
ljDgNfGacpCSKFaCDrJJSIYCvCITMSjmjQsKLMhVkTYn5FBChugRWSuKBqRv
bFKYaDQTBBggQEIKVbQnEaHicCIUgUfCXDKZ1C6+3qKP70FK6m5k1H5szIyX
915a+r28gr0A330/71VX1y511XkD3oql2YSO6pgWp06EXkjH5zFJ6TRCPAWK
pWITaFAymxLPIAYSUa4k0IkIWiKjImg9HFqXiFaBAG0mOD7MO7rvdvdJ0JM3
kR+/lv78bwMfv7a9+VRx7zp++ch1283lc+/gx97+52UVU+bGWUQgFgdEQUAE
hIrCA3EkFLLXBD9NOMAaAxhgUBy43L7xChDBIOYY1O965maCG0IDNDxaUQwy
0yI5mtHdHNhuLoKODmxrO5atPdPMkmZoQjUyo+vqUXS4ZHUNorwCXkwUG5Sl
2LJl07Jl1rlt1L5qXD6sUtAlm14vHVcm5xol5BAh7BAl5pclE14hn9mlXTml
ufM079s/dj/9dfntzwMnz5LH9k37No171sxqxrnF3ap57RpZzaqJFXJRBTIB
KUIeUUJW7nSeKTGmSL5t2aRr2bp/3XbmwHH7rtfli5A3H1K//Fzxy2/N336r
e/sp68nruLOngadPAg8e+O1ceK2fea0cuc3s2E+u2w0umTdP6DcMcu/0aBY1
qWRWKaSWy0VnSQTEC3qECzr4MkwdyfoWlKgc+d4ti8Ed2/FDh7kLr91nqc++
NG0+jBo79qxb5N8e0ImtV42oUYqsUwoslw6vUUjr0ywc51Yv6nVumS9f+sJX
9P7X+b3r3IE9l64N2+Zli5Jxw4wuXliZsmeKlHumlHOqhEkgi+dCVzUjBebL
t62Zd61YDaxZjaxZdcNCa9FobMt65sChf9uie9NiaMdmaNu6d9OmY9W2Z92l
f8O5dd66YdK6vN+4oEMvo0YrsUglMVslMEbCM0DYw0vI1oZpZkTlaxFgSSMn
ghWlYVlEZGgUh0F9NzHAw0jGoOgYxC6AjUGzEL8IgA7CXyLBlEQAwIMoAgbA
wnyIRgXQcDFMJHgrlgjephNqFOWHbWz6jA17Dfgjlhbd2qpdulqjDrZTDo7D
PK0NV6dVL88hE5MRXe62u+uyvX2nqsIdUWY+m5JJJyaRMAlkMEeQnMnCR9Bw
IWSMLxHtDB8k0AqP1kckNDJ8xCGgpVG3chKkTh65nl75Xr0M/uFz/oevTV9+
6f34tePyZcbyqVuXpvKzouIfmlqfl5afBAfnUjGxkEAyAnhY0oAxOFQ4XFCT
wMCbURRzLAouTOSRt/8oMcQkAUmtotwMYsD0riyPd7dhBXkIBQdLhEfLh8XI
R8Qp+IWKu/kLO/myHbzYdh6C1s4sayeWvhlFx4CipUuWV8GF5Cg3rlnUrxk1
rfBhTdI4pVE6oJpcIxNVLOmdKuiVJuKXIxVaIh91R7luwWxgx+byXdPbn0ce
vqt88rl553HkyI7lwIbpwIZl55JZBSz4O9QzG1TS65Wj8qW949jOwUxLF5om
H881Jea2qrfMI/3w/euWC4eOew+87r8Iff0h8YdP8a8/Jjz7IebiiffupdvW
hdvqifPyodPcHnw4jq9b9s6btE8Z1w3q1fZxy9vUs6rl0srkE/JlwtPEvcLZ
Dn5MaxeqqQ18OQR7f1bbovHonvPYoePipefhi/hHn+qOX6ZvPE5sXTcrmeJl
9KoltanENSvEtynfHuLWLluVzfAq53X6d613nyY9+dj84seenacZg7tOsPRq
WrQsGtXP6OZG31Hzy5VzyxS3jBY0DGBq2lPckqWbVswHtu0Gtmwndu1njpwn
D+wnDx0WTl0Wzp1mTuxnTl3g+r1vywwWfkM7biM7br3rTh0rDs3zNg1TVtVD
5qU9Rjl1vMQi1ch0Rb9wcZ8gEVd3QTs7hpkJXVeDqCqDkxLECFHRDCLibIl4
MYEAhIz63Xh6IMYd4M3JH1/CJxCI4BzCAGhY3mAAHyo2mAQFwCgiYW+zqJUy
4l2mJrUcJfgoV5ApE2GUC1NKRWg10iJ14ux+LdVxK8uT+Pgdb68lO8ut4KBZ
e7s2VU4hi5hGw6VScckkMBJ5yYUNIWMDyUgeqCsRjUww4dAGOITb1XEoDh4t
BaAcuJS9I/t7jwLuPwt59T75w+e8Lz81//jL2OO3hZcvUm7j/tKkJH0eE/sy
r2jFyb5UlFVGwybiAFjPJOCBZDwQQwCD8aggItoNj7LAor4PW0nCEh2ZZgXp
OAwBfsbJaDNTelykZHKybHKGYkqeemqhZkKOWny2SmS6XFC8hE+MiHekuG+E
uHOAsLkzzcSBbmBB1zGkqmjhfVLlqhaMKuYMmld4bUvchlnd8nFeSZ9OfIV4
RLF4cIFkRJlifL16Ri+3Zp6/fBnx4ZfxD7/O3ntTevIqd+Ve4NSezdCmRc+a
aeucScUAr6hT53aTZuodpYQieZ9YtqMf3cSWqm1AkFfGmjsxakZ1W+eMOxdN
R7dsVk5cDh/6Xl4HPXoZ9uBZ8N2nvmePvDbPnDbOvBb2Hadhft6wHlmz7luw
7JwxaRw1quriVnZoldSrZlbAUJeMTBcLTRT3DGHbuFGt7Kn6RmQVNRzPiFgx
rDO4aT227zB/4b71JOjRp+LrH1tW7wcO7ds2LBuUT2vljqgWjesUTfDyx3Wq
Fw3vLOl175jPnnuevc5/+O7O8fO0/evUwR3rnk3bO3PGFZP6hQOGsQ3q/kUy
7pmiDimiFhFsq3ChqmnDiWOv0V3HqSPH5QuPhTPXpXOXzQe+6/e9Vu+5rFy6
blx5LVy4jR7YTR57DO26Du269G7Y9m25dq07ty851IxbVI+Y57frwXVraqlW
TIZiUJSUp5+wgyPb2orB5xE1lXFKklhJFihMAxkExKkJab8Bge8mNtD3Exjq
N0z+J/4R+xrk19FIW5QvFetDAINw6BQaIV9EsFJZoVqVky3CTCJjS2VEbwvT
UmlgtiAxX4gMQzqLSakUExzhyB16u5/FRB2mpi97efdq6xQySXlsSgIFiiAA
UUQgioSJQWJJIQ8Cwu32BNAGcctH60FoDQhQxgGyODSHhh4fMXjw2Ofx8+CX
b2O+fC37/O3O+2+dz97nv3yflkKGYnAC3Spy80a6bcry3eoqtWxSOhFII4Fp
eFQSXiAG+Z5R/kS0NxG0w4F8ZJcJJX2DdkE8BlYySlIEdw/BpGz5zFJORoVG
bj03/Y5WerV2fLFKYqlSYolSfJFyTL5CyG3Z4HQ571hxx0AhxwAha3eWoS2s
Mahu0RJFU/yqedPubcO2Fb3GBYOqKb2cLsWCHk5qo3xyk0pKk2pGl0bptG7X
ruXJq9s//Dzy/pfpl1/6Ll7lTB04dy0bdq0Ydy2ZNE7Dul23oJ2b36KdU6sR
ny3rHca2dqMaW5J4ekSOOk5cDO0RLNIyzW8c53fOG08ggHfbu+dx8STo8mng
8UP3kyuvnXOnzRPXtSOPkXXz7nmjgUWLoXmbpiGjqm6dsjbN0jq1rDLF1ALp
uNtiEUmiAZEirv5sWzeakTlJWxfPUcXLyGKTyhUGtyxGdu0W7vrsX0c+eJd5
/ans+GXm3LnLzJlXz451zYJe3ZJB5Zxexbxu84Z587rB4J7pyYvU6w93zl5n
L971nTyyH961aF01r5o2KBnhF/QbxtZpBsAPb56Ma7q4aQgzpVFt9sxnbN91
+sRt/YEPcjz03rryOX4WuvvUb+dp4O7TsJ2nwcuXHiuXvkizxIHj8IFj/65z
/7Zr74Zz15pzx4Jb9bBlXodebqv+7VpeQq5KWJJCUJSks6eQhSXVxIiio4FX
U4TkxLASbAwMeBr+JusH6Z/8p0HT/8E55l8AD4FoEISxhw5l4AIR0wlMDote
KC5SKCudJUTPYxIz2IQCMWqaGC1eEJciRkoUIWYIkdPYlHIxZrec6KS20kFw
4HZs/KSN9aSpYb0Yq1iQmk6FYmHiJaOTqdg4RMlAITcBKI5E0BoPmiPmz7CS
AeTgg4gWEvhLcZbS4+fe1y8jrt9Evnyf9Olr5U+/Tnz5dfjd5wofMi6ehM0j
g+V0bIe81LCO+pSeZhUVrGBgc0hgPA4ViHS/o7zwaC8CYAOh+Dd56zIQIIlD
M2DkS0JhkRI5tVrZzdz0Fu38bn5up0F2m25OOzezWSujST2nVTe7iZdQqZJY
zokvU43NUw5CJunEPWMkncNELNyZDsHCeSN6lXP8lnV+64ZJ4zK3ela9YlKj
bla3coqbO6CW369RPKLWtmE2d+l294f8d7/OwGh//bXn8Dpx7tSjd928a9Ws
e8myccKkrI+b3aiWUa2YmC8TmijiGcy0cqTwDQmamjhFJaykBIbNBHyjxWqH
dBoHdXvmjWa2HbeOPbbOnE4feh/cdds8sVs/tlvas57dtB5aNutfNGufMOgc
N2ge0q9o1YRZPbtMJilXIj5DPCpJxC9c0MOfbe9GN7Ug6+gSVNRx8gqQEBtj
5y00sWc3tmOPdBFc+T14l/3sc/GTz/VHL9L2XmQuP0waPQuduhvWe+Dcue8w
cuo0emhz8Dz1/rvy+2+LNh8Eju/b9mwYj+8i7RDVUyZ5/Xp5vfzERi3fQlnP
HCnrWCGXVPG+LYeFc9+RPceV+157TwMPr0MOrgP3nwacvY4+eB5y723Kgw8l
l+/yj17e3nuWsH4VPnXi3rdrM37kNrLvMbjj3rvh2rboWjFiVjkM07tRfoth
cplGWKpcWJKsd6iYjRPDwoLG1yPpqBE48ngZMawkImlAGgGZMsP96dSEwaD/
FeT/egKjHVbREUwoggSF4dHFoqxWDbViafE0BrFAjJYjxciVZydL0SOlaRHS
pERFRpIMPVGElCtKLxSmNogz+rU5Cy6O20FBk6bGHfLiBWxKFhWbRsEmEYAk
+FOQEs2mBuAE3GCxQQYtbyLnTG523TkQoEFCi6EEnPSpOwdWj+BV+1XE1euQ
1z8kfvm58dffZ77+PGDIJgezSPACkUzG5FPAcb7OqZvjuKpcowilmIKJR7p5
BXxwt5wgAQcIZQvdMrqZP5LHo4XRgJokLj5RLqeRm99tlN3Nz+vXvzNuUTVh
XjJoUNjPKx7QKxvSL+nj53Xo5LTxSruNc1r00uDiqJgTmaMYmCLjGS3qECJo
GySU2cWtWTKuXTHs3beaPnfu2TXt2DBsX9Xr3DRs27Csnddr3zCcvR+2chV1
74eCNz/1vvnW//hj1eZ9/7ljz5lD1941s44F89oRg9Iuraxalcxy5fjbUqEJ
ol6BLFMLoq4eXkMLLy+HFRXGMqgYOhXwj5GsbFdv7uMNzZuvbDkt79htnTgd
XnhsHbvMbJjPrFuMLBr1TOn3TsJQN27q163r5JY2quWUyyfnSMRliiWkSQRF
Crn5Mu2daeZWZANDkoYGXkEBkpSEBFmggjK+fpg7umU1emC/cM/x8Drw+aeS
119bHn2o3L9O3HiUcPK25vhV6drj5Lm7QdtP4u+9Lfr014WXXzvPX2XtP42a
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
cxzac4CPgW3biT2X9mWz5gWD7hXLoTWn/hXn9jnblimb6j6T7CZu2h3VmBL5
0FwZj2RRixBGVg+3ddu6Y8tm8sR+9sJm6dJx+4nf2kPn7Uc+u9cRsxeuq1ch
jz41PPnUtHLPf3jXbOncY+7YdXLfcWTLoW/JrqKHV1jPyalQhMVGRJxQYKSI
lx/bypKor4/nauGU5SD4fgnRQQYRg/i645FFGQcAysqE+BTJOzWcuga1tjbN
7h7dzm5eY5tGXYt6ZZ1Kea1yfpl8foliWrZ0fIpESKRQYLhQYIiwuyfL1p5h
akLR1yPBq4ayPE4SfpSoMKsj/zKBAIIAyitUtHeG179ivHnpuXvl+fR95vWH
ordfOx6+r7t4nf34Y+X1x4artyXXH6pefiy7fpN+/NBt557j+qnDxoXHyrH7
6Lpdz6JFzRi/atgILn9i7ij6F8jaxQrCEnHxnufyhefZ08gHL27vX/rv3Pff
vPBePXVfvuu1dNdt9dJj97HvwbOwe29z4Cfr1bfR6y9D15/7n3zqefih9dHH
rr0XuePHXmN7nl3rLrXTliVDRnndhrebDJOrdeJLNKNy1IJTlB18hW1c2eY2
LK4eSQ0WM/AFimKFWBgGBXkDTrih9z99mYD/JmYwNykJpiTQg4oJIGCKxIWm
XZ3Pi6vGXFwLJIVvSwrGi9F8hAiekhQnaYqdHN1JS1JbnCFOxGpLsFO9DNJs
FdPkGHfkRUfUFc7Dgw6jolo58gUMfAadGEkAw0nYMDI2iIS8S3UjgA4E0A6P
bLkb4tAwCcNo14AAxOcfB4hgUfrK+OlZ/aO7LnevvC4ee1w993v0MtBOkuGq
z4u1MwmTZKVSccVk9JCa3IW7fZsEI5WIymESUum4cBKy/Yh4g+AQvxo1Aioz
Ub121Kpqxrp1w753z2lgz7lv12nmImT1ftTsmc/MifvYvtPkoUv3msnIrv34
rsvojvP0nufQunP3kn3btE1pLz/ljlp0iVJYvmxQjrR9lLBPtnTzhnXPjsPY
se3YsRnM6iv3nVYeOO488T54Fr76wGv6wvXoZfrRdeL4gU3flimsWsd2bIe3
bPpWretGDUpbNbPK5NPypeLTxWD69fShOTvRzE1J+roELQ6kKIUVZ2MFqSCd
gHgG3rhNAjAyITQgKoR1dWJnpEqXFsmVlshXlXFKSxVKSuTzCmULi+SzcqXT
MqWiYoWCwwUDQ9nefmxHZ6alOcWQT+JqEVQVcYqyOGkxHJMCUhDrXRB307EP
Y0BYBFtQo9K3YLCwZ7d47HD42O/oSeDFq7TrT3X335acIBeScPYs7uJZxNmT
gAfPIs+u/LcvfDdh0B7arh17TWzY147xS/p52a2aGfXq8VXKoYUKATlyA1u2
8xfeu1ehF8+izx7Hnz1JPnocv/swenbffebIo38L6UmbO7Zfuuc5d+6zdBGy
fZV88brm6efhF1/Hnv84AAubBx961q9Suzbt4YW4esaqfMyieNAsq9UwtUYn
tUonrkAjLJPjGS5u7y1sasvQMyKpaxIUFQiSEhCMdvpNvwcRyfqB4Y2C/hXk
f55/R7sFGfQlY6NwQIOG6lVl9WZ8Uou2Zr2KTLoILUaCEaMi5itDs5WmmUgR
DGRpaiIURRreSErQWFY03EAqSYFdKSfcraG06mR3GBEyaGKQxSQmUfGpDHIY
CRtAwviRsW4kDAx1Wxwy+GyGQzLXYCWjhZi3APJYQBoCRPEA5ZaAsxVzZdts
/8zp9L7LvceeZ4884EUnxEzHT1k8XIR+m45rYkGTCiKbBhodYtRcGiabiU9n
IAMjCNrxKH08oIy+5cxj1nWal01YN605DO17DB25DR65TJ16bD9Nu3hbsfs0
+fx14eGz7PWHscuX0btX8dP7HsPbdvMH7lO7nv3rdl0LNtWjJlkt3OQa9cgi
Bb9sCVjJmMP03svv3nXq3bYcObSaP7dbOLNaf+i+9sB54Z4N/Ll412Xm1GX8
0K5/x2Z4125gw7xz0bBjwbht1qR2kJ9fpxJ/WyQqSTg6SSwsQsjRkWxuRjAz
JhnzCCpyGFlRjBgTwyKDFBx8swAkShhCfLOJuBtXYSygII1ztKIlRIvmpEhl
JomlJoqmJ4unJUnEx4tHR4sE+rO9PZlODjQrM5KhHpGrhlNTxCpIQeJCyPpO
RSwZb1o6Md/bmG9inlCAhS27dYTbN8ef3rFYv3BeOrFfPHXYvOe+8yBk71HY
6oXbxl33vftOB5dO26dWZw8Dn7zIPL/yW923GV2zGl6xap40qhsxympST65S
jCyUg1fA2ArF6WPH1Uuf85ex999kvf5x8PmnvvOX5ZuX8QMb1o0zenUz/PYV
s7F9h94Ny8Edx+51+7Zl85nTsLs/dDz+1Pf0x4HHn/sffRo+elkzdhLRs+nS
se7WMOdYMWSa26GfWqeTXKWdXKEVnafmFyvjGixu6yZoYEHX4BGVlHGSElgh
NsiggGQC+vtDfaPeURAG/d/KVRCDJoOANZIyBsXjgS4djbs5BXtJKfUaKuXy
EsWKYvES5GgN4UBthqeRkKu5kKkaTU+CokonypDwdDTKTY6SrSxaKs5uUVNe
cHHei44ZtLAshdFOwcVQcf54IF6I4U/COhOQOFELHGiOQ4IFTQmgEQ5E7LJv
0C6GBYSwIBOPxaMEQv1FNo8st49sz+67nTxwVceD8YaavqL0GDY1kwreoYPd
goQOJqaZiSlj4fOYuFQG5I8Y8wqY45GyVwG8lRSuBBN745LLwJ7n1Kn3xKl7
74H94JHj+uO441cFxy/Tn33pvPeu9upT28MPbccvS/afZi6c+qxc+C0ceY1s
OXUt2jVOWeR36sdVKYWXKPhkS3qmiTrFCntmSLWsOXVv2nduGE8eW8+dWcH0
vnzPfvrYeObUbOrYvHOd17nO79s0G9m261626F42b5sxqRsxqOjSzqlWSsmS
DIlkB4Sx/PxY1pYkY32CCZ+go4JVkgJlRLDCNGRXAUH7zej3DeaREarvpnw4
NAAreXEW1oRLcbdh+NjTg90FgzxYgW4sbwe6nTHZlEs0UEdeqatIQXJiGHGk
akP6pm7i5gEcBgXfeuT43skMoSkEiEUn+4aJNg2oTy7rrxxYrp84LB5bT+9b
LB5ZLB6bLx9bb5zar5/Y7J07Ht513jqwOD61XN83G18xnVgza53Uqx3kVffy
Clo1E0sVI/MVXOOEM+vUluEy9p7Xxauoj78Mvv957s2XsacfBzcuM0a2vavH
ueVD2uVDWg1zJo2zpg2z5tVTRnVz5gNbXov3Yo9fll997H72dfzxx8GLt82b
j3P7dz2aluzqZ62rxi1LBswKOoxTa3hp1bz4QrWgJHmfCEknmN7tGFq6RI46
suMkJQ6xaBgKrNa+29dgUH+IGRD8HoiA+XMHngICzgxcELIhI9DO1bwsLDm9
ndWtp10uJ5yvzM7UYqbaiaaFyEf7K3iayPFF6Rw6URjCMiEsV1YkUJ6ZJEQp
EmF28XRWfXyO029POLrcJkNJVFwkGesHoYIoOH8i2hWPREXDaDeDYMAj3cU6
WBQP+p5whIyFCn6PQoAwREAgIkRiccdsbc9y/9RWDgcmKIp60fG+JGweDVtF
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
yGEUsjdKmMOYYYARMXhAOAnwMaJvqWPI3nnEc++Ed/ey3/ELcYt3dg6fS6gf
kzZNeJQctEyt04varhlcqBK6TS2zWVJ9wmX/Kbdj5/1O38l9/svk5y/X3/x6
6upPtaeupYyeCW8dd9l92LG8y6qgyTS72jgmT9U3Tt7Rmy2xpunoonhZJ+Qj
LDr0oyZCQDIVA0Vi2NiM6uDMcHVnurvTHR2o9jYUazNMYoia6GD66qiqPHHv
I08HszWx817Cu3HadwJVnidqvkzRuOMunFVEh7jgAIt8lAMeYYOHWcAAG+hm
ktuYpDY2uYUN1uEkzyTVM3FdJ5dHlcuikjIopDSMFI9tikRxzMv5EQwv816A
SAYQWRsCVAhWIdo1OOAJL3qITPtPrjcVBv57k8XAcY5BTBSikImVNwENMlSC
LVQQW1XYVgmyEoHGPECbBYgohEMmHcG1EPHHfthMUVGIhosGkpzEhH7xUsil
jZgbt2MePE548a76/e8Dd14VXX6SvnIjbnzFc/i0V+sJR2cHeQMVzN6MaWXC
8Q4VF3ZIqkccW6YcFm7mPv5w9KeP488+zaw9rBk6G9kx790y5VJx2Lyg3XBL
i8GWJpOUKoOoEq3wQu2gTDWnMK6tL9fYnqpjhqnpUxTUEIEQYcmUzI/sGxmw
wf8v4Mn/J4yYrIFBYRwohgGm0+FSLuWAgeZkROhaXt65zTGzQU59UqPDUqMe
C6MT/l6DcbHx+trDIcFL8fEjft69nl7tZia7FETZTCyLQ09g0SJkoaUyekf8
MNgdBc1hsh5E1gKJLrEIBDkE1MkUkIyCBJljoEzDgMQiFUbUETAV/KE58Qoa
xItZDfzHggJSWd6fFAUMMVCVuIEFOLIGNVVmxquqx9o56Fl7wr1r2W9oLWzt
ScPM1eKOOf/6Y27lvQ5pNXoh+WreyUruEYpuIaLMRsnuSef+lcDxyxEXnlS9
+jz16c+Ld1+2T1+KGTkdcmg2oGHIrazddEudYValYUyuml+U0MWXZ2lL19HF
FBVgAQdmUkE6Bf+/JpLBKfgTEyCUGJ0CynNhNSUi211RCCnhCBcSTMijgRwq
xMWgWGVkyY593Uv4JF77817p5ybrn4tNbzsrLChTjnHBITYwxoeOciEc8Dj4
ezlQFxvczwJwtLdy0UYmeS8LrGIStcw2KikfxzxGSkblolC5MEQuCJHzQUgO
hGMz2RL6x29EFSIrwiThf0pXGeaJbWWZvAEZKMDCPz8EwCQyEwGcDanlMbym
zfz+bEFXArMtlLrPl7bdHks3gIKVAAceaMwA1ahEoCeT2BUCZbAny+7CcD0D
jo5YX7sSeO2a/70Hge8+1nz+e+rtL4cevKw6ezf+1LXg3hXX0GQ1YzVGbIxS
SJiis48wLFtxR5d545jDwErAhSeVj38eePC2/8pPdcu3toyeiz5IRAraN590
3dkjzWs2KGg1zag1Tig3CM/X9E1VdArnSb1YJvZ0HXOKigGqoIbyhT+UDBGO
gKL/CUSA/9/kyv92aWTXEPhnJvsJkBgBEkH4V4Bb2NheLZVJX8+Tnm6dBprD
ViYDFkb9DtZjPp49Lk5FetqN5qZTYUHjvr5dlhY7FUV4fZrLoWZz6ZuZWCId
jqSj4VTUDwOdEdAWIhvhch0ENEFABAIyVgeoIJkAOQggxCGEOgUnfAgUQiBe
vSpDBMgRImoTRog0YVxewkyE8K8TIKA8BvIoxBgVi0q00Zg0GGcbFR1W8WGn
2pMeHQveA2uRt18fXXvY1j0fumfUoahDmlShH5yt6hIispByTQ14Nq78ncP2
TVPO3YsOa493PPkwfO9lx/Vne0+sR/Wf8m+fcKkfsq/ostq2zyS7yig6S8U9
CP8rTBNzqpY2KhbCxD01hRgx/XElRP3PISpBAP8J4/8u4oeMySoj/JVGxIWT
zbnImBlt3Z57z0vxc6vLt9WIb6dDP7c4XDZlL6vQ5hSpE3x4nAuOs8FJRXTJ
XHxEiPWxwYMc+ACHwHwjA2jmgI0sAK/Zq+ikYiqpgCqXS9mEAz4eIUUipFCY
5IvIecBke5hkCePfOVlH5h2EP0yFEMAnAjGhH5in4+DHcBkJIiRAS4gmujC7
c+XXGpTXd4ovFCks5fKmUjnHwugDAdQDbliNBbxVH0pUB0NFoAsbkNBBdQqR
jc74B/PESA8gR6oo1nh02/fGjaCnz2J+/rD1w+f9H/419vKX/psvto6ed99/
0svbVS8xVbe0RRqYruSTLI4pUtrebdox5T5zOf7J+6Nvf1959Lb/2rO6xVu5
Q6shB0/57j1uXzNkU94rzWs1zGowSK7SjS3TCdqi7pUsdomSl3qzzF2ZOpYU
NSNMrIZwhTCD4HZZFMgPC6wf+PkPzn8kI/yQNBhMhiBAiQJGiLFoNhRDAzJZ
2BYGvIuL1YrYOziUHi3FITODIRvJTGjAyZjYZlPjJh21Zn0tXLpXKyvsFHIK
efQUFiWRQ09jYMksLIYGB6GgCww4QkQepSFEVgfJCiAgAAEWRLA6/g2hRLef
KJbxYkoFAnVg4ujJpsWMCLsnWfIUMecD48yP6zEuHVKVR3SVUCN1zESTYqxF
0VVDdDRkw35iRNuYVtzn3DTn077ocWg18OqLwRe/rh1ZSS/rk5R028SUaXsn
KDh6CsP9tLWUGcoKaGaDUcOkQ/eC48yNpHvv+u++OXjpccXxs8GHF3y6pjxa
j7nt7rEpaZJkVerFbdH0CuE7uLLMzWkaqpgCH+YziIhzuszNgCLrI/2310H9
0eL7RyT/aKjKvB0AcqE6tmREu+qp+CrV4OupqO/3c75fTHmbZbiuTb9ozF/X
455SoM0IUPxMK9EGcGHDBQZ58CAX6uWAXSxyJxs6wIHaOGADE6hlkKvppB20
Tdtpm7ZQ5FIxuWRMLhSRC0TkPImMHrINRDC8CUTSI8xV/jEMFMCyWEwY5GAQ
QibjsmpruPB8i+bjg9rPu7WuFYuuFcrfKhZeyeOfz+CuRDGnA+kDTuh+c3iv
BCrRBTMUybFCwJdHtmUCBlRiHZKP/hNNhaPd1Y5956rbnfuBj57HvXib+PR1
zvNfOj/+Mbl2N+XoRfeW/UGV6d6t/X5pdfrhhSrBucrZ9brV/ZK+Be/Ttwtf
/Tr74Y+Lj9+Nbjytm7iUNHA6sG8JR7tdxYBF5WFpQZtRTiOOdu3oEm3iAZ0m
dooUWHozjRzpWgS3Y8IfaGciVCr8X27/74Fll0rEFjZKzMURo3GEioOIrT0W
FCdCYplQPAuTrchBO3jUYhbaKM8YMNYctdJfiw27sn3HQal5i556rZZapYKg
Tlm+TMTO51CzWFgqC4tlYNF0xB8j/MekRB8GNIZwVicrgTjDgGxcouAaBiAs
EfAPgP8XGCKwKQLaENNiiAVx90TEnDnI3AlwqCMynCvKo6ZaFAcJ1ceJ7u3C
dHdieTizXF1Yzq4cGynd0oJmZko1taZtPWDbtuB38LTv8PnYjZcjTz+evvKk
d/ewXUGHJLfZMjJPw91TwcVabG7ENpfwwotV68dxtLsNrflffdF85Wnd+sOd
c5eiBxa8Ds54t4+51/fZV7bbpJdqRWcq+kfK2zkzTY0pqoqwPEfmJ0YhpjJ+
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
GpiGAZVcrFFI38NFWhXobYrMaj61QkAt5dOyCCdSYlMpkgb7YYAbAjrBgLnM
d1dG7CQhUZziZRExy2GAgBIYsMFxDkM+OJOjQAAGRlKBKAoUSYMi6HAUjQgC
C6CBnsmKcTsUi9t0q7sNyls1iur18mu08mrUc3app5WpJxQox2wRh2QIgzMU
/FMUnEPY8Tu09836Hlj2G78UtXq/4t6bE1eeH56/XrFnxKrooG7hfuva/pCk
Wo3Eat20RoNtByW1Y86dp7yOno+5/rLj3puDFx9VnFyPGloO6JsLbBp0rGg2
La4xyCzUiolX9PblOdiy9DVQNREs4kAcGjHfIkJBdRQ0RAEpBXCkAC4UwJVI
UgPsMbLMEo1sgpDxMkQNIUsw4KgOY9mAu2rAe1No/nU25MuFuO/XEr/MJXws
8X+THvByc+DHwtR3OUkvYgLve0pvOZo+cLXcsNBe1eQuqzLmFGjTIsqsGCMw
L8LGReiwAD4ij/bz4FYmqZFF2ssGdjHkiqlyBZT/KWADaRRSnAztPgjJBSER
s0koWR8iWVHJvbbUR+GMn5Lk3+Qo/9Zq8HuX/vttyk/DuD8lCm+50q/a06/Y
0W66M1fM0Bk9eM4IOaoBDaoD/VpAjwHUpgfvVgbKxOQCRSAdZ3gu2YtJtqWS
jTEyLmlUaSCLTPK1Y507bbe04jK9GjK5EbBw3W/tTvqZh7lT12KPrAd2Tjkf
mvXYf9KyZ8759PWsOy+a7r7uu/yo6uGbw1ce163czR9bizq87N19yrd10nXf
CdeaYadtnWY5zYabq7WSagzDitTcUgT20VyHKJ6pF0PfgaZpRRVqIlwFlI6j
nQVjOAXRIUN7hn8OP7ZSnFClkLVXJbdRPatWM32XUkKRMDJXGJTM941huwWy
7V2ZZhY0HS1iU1KBA9lxoDAekqpAz1fmZAgoKXQomw6WMqAmJWazCrtRzNgj
T90loBbxqHkcwvgxhg6F0EAPlMhyMoMIYsfRrgISLUe+7CJbAQatUMgWJVjd
CQZDKHAwCvmjQCBCpFXGUqHNdDiRjsQycKqHceRHV+gUHjCoGjDCy5myDoPt
7brlnXrbO/QLmwzz6vVTK9WSy1U3l2lG56tHF2oEpMhHFqpWH3dqmfc5sh46
dNZ/6c6Oqy+OnHvYNngmunrUaseg6dZug9w2/eJuSUmv2c4hScOk/cCq76mb
Gbdfdd150bZ2J3diLWJoMWRozrehz25Hg2n+Tt3EdKXQcHlPNy4RFaGJaSnC
KixIjwGY0wBbGuhOBYIYQCgTCKYBYTQwlA74E4HdZFeMCJlyRMlWKKEifGng
rC5z1YR3wUL+pyT93w+5/jUb+L834v86EfguzeJZiNl9d4t32fGfdm79UJj6
IjHwVXL4Ez+HB27mV81UV7W4iyr0JRXGnCJ1SoROiLFJBcqoCOd5dFiIdvPA
Fja5iQfuY5NrGHJlDFIBlZSNF60UuSiUHCCzYnBDAQsICOVCR02gx4Gsp9Hc
N0mCf9XpfB2T/t6i/3qz/PNw9hNf9m076g1b2n0v3lU75oI2vGREWTalzBoj
U0bwuCk0YgQd0oeaVIA6NaBMkZwjT9rMJUXwADcG2YoCmGCANoWsTAV5CLk0
V3l6xvrkUsDMZf+JZZuFDa+zD2KW7ySfvBI2fiF06kLMibXwY6uBsxcT7r1s
vfWi/cKD7RtP9lx8VDN/LWXkTFjvonf3vHfzhEvtqOOuAdvyQzZbmkwTic0a
1YB8sXuavH0M1yqEY+LJ0LGjqphShFoYRwQz+RBGhRkcyC1BfvMe1aRalawW
rW3dutv79Lb36Zcf0itp1yxo1MjarRW/TRyWLghM4Ln4Mx09mNZ2NAM9VE0J
FXEhMw7sz4Wi+Gi6gJInTyngoVvY0A55rFaBXsFHS7lIEXH9CuWykUw2HMlE
vDDYDgbMiCYMSU92oycmbIQhFjG8AVrAkAsC+VIxNxTG1U4gRvhREzingOks
SgIVzmAiabgcIg4SRwNT9ulWHzVtOmHReNyq9ohR/ZBJTb9xVZ9xeZfxjk6T
4v1GWxp08htNU8u1E0tVogoU/DNE2/ulLXP+nYu+PcseR86GLt0pW75XPnY5
sf9MQOcp99px6e5jVvsm7HYfs2ydtju84nnsfNjG8/qn74/df9V+6e6WpSup
J1Yj+6e8mvocKuolOcXaianKQQF8JyndXB8z0UDtxbAnFwziguFsMIIFxLPI
m5lESEQSg5zCJMfQyeEUHPaAL40ISnCTzTbgsjmeCSzrM88Yca65KN+P0vm5
Wvr5gMPXC+F/zgS/TjF+7K9921H9obfFm4z4zzVbP25Lfp+X/DI+8OeU8Eee
0isS1fP4Q0GDcVqDsaBCnVWk4GdSjMMeHRUivVygnQu2cMAWFrmOvamSRdrJ
JG+lyaWgpASEHIaSgmQDkwFU0rQpcsuO8iSI/TqB/6867S/jdl9GpL9tV3yX
JHgZKX/PhXHPjXHXibFhw1gzpmzYsy9Y09cs6SsSdM4YOWWFjRlAI8bQflXy
HhFplyK5WBHIlAeiOGQfJv4gI5tQyAYUsjqFLERAdS6wt15zYtnhzBWv9Vu+
a/d81+6HnbmfNH09/MR534m1gPmryadvZJy7m3PjWe3DN4duv+xauJ5xYj1s
6lLisXMxh5f826Z9WiZd6487Nh51qeq1L2w1S681iN2pEbpNyTND6JoklIZy
jdzpunY0FVNMpI2yxQhO7HxlxCGel1SvnNmiVtJnVDVqUTtuWTdqUj9mUn9M
sqtfv6LXoLhdN6NKPWqLMCiFFxjH8w3jOXsypNZUCV7AKsMCNqTPgN2ZUCQL
jGeBiSwwmQnmsqFCHPMCtISP5eFQ5yLxDCgII3vJ+jASCH9o/pMdIIM60YcR
QIApBNrDoCcGuyNgAIXoT+JQj8KAaJSUQoXSGHAyHc1jYllMNFU2Hh9Hg8qO
WLTO2nfP2x2csdo/JWkcM6seNK8dNm8YkVYcxJFvUd1rXooX7I2GKVUaMSWK
Puny6Q0GrQt+Haf8+lZ9Dq/4jKwFjl6MHD4fNHszZWIjunvJpWlS2j5r33va
/ei5wLlrMZefVuKK/cWHw9efbD99NfrMjdSZtZjeCc99PbbbcRmTr56UpBLo
zXO0pFvrYSGqSIoIThfDaUI0Sx7O4YH5bKCQQc6lkbYygQIWOYcFZjPBODoQ
yyCGeYJRsg8K2MGkAg64bsI7Y8i+5aJ010/9cYr+szyDXzrsP3c7PQ5Rexqq
dVUqWNdh33Ex+ZAb8T435l1mzIe8xF9Lsl/F+t21198wF29IxOtazCVl2pwI
nRPBEyLwlDp2XIQc5oH9fKiDAxCjBRxyOW1TBYNUTJPLQDdtRuU2Y3LhGCkA
lTuqC121RG4501+GcD5X6H1b8vg67fTHPp33qfLvNsu/ihA9DeA/8mHftKPd
cmBuWFCv2TFvuHHPmlJPG2HLRui8ETKhD48aIgc0wAYF8h5V8k5VcoEISOKQ
AxkkZxrJECNrY4T/mwoV5IJkB1NsZERydsPj0v3Atdt+Z2/5LN4KmrjiO38t
cnEjcvH65nN3c9cfbD17d8ulR9tP39xy7EzQ0ZWAiQsxx89F9y8GNo677B5x
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
mFF0HWkJjRoFA8a7Tkh3HrfYcVSy9yTO4Z4t8xYHFi2OnLUfPe82eS1k+Lzr
4Jrz4XXPvbPWdVNWDdO2eydsao5Jy/qkhR1mufuMN+/QiMkThyQLPQI4NnZU
M1PU2pqmr40qCxEuA/rHloeY1CX9swAlO7JpRtl+t2zoCwDIunhlikG+FCiG
TQumYYl0dDODEk5F0lnUXCa1iMfaLuI16Go3mUuORsYcCQhp0tfdIWDlsygZ
VKiQhVafcN4369yx5Hb8cuipO5mP3g8+fHfo6Yexuy+bL9zPm7vogxPFyFn8
UejeM+/ZOGixp1+ytc04tVozKFfsmczPazNsnnLEMX9wyWfsYsjYJd+JjZCp
jbDxS4ETeN16PXJmIxR/kuLPiOEVr745x4MT9v0nXLqH7Pa1m1XW6GZni+sT
lU+n6l3fZ/1hI+rTlZjXJzzfzPt/vBz9YSbwaZX3vTTPm9HuN2O9rkS6nfWQ
rLoaTJiKDyvTBtSoR9RpXar0RmVatQjdxgGqROgZS8GaKe2hv8qvNbG/tid/
ag993uny4ITLpZP2yxOOY6P2/T3S3k7ryq06XcW6N7P17wWqvoiXvMnz/VgR
/y7H56cQkztuaufNuJckrIsS9hUr7hUb3qoJ65QmtqhPmdGmHBWQh0TkfiWg
hSNXx9hUQSXVMDed0UTuWbPeRCl/TFH/dYv23x023y7Hfj0T8vWo97+bPT8X
2f6ab/1nfeBvVf6ftji/z7B9HWvwIkTrpyDllzEqzyJVH/kq3LTnnrdgLeph
0xrwiCLQLyYfUgA6FMkNYnIZe1MOfVM6Sy6eRQqgkZxkC8JGKFmdiC8k8o/Y
KMSkQAgAWFvSmjoMekYtj0zbj572GlnyGj3j3zXv3DwpbRq3qR+2rT1sVddv
WdMnrR+0r+y2Lmg0KGoyzqjQTClXjytV98sWeyQLHWM4DpE8u1CekQtNU0oR
6SA+OeKMbq2yUUn1pFX5mFnpsHH5kGnTpN3+OenQmsv4JbepDd/Ja4Ejlz2m
bkYPrHm1LFh3LDkeWPZonnWsO2lfddSurF9a2GmRjT9BylQjc4R+MRwXL7q1
DUVqjWMe09FAFPgQiyLLjCYMakiEXQkI/phm/IFzCKd6kJj3ZkCgGQJ6UeEw
OhrHpMSxaIl0LAYvTmlILoeeTEdzWdRCHitfwKnSUhv29zsWGjrs63PAyqJC
UT6XBm6lQwW9luWj1g0z1j2rbic3om68anz7+8Lb35eevR9+9KZp5Vro+DmP
o2dcRpYdB085tx6X1g5YFHcYp1drRBYpeCTyXaK5W9tNGk84ts26ja6FHV/3
H13zGV8PHD3reXzNjygBznj2zLu1TTg2j9m2HrVvGbJpOGi2r9Ns916D0jKN
/FSFo0kaZ6M0Hh1w/ONpzl8vCn67tvmPx4V/vi39+rrqr9uVH4+UPCtNe1aR
dS8v4WaC193cgFVXo1MWKqM6rMNq9H5dbrMKvUOPuUeVUsKFTlnKX3aSv+Uu
/7Eh+o+Rgl97E970+T4bd7kz47w+ZTc3bn9swLq7ybC2WK0iTeFamdm9GM3n
KYbvtjr+XOLzOsfh+WbjR0GadzyVrjoIr0j5lyy5p/VopzSwOVzG61EmVaFR
ETAgIHVw5FrYm3B6r6DKDYjJVwzQh8789wkqv+80/b3U4MtRty/no76vBH4Z
dPiryeq3YtOPWUb/Knf4vdrnlyKXz6VevxR6vk00fRuj8ypa5WmQ4gNXwQ0H
7pop44wRbdWUOm+ITBqgx7ShQS2wWUisim9hbMpmyyWxSSEMkhuFZIOSjIj5
BLIYkaEdgZgISKeAMIlsoIuVVKh2DkiGppxG5lzHFj0G5z26ppzaTjjWDlrv
6pbs3G9c2WFa2mRYss8wv1Y3t0onpVQjvVw3fpuGb6rIY7PQI1Fk7s00cKRr
WFLEWqi2LS2nV6981LJm0mbXCUnVSYuifsOSHsPqQZO+027T1yMnNzwmr7qP
b7ifuBY0cTV8aN3nyLpfz6pPx5Jry5xj/aTd7uO2lUO22/sdtnZYp+/WTyxV
jcgU+sdy3AOYdi5UK2uqiRGmrgzJy6a7qeiPbSPg/2/cgaMdBMgKCGRPgT0Z
aAQdy2HTcD5PpMKpDEoaC8vn05IYWDoLzWZQtvLZrVqqnVbms8kpI6Hhfb7+
jXraZUxkGx1KaTZIaTHZfdy+Zc6+96zfmYfb3vxr/tPfF998nrr5vHrpeuLM
5eDRM87Dp1165+1aT1jXDdkVNutnVKlHFCr4psrbh7DdY+RL2oxrj9l0zrgN
LHr1LLoOnvYcXvEeOu09uOjdM+fcOeFQO2iJc0vtIavGQzZ1rWbb9+hvK9XI
yBQXRwtnQ5TP+iq96HL7+qr0y5vKv56Xff+l49svbd8/D339OPL3ta5f++te
NuQ9KEl5Wpp+PSHoUqjLBR/LJRvVYR3OIS1Wly77gCajXpGyjQmMaLPOWwuu
uQjf1gX/60Th55O5H0/GPD/p82Q55PqM88px+8WjzqMHrbqq9EsD5Y/n6r6o
snxXZfmv7sB/dwX+usfpY6nFqyTdJ5FaD4M1NuyE5804Z4yYS3q0eR1sSgMd
U4WOq0MDiuABHqmBJbeHKVdF/58FbfChHfN1uOKvORp/N0v/6nb8uhD097mg
b6t+X8cc/+q0/LPO9Jc8/U95Rp+yTX8pcsTp/Zci749bHN/EGj5x5T9x5j7y
ENxw5FyyYF60ZK5ZMM5Z0aYN0SMqQJ8y1CQkl7I2bWPJ5XFImxly4UySJx2Q
YiRjlKyBEoWqAAFZP9COEksuOCTEQjg5Q6nrsMXhUenIpP3gpPPhSbdD4y5t
w3Y13Ra1PVZ1PWY7W03Lmkxydumk79SKLVQJz1EJzlD0SRS5Rso7BgvM3Zg6
UpqKAYWvDCfn6+TV6NbMWDbM2u+bd9h10mprj9HWLuPyXknvktvkRsDEhteJ
Ky7jl11O3Ymdv5t46l7K7M3UofNhbYv2DTPS+imbXceku0ZsS3st8tslOU0m
GdX6CVtVwtIEfjE8vyiBoxtTYo4ZG2KqCiiPCdF/MPw/e9P/X7RDAAARN0pu
VNCDhoZR4RwubZuAVa4qSmPTcnCtIs/ME3Ni6XAWm5LPoxdxqU1mkoXMvINu
Ln0BwfvMLXaysX18SlqtUcxOw817TKuP2jXNOgyeDzj/U83bP05/+nPt7uvW
+Sshkxd9xs75DCw6t52U1g1Z7zlil7NXJ7lcPSxH7JWAfz9siTNd6sFKLNUs
OyRpO+nQMeXcMeV+YNq1a9rp0JRr66hdy7Bj/SHr2k7znY0G2/folVVqFxSr
Z2YoxEXyd/vzZp1Fc3h1mWv2/cXu77/2fHvf/O3Xvu9/HPn2e8+3j0Pfn4+8
P1DwpDL+0Y7UhyUZ1xKCr8d530oJPutrcdxE4YAa/YAGvVOD0axMK2UBHWr0
i/byN7wEb2sD/17Z99e5pt9Xtv28mPhqOeLRrNfGcaezo67D9Ra10eJsP6Xq
ZPUn7TbvWqV/TYZ8u5L67Xziv8f9f2mweVckeZFseNdT4ao974q14IJUsKhH
X9CnzeqhE3j9qAB28eTa2HL7WKRuHumGBfYqVPghXunPKv0vw67fV8O+b0R8
P+/39ZzXl9OuXyccvo5Yfq7Ue5ei+T7H5G2Kzqc8hz/2BPx7d9Cv+Y5vIlSf
efHuOXKuWzJXtNAJJWhSHVkywWaMsMNKwEER0MCX28HatINHKuSQkhlykQyy
J4Vsi5KNUZIm4e0JCmCYLRsKpRFjomQaRqw00jCykzO3ulbvUK9Zd59l96AU
141NvZa7OyR1Xca72oyK6vSyyzVSilWTtqlH5yr7JQq9Y4TOQXypB1PizDS2
pasZUlg8yNiBtb/RzUqVl1iq1rrqMHQhrGcluLjPPK/ZsLDZqGncenTddflO
3PGL7scve07fCF28l3L6wZazT0omb6YcXHVvW3BsX/SpP+lYPWpdMWhZ1G2a
v1+SvdcgpUIrrkApNFUYlCh29eVYWFMNjTF1FUSeCzPphButLLCS/E+J+n/Q
jnO7OgL5McAgBhJJx4rkmRVKvHptxUIhO0uela8iyFPlJQnoqVxKOo9ZIuLu
1lI7Fhu/z9ysx92j21C3Qcwpxn8LcW5BIXpeuZoJVUY7jljhJcaxq2mXn+97
8H70wbv+uSthM5cDjp3z6Jyy3nfcvqLXorBVP7teL7FMIzRb0TtBYOPLNHGg
a5pgGoaIQyAvY49OTb/V7j7Lmi7jfX0WrX3Shg7TmmbTygaTkkrdwu2auYWq
WwpVsjKUo8J5YT7sFmfesAF7zlJ+3UXxX2eK//ePkW/vcahPfvv30a+/Hfz6
qfvbi/o3fYl3CoNvZwffzY26lR78aFvM3fyo61khi54mo2aK3VqMTm12py67
UgBXySM3QjXe7DT55bD/n+dq/r7a+e/zOz+vZb9bink85n172ONAts4WT2Fp
nFpKqHxVpubtUfd3Yx5/X4z/9mLr9zcl//um5MuFxN/3238oM3+Rov0gVPlu
hPpVX4V1Sw5+lg2pJ9SgQRHQIyB6Ms0cuUEx+Y41/eck5T92m37pkH6fCfm+
Gvj1jMu38x5/nXH4fcX2y6rdl1np53ajN7ma77L1PuXq/b7d6a/OuH93pPyr
3P99kvFDZ951S9aGJWtFG13UQRb10GkteEILPaYJDWijzQqkPfJyO/mkAq5c
Gksukk5yp8jZYCRDRKbbYWKi+78WcD/mon/seRF+TWIsMkRYU665v82gtdNk
d7N+5V79Mly9lKlkbFXJKtaIyVIISZL3juC6BnBcAwVWLgxDKVXLhKqggQjE
CJ0JhBYqFdSYGBpwzNXZscmKfSt4URbfNu27vds6rVp/R5fp0Irr6duJxy75
DJ73OHbZd+Fe8vL9rJXHxatPtp+8nnB4LXBsI6drybv+pE35EcvtfVbFXeZ5
LSY59YapO7WicxWCEoVugRxLe5q+KaaujgjlYRbjB70Tg8Q/Elr/Mdwj2o8A
DndtFIhgIxFMLJFBrVIVdprrNxiolqhyshVYuer8dE1unJiZKmbnKvGyBcxM
Hmunvs4+G9sOqfVuBUE5j5lJAfITfU3VWNZhCl4Zypvr9SuO27Uuep66X3X3
5/GH70ZW7+RNXgofWw9uPSndO2pd2S8paDHIrjXYXKYVlqngEcmz8cTZgKYj
oapqYfJiRE2P6hElTKvQKq0zKK3SLqnUKixRzS9Ww0GevUUtLUMpMUmUlKQS
HSL0cGIE2zMHnYWjesxZU+4FZ7W37Yn/+6nv64sDXz/0fv+t7/svLX+/rf7y
uvztVPzFdMcL8bbrIRZ3CkKe1qS/2l98qyjmcmrAKS+Tw4b8Lj3WAT3WXmVq
EYs0ZSd8VWH6adTxz/XcL3davtzf8fvZzDfDwc+Oetwa8C/00o5z5NYWa2Yn
8EZbLG+OuL1e9P/rduL357nf3xZ8+1j+7cOubzfS/jru86He8mWRwZN07dth
qpddBGtS9pIJbVqfMqIK9ygAh4SkZq7ciBJ435b5Jl7xa7/jt9nI7ytR38/4
fDnl+vWS51/r9i+mLe6etPq8YvPmqPmTRpOPpQa/lxj9ttX8rwNZf+xP+jnF
/FmQ7kMXeZzY1/Sxc/rYuoS6ZIziun1Bgk2bIscM4UO6UIMCqVKeVMQn5fBI
0XSSF5VsRyFs+TVhQAEhC37o9h9mfYjM81D2SsMIeMgwj/i4sguzlaprdLeW
KucVKWfmKyWlKySmK/mHcr0C2U4eLCsHuqUdQ8+YoqqJCkUwhwtjKKhqSMnq
1Kw8YVY/5YRjPsCDExkqPjDuO7mR1DUTuWWveVqFZvuEzdglvyNrHr3n3AbX
nWZuxqw8yl37qfjyyz3LD7cOnQ8cOBey/5Tr7jGLXSOW5QOW27pM85uN8HI1
rUonqUQ3LF3JPZRj6UI3NKdo6BA+kzwO4ZgtK1cB5P9mU8oWM3ElY4yBYSws
lI5mcWjtNuZHvJw6fO2KjJVLDHhlEoViK+V4LV6Muny6Gj9DwExgUDIYaKWS
sFFHs15NsZhF3UKHsussLM04Bvo0x2Cl6EpJXo+0/LjN8etF99+fePB+fO1h
5ci50MPLXl0zTntHzCv7TLa1maRX6SeUqIdmKLuGcq1c6abWND0TqooGpqCE
8PgwkwmqalAcfQQhcaK4RFFMrHx0tCAhXiE2VhwbJYoJlff1YHk7s+0t6YHG
9HEH8aQ+e8GYc9lL/13j5i/3276/6fnyvPrr+9ovP1f9+XLr749znoz6z0Rp
z4dqLgborCXZ3CkJerIv92Zp7L0daRvpYSfsNHoMWAe0GE1K1O1caI8YeZRv
8HHI9t+rkV8e7Pr7dvkfZ/M+LSS+HvW522zdmqjbXm54cLdOa4XOfI/0+jHH
F2tBv92J/vIi7fvbvO/vS799qvr+tujrjcTfR1zfVJs/TtW5GaF8xVfhnC3n
tA3rhBF1SAXsVyAf04D3C0kTWtBTH/mP6ap/HXT8tpb+7ULi90uB3y95/3XO
8edFm8tjVsOd5icOSecGbM90ST/tNvp9l9nv1Xb/bo36syn2Q4bJm1jjZ74K
D934V81p540p6+aUdRvaihm2ZEmZNEUOawCtCuR9CqTdIlIJXy6bg6Od7Ech
2jJm/ygZvEoFWDJup/4fowPZYhdhQUzHQGI3FiRrcyAPY0aAHSvchxPoxQoN
5vv5cJ0cGFILmpEepq6KikWwgAezWTCVAlIwIlvEJVZQOqxfPmrWuezRf96/
eyogN1svyp+7t9Opaz6kstcxtlCjokty+KzngWXng2fcB9Zdp2/GrT7Ov/K8
cv1J6ekHhSevJfad8Wyesa07Id01LC05ZLq1yzQXr/jqdVMqdVJ3GkbkqLuG
cqSuDANzqqoGIhIjAj7CpELUHx7C0D8u2f85hI2wLRWOYFNCqXA2lz6VEDud
m7HDX+Kmxt3uoFbpqlniop4ikQ/WZMXrCjOVeel8ZjaLUsajlws5pXx2DgPB
uT2rQyuqQiMoWk2iR3OP1s45aL2lx3jocsH5p+1XXhxaf7x39HxM76LXgWn7
vaOW1YfNSzpMsvbop+zUisxRcY8U2HqyjPEnoBGqoobiH5jPgzkshC6zxuLz
YQ0NqkTCsLZiONkx8WNtTrMypVno0yx0KGoi2EcFO27Gn9Znn9SgzxiLnxSH
/bZU+ufD3X8+2f6vF8UfH2b8P1S9ZViUXdg1/Ot7mO4OhplhGDqG7u7ubqS7
G+kQARUQUEEQQbBAuhUREQUERRAUpETAbgV8vxm87/t9n+PYP64D+AHMutZe
57n3udbOrNvGhP2TNqPrUbLN7iJdQZzRNO3pbPOFEq8XZaEvC+OepYXe8TJs
M2LWK+CrJdClbGQSAdBtznxTqv7hhtWXQbcfE9E/7qd/6PR6f9N+q1H/+XXj
2St6gyeUOnNlhy9pP+u1fvMk4N3zgE8r3r+3w//sJv95l3+4e/z3UtivcbdP
LSY7pZovwsSfurImjSmjWoRueeQ1CUgzC9wkDCmnA/qk4duutG9FsgfD7odz
EYePXA8fO/6esXt3V2+xW62zXvFsmWpqrGRcoMjpJPnNKvUfdfo/ai1+XTz2
rSrgc7rhbpDquq3Amh31uSlxVgt7lwO9LQsfkUf0KyBuycGuyEHPCQPLWcAi
OiCZzEO7F46Pi3YdOM+IVRIOZB4pmf8X7agjLyMklOddLI0CK6LAejiwKQGk
hwXzalsY74viWDCHgRAi83J5yDgwFsXz7uM5Zhy5BMBgPFDhiJCAYnbGVdm8
NuULt03bH/jdmPDrngovPKnr70iJT5XPqNUJKVTwShI+2a7PZe/KQaMLo+aX
Jqz7F0InX2U+WE2/sxzf8STo4phdWY9O/g2es1bSBYWEc3JR5TKRJTKxpcoB
GRyncEEzL35tC7y8GkZYEkYXhJHIUAyG+7pxX9Wj3+d/d2YQYJApFu5KQPng
kMkCpEumhhe97DIdFDQZxFAtdokHJ81BNMaKdUxLwEtZKECU6ktAHkNBs1gC
pzhSmYL0OCwiCg2Nq1XyyBG2jGJZu7AsbYWDT2uGVUvW3PUdW6l49ubGw5Uz
3VMhLbetLg1bV3UY5jeqp1apxJTIBmVKeUSzLD2oWqY4BXW0lDyCxYYJCPAs
vokYCB4FwSIhR/U1j2q44MchIdyvE9Bg7re4zwQkBAoGmvPDbypSOiXxfXKE
fhWBaWet3brAT4/ivi3FfXgV/2Yh4Nmw6dhV9f4LmhWR0lXJCo3Jiv15OvcL
9KYyTeczvRZPxDw/ETkdY99jLXFNg3JJnlAujspjQPMFYfPBUjsl6u/rTD81
uX9o9f/SFfyl1+dDn8tGm9nzcwbT0YrTuVqj53UW22335o59ex3/dTPi927M
wfusw09lf94XH2yn/Xjq97nLardadyVSZuGY6JQd7a4ecUgLd00WcZENrhcB
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
XpNzV/VrrxlVNxmmFcpEc7n9GN3WiWRkjNNSRyvKIaREYBr8EEcCKJgESiAA
0vGAPBI4HQeMxQIiMHyhaEAgBuiKAFrBgMZQgC4MKA/idQn6tSjtisR+PdqY
o/yku/7OpdT39wrXhsKf9DgMXVJsPClRHM9KDWMkRAnGhLLD/FjHI0VPh4i3
+Eh0GtEnPPXWi8LXi0JWspweBai2qRNrJVFVYsgiQVgqDRJCAHlz92sUyBgD
1kYCkxnQe+bU1USp922mP6Y8fj33+8NF+9uUw7dph3tcnKf+2Yw6fBW0v+z1
Y9rh6x2L15dUVs8qLGRKTIcL3fGidtjgWs2wZ7VR2dKQSGGwlwDYkgyWRIHD
BKHvQwW/nFM8eHzs4FXKwWbG/nLk/rOAn3MuH2ftXw4ZvLurc/DYZP+Zw8Gi
5/6g9e+bbvsdUb8ueH0rsXgXJrMXIbEdJLx5jLHuT19ypT21IYzrobqVoD2a
sGYFyFkxYA6FLwbH54cCuHJfWyRADQ6ShQIyhWB9mphbatg2OfRta/qYI2PQ
kNKtQ+xQxA8Z8fcb0W5pktsN6F16/B1q/I0KxAY5wiVF4jkO/iwbVcqE59Hh
mQxILB3iTwG74EEWXGrCADVQvMxEGQygoET62qhh56R124TV2VtqJ5uVTl5W
LWvWSTurFJQv7pYs6JIo5Jcn4VcgGnpKNqBYOrBMIr5WMe+mYd2oa+980ujL
nHsreaPLmfde5o++KLrx8Nj5YUsu2jOa1JPqVGOrlHxzRb2yRF1TxByiRewi
hM19BTUtyfI6WClFFEsUxi8AJZNhOMx/aAf9bbxDIDzfdVMc1JOIjCMiCynw
YQ+nwWN+FRyBUiVGrjItV0co10IqxUAygEkM5UfHUfHZBHi7gcpMqs+LM/lr
VVX3gwMuqimlt2hmXlUqvKVc0W9Qd8e0ZlDjwVr56vvB9ffdj9crWkedz/Wa
ne0wK72id7pJ/1yrUUWtZn4pJzpR2NOXZmdPMjbAamlgtDiIQCFoLg18hg2p
ZkMussCNYvAaAVCZALiQDMgjAlNwgFgMIBwNDEAB3Hh+FEB9KJDLLX3alG4t
/k41Yp++wGyU0ceRgneTedv3khcHfW83qg5e1GgtU63Ml8tNETseJnTck14R
Ld7gL9pixezWoT0NMd/MC9oui15OdLhjL9FtxmhUxp0WQxQLw7MEoQl0eDAV
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
8kqwyotwnZ1TjsvZ9vPhRqvpjmtZnht5nq/L/DdOei6GWa4XBa3kuc94qi5G
G0y7y056ce5as+9ZMIcMaJ2qpEvi6FN0eB4NlkyDpDPh4VSIKx5siwNrwQAZ
kUJ9E1YD044PFj2mlr1Hph3vz3lNLXjMPPd8uRX+fDP21W7Z2tvzzzePL2xl
rexWP9k6M72e/WSz7OGrrJmNooevsu+vpg3Oh9yacm8et7085lQ1aFHWrVfU
rpN3VTvzslpspULwSWmXFCH7KJaJH03XjazjSFQ2xUlpYAQlEVRulUqFYbm6
HcPT7TDY/ypUeddmwGAOEuJAQvgSUfYIsDcGFkjB+xFx4TS8LwETTcEnUfEp
ROwpRbkWS8tGdaVqJr4QDy0go/NpuFx+gle+dHaLSdZlo8QazeBi2chyxaQa
5YgyqaAC0cgT4nFFYvH5orHHRUJi6L5BZBc3oo0FTl8HbauMumtJXnETfW4n
vBXM2UtU/nHJbH/E43ujyftC9XfZqnsp8tsxMiturGUPoQVP9qwhbcpQ4LYS
blAW1yOOusqCNgpC6wQg5WRgOhpQSIQ0KFG73MTHg6Smw6Qf+4otJRhunHJb
jLFYT7DaLvBaS7F7lWj91N/gmb/5/DGTaVulUV3BQXVSrxKpU4HYxsFel8HW
iqBLGJACflAaP5irYXx5/rFACxRIHwlW59knAtlwMAPOO+ElHOV2/Y2oRsN5
1+//oh2PgpGxcDQUGBUotvrY/e2q/+5a2N5a8NZL381l7/VFjxezTk/uWz4e
tZwYMBtuN+y9rNFVp3bxhEx5qkhJlGCpD23ElrRkx//MnrbmxXibKPI+Sfxt
hMiWD+NtrPiWj+iCLmFRl/CQgxoWhnYLQm8IQKvIwBwsXzoemIIDJmL4olH/
k4gFhyOB/n+DPxBALtrPSsJnjwmul6q9HbH8/tL7w6jbRqHOqq/qi2N6W7nu
W6e8lhLNl+NMl2MtnkcYr5d4rWQ4PY9xfp7qthhrv5RovZrttFpg/SRS/XGQ
4oy7xLAu+aocvkkOf0EGWymGPMniWW5GEHnm0g5EHtpjfAS675ncmXGZWfJ+
vOw7ueD15EXY0kbE8lrw6538rbcFe58u73y+sfm+futD/fr7xmevTz1cTXm6
dWJus+TReu6d5zH3XqYMPgu7+dCl5Z5N/W3byj7zkk69ojad/Gu6SReUwk9z
/PIkXJJEbMIFjX2oeq4UTXuighFOQgXNlIDxM+FEKhTzb5YZDPb3ngyUt/4R
M2ASDKyDAnngoZ54pCMa5oxBeBAwnji0Cwbpg0dFEzEpZEISPylXXDhPjJVL
wZxjEmpZ5HOitDwaTtkG45gkGlGuGF2hEFQsFVgkE1bIiSiQCz4u7Rcv4hfH
8o9ne4cynL1p1vZEI2OcjgZaTg4ZqYhctmO8jlR4m67+Plf76wWT3z12v9pt
f7SYfa01+Fii/blYcztAatVZ6HWE1Ha6MncLmNGjjauT7igT+7hlqRSyTQxZ
yxXweEAmFpCEBlwQQXfq0B4mK72q1FlOlNsoNlvNs1nNsNsp9dqr9N3IdNjM
tpn1UhjWFBrWYgxpUEa0qT1K+GvSOK4WbZbGNogjK5jQLDI4iQQKxwOPYYDc
yssBAzRA8cy1lJFgSW59eqTYiXAQ9gjqvFv38KNZzr9o58oYLAwFBvq7sVfn
fPZeBX/cjvjwJub9dtT2q4D1Jc+15x4LM47PHtrN3reZumszPmA63Kbb3ah+
rZKr4aVr00TPxgid8KDcMsWPq2Me6ZGWHamv3OhrrrQFA8K8LnZKBXlXHDbA
hg6xId1MSCsNXE8FnyEBkzCAUBSv/RKCBAQhAaFIPn8EwAsOcIDxGUB5h0p9
6phpL9ZCtORGpda3hy5fJz3eNlrvZFtuxdu/iLffyHF6nmw6F6M3E6w566M8
G6a9nGIxc0x/Ps5mMdN1ucx7rdJr66Lfcr7FUqIOF+1DZvQ2bpVkzN+iSjgv
hT4jgsylQ7jc7k0A2xEhugiAtwGuY9hwfNb50TOv2Rf+C2uhK1uxa28S1l/H
vnlf+v5b04cfbXtfr+9+ufbh58irvfNL20XLe3Xzb8onX2WMPI/sfxbS+ySI
u9qnfC+PWjbdtakesD15yzD/unb+NZ3kOuWgEknfPAnnRGGLUAEDH4quO1nd
lqBkihdXxTAkETQhOJ4MRWOhyH8yiEGw/y1mjpozIEkk1IkIcyHCbTAQWwzc
HY9wwcFtUVB7FDwMh8wSJHMZPoqIiyIgM8mY8zKMc+KUciaxgIZRs8LJ6KA0
HUlOcezAfFm/DEmnSIZjhKB7lLCtL83cnd/YjmRgQdDUx6hroJUUkPIyCDEh
+Bkl7IaX5Mcyw28NFj86HH602/3osP1y3uD3kOv361Zfaow+FentJaq8TVLd
iVTY8JdedhKdM2dOGNDua1NGlPDdoohOMWSjIKSKH1zARTvyf3JIPDeYYReJ
nS7b9z02b5ot3lTbv63y2iq038jUf3pMcdZPZtJJdFifOqBC6tek9mqR2+Ww
TRLoS1KYOgn0GR6rg1PIoDDeOAOIp2HQAGsMQA8FUkH87cbwiJ0Mh/JSd/+9
q/bvzDIP7WQMDAEG+LgIrT3xfbsW+eFNwufdtE+78R924nc3w7fW/F8sus3N
2D1+YDs9YT1z3+bukOlIt35Ps2ZnrcrNSoWmfKnaZOHSUEahG/mKCX5IA/3I
AD9jiJvWwc1oYCcVUKOS0EEh8FUqsIkCauEHXxEAVZIBOQRQHJZXk0ahgIFI
gDeSp9g94Tw3eGMYUA0MSBcAjWji7loLPrRlTLuKbpUafu52+HzL48tI7Jeb
aS8SLOcjdB7HqI2HqN1250w4it33lHjgKzPmKv8wRnM+z3alNmC3P/5Vg/ez
HIu1Mof5eNV7zkJdutQbasTL8thzMuhyGXS+MCKeCQ1lwD0pIDMs0IwFqW9U
uf/EbWbJ/+lK4NJa5Pqb+K295Ne7mR+/NXz52fHpZ/ebjw1vv9z88HNw633z
i53qpbfn57aKby+G9Dz165nz7ZzxbJtyuzJue3HEtG7ErKyLW59qZV7RTL+s
Fl+jGFgs5ZbOtotlmIVQDbwpem5kVRu8oilOQh3DlEJQBGF4EgyN5WWZ/Z1g
gv4Hdci/aAcDyQioERlpxlVfBJgtDu5NRPiSEa54mC0K5oVFJpAwcQRkOA4V
jkenUrAlIvw1svznJEiFFJSWPVZeDy2mhBBXQSoZETStiXoOFD0nkp49Sc+W
rG2GV9HBKKijOXIocVGEsCCcSYPL0aA95rStUIXvTfa/e91+jrj9GHD53uv0
pcnsYNLnV6/j10qzb+Xm38/bfzlp8iZCeStA4YWr+DNH4ccWglPG9EkD/jE1
Yq80slsR3SIOK8EDjqN57tBVLMwVceJkGOdNh/XOdeudC+a7pyw2cvVfJqpO
OggP6lGHjQXuObG7tSmXRBAtsrhWafQVefxFaRRXwJxgQHJooBgSMJQE9sKD
rFE8DWPIa8UAOXAQrxUDA5F4rA76B+r/3rTn6RmutkHDkCCwkQ7l2aTH3mrk
xzdJ395nfvuQ+2Ev/d1OzLudhO3N0NUXnqtLHty1OOf65JHTg1HLuwPGHc1a
XQ1q7dUK10o4TfnSp6JYeT78uS6UCn1slypyQAHVL4sYkUfckUf2isDaGVyc
A2so4GoSqIYMPEUCZOK5rM4XjgKGIoFckLsgAA5woDEUqA0FqB5FzDfIISfM
6A+sBWdsWXOesi9Sdd9ecPh1P/HzROSvpYK3rb7P0vXuJyhPFusMh8sNOQsP
OQjdDZQY8hV/WKS3cNZxbzhmbyjyTVfkxpVjL8uspkJV7jmIdGvRuvWILWq4
WiVCBQeTwYQl0iBhVIgHEWRDBBvhgHmZImNTdtOLvs9fha1uRW/uJm/vpu+8
zXv3serD16b3X1t2Pjfsfm7Z+9q9/fnW5uf2F28bpjcKRxb8ex97Dc4HdUx7
X52wv3rfvumuVf1tqzM9RnnXNJLrVWNrFEJPyxwrlPDOFraP5+XdGB3j1/Eg
KVvj5QwxIsoouhiczIQTqDAU5q+MOSJ22L8TTFAQ9AjzyKPpbAoMrIeDOVFR
tkSEFRbiToT5UZCeBIQviddy90WCj6GhgRhEFAmdSkKfEiLVywqUM3FGXiQN
K5yCPkZEHiEoChNgwPjpcLoQnCWGFBRBMNlwQWEEUxBGo8EpRCgFD0WjIB4i
8OUgyd0C/R9XnX8N+3ztdPpx1+3biPO3bpv9SfcfN+w/Fur/uOD4tcL5a6Xt
hzz93TSd13GKL4Kkn9qz52yFps0Yd5QJHSLwVjq4WQRWTgVnY/iSUHypeGgd
C31NCtevT79jxXjkLPzMS+Kpt+RTf6l7FvRrUuibithhB2a7Huk8G1YrAq8T
hTdykPUKmEImJJsflE4BcjWMDxbkjAFao4GmKJA6gpe+J4zgQp0r9qDYoxHO
v2j/J3f1iNuxKAgX8xLCyDt9du9eRHzYTPn+ofDnp5NfP2S943L7XtybzeCt
jZDN9aDtjejN1aClRa8nM65zj5wejduODZjdbtMduqJ1s1K+uUimJlnobLRI
aSAzw5Gco4epkoW3SMLapaBXxaFXWJBGAdB5KqBeCF1M5vWjckmgBN4REtAf
BfRC8qBuAQPqwQBqUJAyDCQB5r6zoOsyaG5pOWnNmtAXeBmmtXPGY6fC42N7
xOeByHdDPh8m/ZbPGY7lyA9WKfedVu6Ml7jqIdARI9ITLz1fb7lxy/HN8LHd
kfCdnuD1RrcXxZbToSpjduI9BoLtWqSbGvhGOXSpKJKL9ngaJIQE8iKCbQhg
QyTwmBWh57bR5BP3+Zdha9vx2++ytvcydt/l7X4o3X5/dmvv1Nb7M5vvqzc/
1q9/aFzeq5rdKry/kjj2Mr77sWf3rHfHtE/ruO31SVcusZ/tNzrTY1xwQ+94
k050laJfsaRnrojbcSGnZJZFOF3Ph6LpQlSywktqowRlEVQhOIEGxZFgKDQU
gfybrM1ry/DS5GH/qRqe1QziCPAkGEiPhDQlIIwwYBs83A4PdSEh/ChYNyzc
BQnxgAP90dBIIiaKhIknossYuHIm3j5UQN+JpG6Kk1FDScoj6Uw4L8seAUHB
IEgYbx6WdzWdF+PI40Dupo+Dgs6pEVa5ir3KdP9eyMFc7Ncuh6/9zl/HPd4N
2n4bsv122eJXt9v+QMh+X8LvtrAfLd4fThhvhsq/8JRY8ZVa8BSfMhfkcvsQ
B9UhCmthw6qooOyj3TwAzutGXmajr4tgLwsibooj7qgSemQxtxTQPYrYS8Kw
SxLIejl0PQddK4Y4JwavYEFOM8AnmdACOiSNCkkggyJJQA8c72TQCsM7GVRG
cQUemMlVKdyyFA75b5Dqr2j/K2O4JSoeBcGjQDXl6m/XIj68Svy+lfx9N/PX
l9JvHwu+vM/48j5153Xo7nb0zuuIne2E9Vehi/PeLxd9n816zU46PrxrOd5v
cqddv79R60a5wsUs8fNJYmfC2SXHmAlWhBBNVKIcvFQcVicGrhUCVzNAp2nA
fBIgnQBMwPNFYrg4B3ggebFNltyCFM4jcwUoUALKS8bEgLmFGKhdDjOkTb2n
R3tsIfbCR/tDffT75tSPnVlvO0M2rjovXjR5etmwv0ylqVSiqVKqPlfkXAz9
Uhq7u1Burklns99ue8hlp99nu8Nzh/vzNe6zQXITTmJ9Ovxtyvir6rhWFWyJ
KCKJDg0kgfyJEB8iyIUEMsKCTFiQ8xcU7884PX7uv/Y69e37gjdvM1/v5W7s
Hn/9tnjrXeXL3bLlnbzn29mL2/nTa0ljL8IGn/r2P/XrfcLVMK4t43bX7ttf
vmtVN2xW3mdUfEsnu0Ur47J2xFmlwFJp92xh53SWUwrbOJCq40k8QjvPdpLJ
QXKJnSfacUcBxEjIP/nyR3wOPboexkMjEoRE/PMhct8CPBwsj4UZ4aBWBLgx
FmqCAbuSYP78GH8K2hsL80RDgnHIEAIyioRKIKOOk9Eu0YJWPgLaFnhFHZyM
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
o33Zwz2ZfRzp/ewIKb4cr/NkfnQZzA5aLA7YrnU5rte6LD+ynr1n+Y+XVJsB
Y5sh2xtFXLEoOoUTHsWKCGKEOhMgTgSYEfqWBopOHg0Gbp28SDAnGgLghJcF
Hh7HXfZauaxRubJd7VWn2usu9TddGjWdOs9btUtaNJ80qT1qUC1o0EqvVoh/
JhVdJhlZLB7+WDIwT8Qzm981ncchids8ktU4lMkomFn9DoOSA0HcCMuvhta9
wwRcC765wiGFotElcgF5IoH54uGPpCIKpCLzpZKLFGIL5UMeioflStx9KBuZ
JeubJOJ6l8slgtsplMc5mMvJh9PUnlnTmJ6iQ1BUwUpJAgyP4mCFsTJAyTgY
YM1oiUY3TdxQ2mkUGAkGBaYKeUbzO/ixGwEWQIsgJIrkZEewkOFkehg9gHYa
+dD+ih4Fg4JBGeqsZ8UGxz23L34nXK4WnFMfb/4MaHqqk+QhmJMo9ihNOMSZ
7G1J+l1rdNnmeDUQdT1VejX+9Ko99bTaey9bb8VH6pcl35wd7xdd5kFNUq82
qUkeX82PKOaApZHBwWSQG+GWE5KWy2GEBqnC6aRgtKL0m8JFCBEBYUDB8DTM
gzyMmbpKZMfeqP/znjLRpTHZozX1UXO8S22wSa6zTrK1RrzhhejbcpHKQsHi
B3xF93hyE9lTQ5mivRnC3WhguG2KtdJFm1DQOrJIaxPy/KLf4W760d79g520
teWgberdw920w/3s48Oc0+NiQLqfnby8PK85PX12elz05zD/z2HO0f69ve2k
/Z2Hu9S41QXfhV8es1Mu38fsRj4aDbbpdX8waKhTqy5XKCuQzkoWTIriC/Vm
dQPoXYegIYOS4YUJs8DYCTdmGQH5W435N13qBu20jRooGCyOh7SZsHWZ8PUZ
80y4Se++CD98G7dd5ruYrj15jzKQJN2VKfvxsWpTjmxVqkRulHB6JFfaXa6U
KLasOI4nCZyDNcrjDeq/u/XXBs3X3lvvtgWtPXWeClX9x12kx5ix04j5jSK+
VAz9gBeWwIkIYYV5k6COeLAZDqx10+clggRxIyBscAgzCoyHQthIUJ9gjrwK
6fIGlefvFZ81yr94L1/ZolHWSHlUr1TwRiGvTimzWinluVTcU/HoYvHQx6K+
2YLeGfwe9/mckritYzhMwph1/UgUdwbV2wRZK7ykEc4mmtOvQDikSDy6XDa1
WvV+lXrIY5HgApHIIvG7RZJxT6XSypRinshFF0snlSimPlGLKVAIz5EKypQI
y5AMSZXwiRX1uits5cliYE82tGak6NIDkkZcAsXLC+dkh7GSAcBDCWjITdbu
32l9tEPYgFRB31hB5wBOY1uyuiZOUhrJw31jcgkwAvomvPQm444AoB1El05h
v35je/Ez7or65Hqn8nz70eZC1Nov79E+s/Jc0YI0weQw7uIkUeobk4tux8uh
sOvvudeTxVfd6efPXY+KzTciFGcteSdN2Uc0Sf3qDD3qDO8ksMUs0HsMIFos
Bj2dH/aWPS18hs4IRYvll6LFcoKYERASAkJGQQlwCBsBnBXCP/ZWZbxZ82e3
3uRH3R/A6tf5OaT1vV99vEd5uEOxv0Wup1H2w2upppfitcVClY8EnmZy5iWx
ZUQxpoaQwtyIPg54NyustQHGkIK0NqX/OeO1ux2/v51ysJu+sRa5shi4RY3Z
pMbu76UCaD87Kbs4q7y8qL+4bLi4eAs8OT5+enxUeLSXtb+Xt7URu7bku/jb
Y3ba5ftXu7Ehs4+tOj1tRh+adF69UHj6SOrhfZGUGN4IfzZvJ7KdEb2+KkZJ
FC7BBecgQshYMOFvhOBftN9sf93sQ9K+HRYkqEaPsc+co1uffcxOkJp3e6fC
d7van1rnOfNI659Mhal6l/5Hyi05EnXZsmXp4gVp/A9T+fJSOZ9nCjQ/Ev36
Tul3l8FCu+l6n+VWh8t61Z3VJ84//FU/O4r16ZOaVHCv5DBPhVEZPPBYNlgQ
GepOANnh6UwxYB0UHaAhxRAgHloIMG2+PBFF2y9lxEFMrRjisoXzK6QKq6Ue
10kXvZbNr1bIrZLLrJBMLRNNLpFKLJaOyhcOfSgYmCXgkcbtFMdhG81uFsZi
HMRkEsKk7UlWdiTImOMk9NA2d7lCy8TCn4onVCkk1yilv1KPe6YYVyqV9VIl
vkQqtUI25blsyjO5lGfyiaXSSeWKCU+VEkqU4otlIwtkAcxHZsv4Jou7xQnd
juC29ecwdmLWMGJQ0cbLK6ElpZBCQnBuLig7M5SGYRTtSAUF/S+sIzRDxDtG
0MGPw8yRUVOfXkoGxccLY2eCkwhQPBpQMrRddwDzf9Eeo8L6b6fbxXT89Xre
xWbu6VrK/rzf9LDxQKNKa7XSy3KpJxmiYy8199+anPW6XP2IuRpNvx55cNmd
cFrhshurshEitegl8t2cbdyM9bMRa4ccoV4EXcQByWKFpJFBsfS3ArAgNyyd
FZpOD5DuSDppBMAwIBYEmBFF+8w5CZCnyWLf2rTGWtRmB3WXvhrPfjX7/cV4
4bvxwjf9mVGtHyOaE0OUz10qg+2KH5tlPzbLddVLNr0UrS0WLM/hfvKAPSuO
KSmUFOFN9HUhOFvhLAwwNuaEL99dd3ZiqJtxuztp29S4hVmP5WX/1bUw6mb0
8VHuyfGTi/MKmpi5bL64bL+6aj07qzg5Lj3Yu7e7Hbu9eXd50W9xzuPHd/uh
IdN/hs1bP+i0NlMa69WqKxQeF0gVPJRKjuMLDWD3dGF0sCDqq2NkRZGiXHAu
MpSEBe6Y0L+BmX9rM/5DO+2QF4IA02XK4ruM2ToMOT6Z886nm2y9Ctis9dlu
9vpdQBlNk/nnuVFboVTrI8Xmp8oNReKvSuXKcoUrcgXaXyiO1smPvpRd7DXd
HLLZ6HVYrbOh1vivPvOeCJQfdhTqpNC/kkA94Yc9FsBkcEBD6cEBDFBPwKVi
QRZYsBHgUpEgSQSIH0A7wDPAbR0BGGoa7wE3HUlZtG80V2qRUGaZ6IMysYxn
EhmlEslPROKLRMMfCoQ/FA28L+CVxOWRxOsQyWoVwmIcwKTvQ9Z2J6k60Cta
E2SMcSKaaItwtvDnElHlUim1ypnvNBKr5LPfaKRUKaZUyD2sVU+vkM+sVMqs
UEt7IZv7Wi2nVj2zWuV+pfqDKrX050ppJaqxhQoBmeKB9yU8U0Q9k8ScwvhM
3Vj07Mha5vTq+jhVdZyMHFpUDMHPB+digQEShYChHabfJNVDgh+I+MTyOfgw
G9uQAbRLy2K4ueAsZNjfqN6b+gEQoNkBtQwGgYKVmP/tdL/8EXX5I/JyMfFy
5e7xb8fVYf3JBpWRdkpTvWpvtfpGvcnBO9OzNvurydiryQdX41nnDb5nr52P
8nWoEXLLAZK/XQXGzdmGdZk6FembpHFl/LBHfIgMZnACiS4IT+eJB9tjAG6n
07j5zPkQYA4khAUNIcNv5UXxz/Vr/+w3XPhiuvzNbHXKYmXaenXadG3afGXK
bG5C++eYxvQ/2t8+qX8bpIz3q33uVBr8IN/TJNtaK/62XOBlIdejB6zp0YzR
wcRQP3rP2/jbNnhDXUT9e/39g7vrG5Hr1OiNjdjZWa+fky5zs16LyyE72+kH
+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
0y1+Y5T2XDm3QiOhQMnrnkRopkz4A2lAwFv7c1jcYTGwJelbkCj69HJqGFk5
rKAgkpONplXItHHb0MBUCfcQXlNHspYBQVYeLcCDYGcEvghAqN9Mk/nfeytt
lAwCgoeC3juKHD7UOe5wv/4VcTUZdDXl/++s/+Vvr9MJl+Nxl7NZr6s5/6sZ
v+v5sOvpsKuxsOuRoIsPzqd1lvt5WisBUguewsuhEr+8BUbduQZtOVpUCDW0
Il5kNjs0ngwOJ4Hcb0hGH01HwYCk0WA+NJgXA2opl92aMgbkCnXGan/BdncR
APntnRXn3bXbeytu28uO20v2W7MWu4vm2/MWm7MW1F/m69Omiz+Mfo9qf+1T
GexU/PhBrvWNeF2FSOkT/sI8zoeZbPdSmCLDGIL9GXx9SEP/2KyuhywsBc0v
+v+Ydu7/ZPy2Sf1BtmhPn83OXvz+QdbJ6bOzi7cXl00XF63nF83ntNPVwoO9
xI21oMUln4UFj5lph6lJp69jFsNDJr09uu8aVV5UyJY/l0m+zx8ZyxVxl8vL
m8nelqiujFGQREgIILhpG2UwBhxtaxeLgP5XX31TaIpH0rgU8CkYGChICjPq
z9dnxDZkyvUjmrLy2Gqt1nO7P36+xXZ9JJj6OWB9xGd51G1u3PVbr9G3doPR
Gp0fb41WOm0WXxv9fKy10eS8+sJ5Ns12McdtJkq331K4Q5P5tSS6nBtewgbL
ZYYl05QMOIoM98WD7dC0kw41OFgGBpKHAbqd1hfAAKNVOAD/yU3TOk1uof8q
LgStpg4geVq1OQyEA0iJGcrJh+AXQQGLTxjJI4Tg4EeSWOAEBhieHgaHgJUN
6ZPfSt17K5PRIJdap3ivVjWnXuNendzj95TKLpOmIbfGTwEfRiO6R6Mbe1yq
W01fNhu+ard91WZa2WZc1gTgX/t5k9HTWp0nb/RzqnWSSwDHKh2YJR2YKRGU
IR6UKuEZJWrlywHoGV1rkrohQUkLJ6eEERVFCvAiOVjgLAy0iWB+icLuIYLG
towauvRyshghPiSAdjLNosIAJXNDNf+hHYeAAtLdS5zh7LnRn0bH6yHPq5+B
17Oh/67evV4Ju5wPuPzte70adrEcdr0U9u9y3PVq8vVczNVY4GWn40W743Gz
1W6hxmqU9ByA9gDhMQeOITuOdl1yvTy2QgKZxggJJdAFksE+DGBbDMgQA1JD
0c6v2UC3QmxY9qdNt35b7S/aHa06Ha06/9lwP9jw3Kf6HWwGHVFD9tYD99Z8
DtfvHKzf3lu221my3Zq3ov4yW5s2W5zQ+9avPtyj1N+u/L5W8l2N6Jsa4fJS
vqePuPNuAB8fw+jnRah/p7lO9V9eCVlbj5xd8J+YdG3pMCh6rlhWqb66FkLd
Tt4/Kjo+qz4/rzs/b7q6ajs5qTjczzzYS9qmhq4s+SwueMzPuk/9sPs6at7f
q9fbodPeqlVbq/z8pXxqBl9imkBULKeXD5OtHVFXG6MEeCgBBA8bjA0wR7RC
HUAlgvm5kGICaDF+pKIYWlUarSiOVhJGywogdQSR7y2YP8jTt6sxj7qILOVa
rFb6U9ujt4Zj96fTtseCqSN+a6OeyxMu858dp7stfzTofavQXW62Wnlj9CVS
eq3Caa3OZzbL6auv9pC57Htl1hoxXK0E9oUsfT4vMoUBFkMPDifQ+aJpxxyW
KJAFEqQLp1OhneuBOW+yd4g3CSQADIBvH/0XDDeYp9WUImhjBTA3MuzvVL7/
baYD/c0K+NuOgaD9FkKgh4QWiOS1qGTXA9JFMb1OJb9B40WH6dNW/bqB261f
wrq+xfaMh3z8GvZ1rnhoLL6h16m9z/tDb0Btl3P9R9cPg0F1bbZN7S4lNQb3
n8tnV6nde64e80QxqkAu5bHK3VyFu9nywckStgFcpndYjJwYdS3I6noEWWWM
iARSVATNy4VgIUFJOOidKB5HX05DS7KmFkFeGi3IA6ehHQcloGiSkiYjb7YI
0DTrRHvOj4WOhSnsZ2mcNdhdz0Vfr8RdrwGPkf9SabOkrzfjaWsdgHrS9XrK
v8sxV1MBF70OF202p+8t/rw22ivXXE2Xmw4Q/MeJo9+KpU2b4Y0irkQAnsUJ
i2Cg8yOAXLFgq5syGFUUWAwNEcSB+l6p/Fl0OFiy/7PudL7pfrrl8WfT62gr
+M9O9MnBg+ODe6cA9+5lnO6nnOyEH2/67686b89bbc2ZU38a/h41+D6o8W1Q
ta9NsblWpuW1WGOt6KvnQuVFPE8LuR9mAIBnDgkklJTKbG4Gra+Gbm7Gb24m
LayETUx6tfeaVzfqTM54ra9Hbe3e/3Nccn5adgEA/uL16cmz44PM/Z0Y6lrg
6qL/2rLfwqzbzymHryMm/e0afe1ajY1qNbXypc8kcwpEku8LhEZxeAew2NgT
9fVwKopoCSEA7XASDizEg1JXwdlYkt0dmdzsyXccyK42DM6WDLZ69GbqeH0F
jIoYIlsV36NB7qCQP1vxToeo/E41XXsVuj+cvTeRvjsavdEfRJ0IXf92Z3XY
eWHAbvWT+3LH7fUW16Uay4lYpbn7Jgv5djMPrCfCNAfMRGrFiGWciBeC6DIR
bDYXIpEZFssIDcDR3cbQATjXR4B0kCANOEgODhaCgzlgNNFOf1PbAFhpHBJ2
Q3q0pCkU/P8KqIAfaU0QCDASSQM/bdDAzdBVJIIWkYEAfB8aArkFUjcl5TUr
PWmmFDdr5jVRHjfrZjcoVfVaN454tY6HD/3MGJxMHppK//r78dRizfe5FyNT
2Z9GExraXN712HR9uds3ntQ+HNo5HF7y3iy5TDS9XDqhWDa+WCbxiey9YrWE
R4pRuXIBqaKe0YLOQfy23hwmjiw65oxKFJy4FAqgd34eBCszjIke6hnFZ+fO
oWdEr6yClRBG8nEAnANlxMPoAbTTqlL/d6PgBvAEBBS4frPlGA8TlU6a7P6d
ibqmJl9vAPCOud6K/3cr8Xo76Xo7+Xor+V9q0jWw1iIBDX/5j8vFJ4ezXuvj
JqOdF+pruYo/Q/mGndi6jRnb9UmN6oQyCWQ2HzSOGRTMCL5DD7bAgrTRYCUM
hAt0y57CsDJmuv3b7s+a8wnV5WLL62I3+HQn+Gg79Hj/3sVJ6fnJo8uzmrPD
h+d/sq9Onp7vJx9vBewDDL9gsTFt/Hvc4MdnzbE+5YEuhcEOYMm3vxNrqBF5
BTjWIq78bBraI8OI6ff45ha8qNS7G5spq+sJG1uZqxsZPxfCB0bdv4y5rKyE
bG2l3WxFvry4eHN88uz0+Mmfw4z9ndjNtaDVBT/gcX7W5ft3h38+mwx2avf1
6rZ1aLx5p/isUuZetmBMCnfoXQ4PX7KtA1FHB6cghxQVgIvwI63NGePj+OPj
uRNiuOMi2IEVHcwW5sUS6E72tic7mxDtdAgmqhg/ZVyvOdOgGfugIduYg9jX
QOW1UveN+uDtwfjtgeidL+nbUwmb4z7rw+6LPfarQ4E7Y9HUNt+Zx4ZTGToz
sfozcSbfgjU+ucn2WfA1yjPVidCX8WMLuJBprPAUNkQqCzwAd8sBA7KgJWbT
qcPBgEWVgIF4YGBWGIQEozWtA9yOR8D/Mt5fhGP+c9P/AZ4G7L/y5m/7zw3V
I2j8T7sKEAD/YyG+9/hz6xWK3lPKOwzzmzXyP2jkN6u+GXbpm8no/pH2Y75s
cqX223LV98WX3+bLf6+9/r3+bngsqan7Ttugy8BEUv9EYv+PzK6JtKfNZk/r
dZ6+1owvFo1/IpFRrpheqhBbIB2VIxWZJRWUKOkRLuQQyGfmxqltSlJSw0rJ
YkREEPy8tNpgFiLMOYDDzJaZAogcWbSYII1z2BhoYVmEGw+L/LtFcINzIhxK
RkCBi10ZD51wEjipM7+aCrveTLnajLumxv+7k/bvTsr1bvL1bur13r1/N1Ov
FkOuZnyuf7hf9Fsdvdfbf6ezW6Wx+UJ59p74mD9nnwNztxXzByOGBgr+hSQq
kx+awA0JZAS5EMFmWFp9oywOykn3P0UJIru/TfcWnE423E63fC53Ay92w093
Q/9sRxzvZ54dl10cl54eZl+c1lyevrw8KT8/yDrdS9xfddldtF6bNp6b0Jv+
ov39E2V8QP2fXhUA7X2tMs2vxN5WCFWU8JQUcuQ8YI2PJYdHMI5+tVlaC15c
v7u2dW9rt3iVmru4kVRbpNVUp0fditrajP9zkHF6/OjitPz0pOj4MP9o//7+
dvzuZvTWWsD6kvf8rOvUD/vvX61Hh40G+nU/tKu/aVQur5LLLBSOu88TGsN2
x5/RwYWko4eRlUaYmzAkpwg8eSJWmC+W/1C08KFYQbZg9j3+jCSelAiu1Eje
aF/WQGdGPzuyuzHBWg1VpE8ctGfvNWL94S095MA7/8Bwschx5ZXXXInd0WTh
7s8M6ljo+oD3QqvD6kffvW9JO/3RS9U+s4/tfyUZf7KX77UQaDXgbKYwvZMj
PuNF5bMg0snQBEZoHCMMgPodLAjQMMYIkNZNJZ4EAiQMA4idBvW/VZoEBOAs
YOi/54z/nYIBLoNmVJF/C8JpUIf+h3w4TbfcLBrgUUgwBAQSlsKlv5TKr1eh
jWF6Tylo03zSoVnVb/V57uHo4vPBmczvy9UzG00TC+UrG02L1O7R36Xjiy/H
fj3p/praMRr/eTp3ePLh2Gxpz/d7r/vuvGm1za+ipJZLJD8RfVihVFxvmVYi
HZwhFHpfPDhV2jNGzDlU2Mqd18SCVUUTJ6eIlRBHCfHBudlgrCSY7R1mI8DD
UnBy0ihAN/LQLgGangeMEgMCwo4ACyMh/HCIABwkjAALImg9Qexwuvv82L1o
+dPPHtc76de0MS5x/+7ev9xNuzq4f72fcb2b9e8mINqDL0edzwetz4cs915p
UosVd+o0V4pk53Mlv6eIjARwD/pxfLBgaDQkViihc6WR8TzQIFaIPT1YFw1W
RoNEUCABAvjTe7WdRav9ZefzncCz3aCT7ZCz3bvH22F7G0H7W1F72wnHB3mn
R49P9u9fHJdcn9dfHDw83kk83PDZWXaizlsvfjeeHNGY/ocy9Ul9YkBlrFd5
qFOhvV4SoPfa5wIlj7jystlTE5mDgojvmjTmV/1nV8LWttKou0+oRyVDDfYZ
0QJdA7br66EbG8kH+1nHh5knR3knh3lH++l7ANS3YnY3I9aWvRfm/tPt375a
jAwbdvdqNbWqvG5ULK2Syi0WTc7mD43j8Allsb1NNDXHR0TyPK+QrXopU/FM
6uVzqeoX0pXP5V6USJY/EivOEyvMFilIF8xM4EsK4ojyZAl0ILoZ4ny1sM3W
rB8MmbqMmD7qs/9jI/I9QvdLFOXnPdPD0bSNj0HLre6rnV7rff6rXV4HE1k7
vTFzJS5LBW5fQtQ7DXlb1FjfqTPXabBUShFfiGELeVA0c4qjC8aCXNF0tigQ
LabpBuoyMDphWiUemAz7b5sd0DB4JJLWEwoFoE6r32BEQ1nQEG4clBcHFaCH
CjJAhUgwETJMmJFWEcFJgrISaZW3BAzN96FRUDDdLXM3jsK3SqUturnv1R+3
aTxqpZR3G3T/iPi5UTOxUtHzLfLrUtnURvP31brxueLvS2/rBzwA09o3ldUy
EtE5Fjfws3Dk1+NvC5WfZh6+6buTU6WYU6n0pFY765lceq5oQYVpXq3+3Yf8
XnFcQalifolSt0OE7XwETB051XTwiipYaWm0sACch51mlKycmU0tGLUp9Eoy
aAk+BBcTjI0eyo+DyuAgqjiIGgasggIrIMGKtMQtsBSStiRRYDUctEOH/eyV
6fVGwtVO8jUA8oPs68Oc66Pc6/2s6+17F8sRgFe9/u521ml60Kiz36S1X6e+
81J1/Yni7H3x8RCuYYDePTm6aRNeGF/o4jOlkRGcUBcyxAwPUkODpbAQFggd
RQK/Omm2MWd1sO56uh14sRd5vp9wthdzsh20s+65teqxvuSxtR68vx13sB1N
6zY6Lj//U368Fb+/4rm15ExdtFudMZkb15kb15r7ojkzrP61V/Fzh2xvs1Rr
nejbl4LPnvDk53CkJ7ME+OOz80Vm5t1/LgCAD13dfjA/nVSbqV5WZzg44rS5
EblJjd/fSzs6yNjbTd7fTT7aSznaS97fidvfCl1fDZz/7TY36zz3y+XLmGnv
R92ePr0PHWqvm5TLamTySsWTsvmDY9nuBDLddifmPhJpbFZtblZp+6Da2qza
8l6luVHpfb1iwyv5+mr5mnLpyqcSNSUyZbkij9ME7kdypYXyxLgy+5rRZxoS
28zZ36szflAhtysyD1gI99jw/4jWWK91WXrl+qvcbO61A3UwbKXJa6M9au2d
19cYjc+B6p+cRXrNOdv0WVsMmF/rMheL4vMF0dk8yHR2WBwJHIin88LR0aZ+
0NAOBtAuCQfzwUEscAgJDsXfKFgsAsGAgAnjIYpkmDYLzIwDbiOAsBaEW/DD
rfgR5jxwCwG4GT/cTBBuLALXk0JoSiMVxBAi3HAeJjitjQ5HmwjpFcP3ot24
tFWvvF2n9avnm8+uTaN3viw/XtnvnV6v+7FWM/irsP/ng3/mSmo+etQPh9T0
+Za1Wz9rt63quf3ha0L7l4TPv4v7JrN6vyWWt9oUvFUtrtctfq35pFq14Ili
eoFiUrFidK6gdxxnWIpEcJK8c6iIY6CAmSunlj5BVR2jpICREkHycsI5GOFG
liR9fQYNVbyMKFKMCyHLCNMmw4yJUGMixBRPi/o3x0H00BBNJISCgqiiIMpI
iCIaAjCALxduM0Lh+kfo9U4mQOZXewDOH17vPLjeTLteuHs1H3T1y+dqyuWk
WX+vRHG/SmWrVJFaprTySG46Rmg8gncwnKfZkanehvzSmPBIA3tPBhnADrVi
AGviwBIoCBcGirp1y8mUZXfBcv239d6ay58tn/O92IujewCx7294URftl3+b
/54ym/5pubRwe2PJfXvF+3Ar5s928uFm9AE1fH/Df3fJkfrbannSeOm7/vKE
3txn9clBytduxb4mmbbX4m+eC1aU8hXmcaYkMfv6EoPDWD99MZ+e8/i9GLRI
jW0rNqqrsnrTaT3905um26lx+7vph/sP/hzc29tN3N2OPtxJ3N2KvMkiCF5b
8lqa95j75fb9u+3IZ7OeXu3WLs26JuVnr2TzSsSSsnl8o1g9g5jLK2RaO9U7
Oih9H7X6P2p/7NHs6dbubFHradfobFVrb1LpaFBveaNUXyn3qlTqRaHE0wdC
OTECaQHsEY6kYANchSH5vTqpThTfIE7fTmHp0mQbcRX9Hkv5kaT7I89wodFr
7u3tXy9dZ545fXug/yVGv9dVqtOY/aMxxwcd1lpF4isVhkfiuGxaOBhtpmQo
A10Qgc4dS1Psegg6dQRYhjYMDsIFp2kY1M1MeVE81IAF7sYFjZTCxChi7spj
IuQx4bKYEGlUsDgqTBYTLIcOkEV7SqPcxBDO8ihHLZyVJtZAFaUui5IShPNz
0HQCPx8yKkekrEW39INuzUfTuiGH1q8BU+vPvyw/nVqrWtlpndls7p/OahgJ
bhmNyHtnnP5KM/+dXvYbjQe1aqkvFTJqNWu67au7nOv7nduGvEtbrJ+3mJQ0
GOa9VsutVMgok40pEIrMEoh7KO2bwBuUIOIbK+kaIeoWJmrlyqVnTFTXxKko
YGTEUfxccA4mmKkFg6Y6VkEWpSiIMOWAu7HDvdnhfrSiOIgzAexKhLgRIHY4
sAUGbI0DG2FoMkMbA7hIqCISlCqIPSvRv/odeb2Wer1173oj9Xox4Xoh8vKL
50WPzeWE0/mE8+E7rd2XyptlKss5EvMPRGbihUb92Id82DqcGN9ZMFTpEQrU
MKmSyCA+mC0JrI4HC6HBbCgIGdCI/48u1Id3d8l69bf9/rrbnx3fs73os/2k
A6r/xrzd4oz51ITeyIj2p2GN7xNGP78bzf40oS46by5771GD/uykHmzG7W/4
7izd3pix2vihv/JVY3Fce/KTxtePygOtsh31Eg1Vwi9LBR8XcKensESEkd3c
8JW1Kr8XPGZXAr4M36nI0GzsdW7utthYi1pdCaWuR+3vph7u3wdYfW8H0DDR
e9uxgI7a2ghbW/FdW/FfmveZnXEe/2YzOmYxNGTY1q35+r1i2StAyQgnZPGG
J3G+eCX3sV93oF9/5LPRyIjh8CeDz8OGwwN6fd1agwN6Az26ve2aHzu1uls1
2ppUm1+rvH4hX1UkUZDMmxXJlerDEmRBf1cb32BAbpAnAoB/r8jQrUYetuDv
tRH67CM9/cTmc47BWLrOSILKP4l6Xd5KHbfFGrTYmnXZmjUY36swvJTCFwrR
ZtAkcSPvskABqPvhb3nhQNYokAkSpI8EKcL/joOHECEQZhhYmwT1YoelSiKy
lbE5SugcNWwGBXNPFZeuiE2XwSSJI9MkUAliiEQFdKQkKlgM6SOFDNLC+Rjj
XU3wDvo4Uw2MhhxA8khBDpi6KvZeiWRJk2Z5p+GbIcv3Y86Tq+UrBz0LO62/
qG/ntlsGZnLqR4JzGg3uv1JPq1ZMrVZOrFDJfa2RXad1/xUlr14n65VqXr3e
o/cGZR8s3g0Fto9F1nfbFjfpF7zTzHwun1goHp0lFJUu7hnD5RnL7RMv7HlX
4naQsLULt4EhUUMDp6SIlhZHCvMhuZhhpqYMGmpYfQm0hyg6WgSTLIh6IIhK
50LeJYOSWaDRTKAgMsSXAeJJD3HBQx1wYGsMyBILNsWA9bEA24Mq1EgXFUaX
X3yvfoZezUdfTwdffna5HLT/U6WzW6h40mZyWK+5dk9q9q7A0gPxn5E8X305
+m+TO+xJjcb0NQb4Yk3cPSlEIBfUnAhRQIO5EGDAC2PgtABSuv/vVnyk0N6K
zfq8w8GGx/GW98VB2tFW+M6K88ovs+kJ3ZFhza5OldZ2+e4epb5etU+DlKkJ
g/lpKwDwR9upp/sZJ7vxeyt3duYddmYMNid1F7/oTA1SRnsUB1tl+1pkmmtF
K0v4ivI57qewRoQy3nbAhYZxf5m0n15wr3qo+rrSqKHbanjMZWM9dnsjboca
t7eddLCbfLCbtLudtEWN2KFGbW9EU1cD1lf8V2iFYXdmphwnxm1H/jHtGzRo
69R406RUXiv98KlwcjZfzVuFkc96nz/rf/lq+v27zddx89ER4y+jpmP/mIwO
m3we1hsbMR0ZMujr0unvBvCv19um8+Edpa5cvqJA4sk9ocwIjlhXsp8J4b42
vlmH3KjN3KhK6lVjalVgaNZk6bfjGw6R6w9T6PeT7/eT6faUeG8p8MaA87UG
S5UsfY0MvkoS91QUk8OHSuZBxHAjQhnB/vR0njiQMxZijgaZokGaSLAMAsKL
ANQjWJ8Rmi6Nek7BV+riKkwJZTrY58b0FaakYi3sE3XsUyV0mRouXx5ToIDN
V8NnauGT5NCJcqhoedRdCjZED+9jgHMzxjvoYCwoaF0VjJwowsaGobBK/nmb
/rMuvXfDVl3fPX9tvqT+GV7YbZ9cq+79mV475A5A/cFbSlq1WtJLjdx6vcxa
3YTnKumVarFlSsmVlJSXSukV8mlV8o+bdJtHI/6Zfdr/PfNVr0dRo2ZZrXbe
U/WobKHYDPGgBEHPGB7fOEH3CCEbH24zBxZDQwZtbYISIN0lUCL8CE4WmI4O
3lYJF61AnyGNzxFEPRFBV8th61TpGw1IrxRxOXyQZFZIHBMknAz2BzAPUD0R
6oKH2GNAxmiQHhZsgAW9M2K7fK5z0QK4UeeLHuuzDvOj17qHLyjUVMm1RLGN
Qpm1Qpnfd3m/urF+cmD86EL+YE1ssCZWGeDyFJB3uWhTR/XpwfJ4sAQDVJgB
ygsYH0a4IDOcAL2VFCW4vWK9Pnd7d931aAvg9rjDTf/NRbvZHwbDg6rNLXKV
1ZIl5aIlL8Rf1knVNcl3dWmNftbamHc6BNzrfs7JbubheijgcHd+m1K/ac2P
qP0cUp3oU/3cJtfdIPG+UqSmlL8wF+B2zmB/Bid7nI4GqqJOfXDIItlPqO+T
c1On5a+5kPXVqN3NpN2tuL2txL3t5L2t5G1q9BY1cpsaDhD78oLv8oLf0rzv
/Kzr5KT1l6/mA0NG7b0671qUat8pFFdL3nssUPNWbnTMYHzC7NsPq8lJ25kZ
x58/bWd+2k59t/n+3XoaeGXS+scEoMqcvo6af/5kMjJo2t+j3/FBu75aqaZU
ujxXNDeWO9mXJcyeFKBPKFTHN6ozfNBhblcl1Yth38gTO/RZm4zYP1jzfvSS
bLflf2/F+VaLrUyWqViKoUScoUQUV8iPyuRGZHDDYmgtqOAAhlue9LQJkva4
G6ijQHJIMD8cpIKFJEmi3hnjW2yI7W6MHW6MbXakFlv6Dk/WFlfWRkvSG32G
egNSkym5Tp+hQpPwTI++SI+QBfCVKj5ZGRsliwyRRfvII7wpWDdNjJ0m2kKT
xvCeHizldUovu/RrBkxfDxl1fneb3Che2ns/Q3316Xfy+y9+Ba2m99+qP3ir
lfhSJaZMMbpEPq1Swy9XPKBALKhAPPSxZFy5dMIz6eRy2bQK2eIWve6vMX0/
0j+MxVR0WBfWUhKfSoVkct/NFAtOFfSM5/GJ5XMPF3Tw57X35jSwJOkZMahp
4ORkMML8SE4WuJMWPp3C+ECSkCeMKRJCvVLGjUQKr1RprFRTxmMF3+gQCoTg
mbyIVC54JBkSQIb6M8J8iJDbgLZB0yS9AR5iiAMVqZLXUmSPS9R2n6jtllD2
qzR3nihvFiisPhD7HSUwHSXwPYx3yJWpxQD3Rh9Ta4J/ponJkoKnyCIj5JAh
GthIU/q71vRRNgxBpvQe2lhnTZwDBacjBk+P5ltfsFmdd9pZ+/+beuuguLb1
W/SPd9/vnR1o98atcXdomoZu3Boad3cLLsFCCBAkIWiQ4BA8QHAN7u7uroEk
e5977zuve+97X92qr1ZRXbCKrjXWmGPMOb8xnZ5u/J9vacTucrJjubmkNz6i
0vhV7uMnweg3XP5+nK5u7CGv+Iu/yI+MqK3Oax/vWNyeBfy8Tfh1Hfvj1JWG
9vMV7YM50sYYcX5QeaJTsbdOprlcvDJfIDmeIyqU1c8TY2WKVsWDzS3Y8pII
b0MkppedW7pMjk9enR1H3t8k319H311FP1xH0Sj94Sb29jLo6jzw5iL09Mh7
f9eNVtsbjouLFhOTlM5e9eZ2VVqVfJFN+SRWVCkzM6e/uma2uWW7vW1/cOBx
RBP5h+77e457O077e657Ow57247bW3Y7646bG7Yry1Zz06ZTY0bf+7S6WtVa
vihVZEtkx/Mn+nFFObMGmWK8tREfCIgWMl3DfyMyNSii20gsX/BM1URMtzl/
hxZLozpLBZ4pVwKbzA3NFUPmiCMzBGApPOC3OFCCECgA+8IX/Ycj8oUV4g8T
xB96iBcqEAYFCMNLflCrIXrcm20yiGsqkm82HDfpwTHuwTEThJvx5xt1w3UY
MA9YcvZRWHqpLN/0WRp1MTXa6CI1RK4mKlMd9U4b/VoFHq4A8RcDekuCXRUg
dnioLRmmR3u+/rjiekJln3bNKOXrpEn/qtv2ddXR3df9u9aZw+xvcx5FvZSk
elLaV7WEalJQnhwN567Jkk6JYh6pot6pku7vxIJyJYPzJCIKxKMKxN59wRe0
azWPO7dM+hR1UTOatGMLJCMyJUPfi/m+5feLF/COEfZ4JWEfIGDlidMxY9Iy
wJA1UYoKUDEhMB8X6I0GW5o0JkMIniEErdfCrCdKPoxQn+Ys7wf0L+qUxz1w
9SR0iRL6gxAklhMYgAWEsQEDmQDuKAZnFKMVgsGMBngEozrkDw8ucJc5916w
8LYX/4a3wN5r6b1oiY1IkaVI0TFbtn4Tpg4zbK0uslwVnqUAScVDC2xZKkK5
ql7zlsbi8iM4s8I4k33Z4zzZotzZQhxZfa2YHfRQSVH8B9vmJ3QT6vDjJvDx
Oujy0G5jSWd+WrOzU7G8XCwjU8DPn8lIG60kApXjh1J0mXMKRdu78MsLxjen
QX8+pv51n/p87n27Z3a5YXg4p7E5pjbTpzzarthRLVVXLPI5kz85liPEh8nd
Dm2ihyDIgrVpY5y7UnEeaXrZsWfQ4vQ8+uI08vY64YauW8Ifbl7fXIVfnr68
Og28Pg04O6JvfdzfcdnetF9btpqfMRsa1u8d0OnqUmtoIeaWSueWyoxNGays
Wmxs2G1vOx4depyfBV6cB52eBlyfh16chZ0dB1+chZyd+h8fep0cetBgv7Zi
tzRvPj9rOjas/71Xu7OJVF8iV5Iulhkl8NaPK9qJ1Z+K9iQjMpWwrepMzeos
lTLoZgJzDZG1VBpdKo+sV0DW4ZnKFZgLxJDpOFgsO+QdDvoWR3t2oHBmhnCm
F96oFzRnagtnMIMxUJD0qTYdNKBYDb3wkm/9vcRakvBmuth2htRGtMhKiOBq
mOC8n8C0E8+IJecglWWEwjpMYRs0ZBswYW/RwVbIwsqJiFI1ZJYSNFURRhsX
XkmCQyRBAfJgH0WomyLUiQAzlYNEhQgUNRLLe7RqR/Xb5qyGNwOWzwq2rxrm
jrN7VvwbJ2wbx2w+tmjHVxDjK1X8Psg4JQg7xokYBXAbBXJahAvax4m4p4gE
ZEl4veeLLZJ6Xa6Q2kj83KVfP+JW2G2V3aSTWKKYXqGbXaYRliT2Ml7IP07M
I0LcLVjcwh1nYMmsbYwlqiOVCAgZSYgwD/iNGDpTHF0ghqpVxky58V7Wazwv
mT1NGz8M611WKs1487fpMlcTsfmSiGQ+WBw39DUPJIwV+BIL8GMCuGEYbZGM
5khGAxRAGcZIhjP4CMMLVbHf1DAjBsxT1pxjVmx9VKZOCvarHraEjEiVAacS
YJWu7O3JIj15Eu25Yi2ZotVJgsWJQvlvBN6H87wLxb0NxUX7c4a6s3lZM8eE
4jbXLI/27M8OHG/PPG5OXE73LFcW9YaGSS1t+NJKiQ/Zgn6+TFQ9lJEKVlUM
yU4zFKZMBRUiE+MatxfR/34u+/M+5enC9+7A+nbP5nhRc31UbaFfdaJDsbNG
uqZQOCeZ500kR6Ani70pSp8MlxMFaSlgbcmcMVHS4wu2o2O2O7uBF2evbi/f
XF/QrpG3V1HXZ0EXxz6nB+4nND+76bi+bLOx6rCyYDU/bTY2Smnv1Pj6jdzQ
TMz5LJ2aLd7zXWNp1Wpl3WZry+HowO3iPOTu7t3NbcrDfebD3Yf7u4/3dzl3
txlX55GX52HnJ0EHex6bG47rK3arS9azk8ajg3rdzWoNpUrVedJFySIZkXwJ
vpxh1sy+BmhHZVgiAfVFDVuhiKmVRVXKY0pkMXmi8E8isHxBRJYA8j0fTYWi
othBISzAUFaa82JwQdFPcLBD0peqKXAGbRgDGfqCjGLstuHcjxE+r1Y+ryUe
Zskc5sgcpkntvxHbDBVaeSk65yo4pMs8SmWfpLIP67AM67FPWOOGbPibCOhm
FXSLDtMXDVShKipbGZGkgIiRgrwiwANloEF4uI8izEUeaikOjgrkK6hVLurU
rBs3+jZn1bfqN73/evn448Re0rd5l9oR8/IB06xvWtElSrHFhMAMRbNQPgNf
TlUbZhVLZl13LgNvbtNQHrs4XtckAf+Pwq+LZROq8OVdhrX9NjktxiXfjHMb
1ZMKFbKKyNHJssGxkoGvJP0ixf1DJR18+Uwc2Q0sWDX0MRokpKIUTJAH9F4U
XaHA1KzM/N2Yc+GlxEmV5t2o6dO81V2P7nmZ0mKAWLchV4UCqlAOnSeDSRdD
v+WDx3NDI9lBgcyM/vQcEoANilEfzqCJoK/1i4MZxCEMBAzAhgfszw8K4AMF
CkKChSDevCBTFEOkCrIzRXyyTnGkUn6wTKazRKr5k2TtR9GqTNHSD2K5iQIf
YwWSo3jfhPPEhXIHerIH+3LMTunvbduc7Nme7ltfnngf7ljOzWgPDqi0teEr
KiQ+pOH8PbAmupgYe2lHDXYBZpCZMVtmkejQd42rE79f9+m/H9KfLnxoaL/a
ph4tam+Masz1EUfb8e1V0uVZAtlveWKD2XycsJb6cE0liIIImI8dxIYBcDAD
fIPF+0dMF5ecTw5DLk6j7i5fP1zH0+zqxUng7UXo1an/6b7r0Y7z+orN9ITx
0qzt9Lh5X69WV5dm81dS5RfltEzx2ibiwqrV8rr1xpbt/j7N7b68vY5/eip7
ePz89KPk+ani+an68bHs/j777jb16jL67DTs6MDz8MBtZ9Oeviw7ZzExTBno
1GyuUGr4rFj+UTIvXig5gCvGjT3MmsVZA2kiCwmQgX3CYyoVUXliiI9CsI9C
0AQcOIkLksoNS+CEvOYERePAL1noj4kGcpohpcAYNKEMqlAGPIRRBsIgBWWo
NmM/jhc/K1Z66NO8bVO/KMGff1Y4SpXejxXd8BOc8xT6rsU6os4yqcc2qsU8
ReGcMeRccBDs02fvUsd2aLM2KqNqyagSEvKTMiJdHposD4tThIXKwQLloL5y
YG8FmJ0EONSNM79MsaRD98sItXHSuG3Obu44bekkZ/rgfdu825dhk6IeSk67
bkyJUnCWjHuihJ4nD8mUXUGLjV8OLkZEixIQ8vpYfS8Oqyhuj3S+oFzxuGLp
wmaNun6bxhHvxmH3rEa191XKyZ/lgxJF3P14/aKEfKNFvcMl3IPFzFw4bD15
rB051NWRMpJQYRwwTxJTq8Dar4+bcRJbD1M6zNY8Kde77rK467K5qbfcCCf2
6fPV4JmKZdFFMuj3wvAkPniyAPyNACyCGxJCUzVsIAcUnS70EQwkGIM8DCAB
Y+SHMLJCGFnAAGYwIzOEkRkGwAIZPAxZJ+uVVntJ0y3EsSb8WKvyYINi7xf5
pk+Spe9FKvMkyvMkizIkMlOFM9OEUxMEosO4Q15yDA1qHe7YHOzaHu9bHu2Y
7m+aL87pjo6Q21oVy0vFC/KEo0PZ7alYOy1OdVGYmRb722TB0hqZqQn9q2Pv
n3epfz1k/L4Jfzi0udwyPF3S257QnO8jDjXJNxWJfE7BvY/heuXL4mqBNCTD
SNJgKXoDHZCDCcSMAMHBDAbG3HUtervb3od7AZcnUXdXr28vYy5Ogy+OX14e
+Z/veRxsuazMW06Nm0yOmQwO6Hd2aDU1kiorCVm50hk50lOzRqsbNmtbdnv7
jjStfnsb9/jw8a+/2v78q+35ufznc9Xzj8ofPyrub1PvbtLurlKvrmiA9z86
cN/fcdzesF1btFqcNp34rt/TrNZaqVRfIPs5VSwtHJfgyxXhxOplgLJVgVFk
wDZi4HgJ6Ecx2DseUAIv9BUPJIobHMcFDmdlCGEH+jEDbGkSHcloCH2hCXmh
DHohB2IQBTKKQhlZ//gjXBlzmyF3/lnpoVPreczgsUvzoYV8XaJ8kiS9GyC4
7oSbM+caJTHNU9jmdFnmjblXrPgXTHGTNPxrsnarYrp12HoobE0kdLU6uoiI
yFaEZRCRiUrwKEVoiDw0WAnmg0c4SQKD7dg+lSmWd+hXDhk2TdDQbjO4TqP3
t8Pbcc3TThWD1Pwu7bw27YRylcAsOefXorYvBZzs5OSkuJk4gBy8YDZOCDsn
REgKoWHLZR3F65Ii4J8l9LZcpn7YvHM2pHc2qLzZKLUEn1wm/+qDhF+UwMs3
wt7RIv7REn7hslaevBYuHEYWLMoqCHlZiCgfqJrA3kRg6zcUWglQPkjSvPhM
vamxvWlxuSw3u6ly2YyiLrirDpgI1apx5gojPkmi8xSZs+Wx76XQiSKIcE6w
PyvQjQlghQUYIAH085ThACkYoxAcwAsDcMGBrLRCgVCgF2GO3PvD6mtDmgv9
GovfaZBTn+wiT/aoDbYQ2mvka0ukvxTLVRbLlhRI5+dI5nwU//hBLOGNQGgI
V1Oj8sGO9eGe/fmJ6/VF0Nmx18a68fiURm8PoaMdX10hkxjN4+fEYqQKtzVk
TkwRamhV/D5MWlsxfbhO+HWf9us2/uelz/2+9fkG9WRJf2NEfapdqbtapqlI
Mj+RJzGUI8yNycEQqUeEEcRAolxgbiYQKxqERYKxKDAMyCgiiigo0zw69D7a
Ddzf8T05eHly6Ht6GHBy4L+z7rQwRbOThqPDlN4evcYmtS81KsUV+NQMiYg4
wap60vKq2dq6zcGhy+GRz9VF7I8fRc/PlX/9u+vpZ9Xdfdbjj8Kr6zc31ykX
F3E0X3B3k3J5+fr8NOL0JGB/j07vG7RxYdZkZtSov0299yuptQJfmSVVlCKd
QlN6riwBNswuuihLIkJHGqIlCHamDaA48CsecBgH2J0N4MUJ8mABWtGMFRpg
jGTUgjKQIYwKIAYpEKMQmBEHBqABAEUO8HaKzH29+mOP7vMU5WlI77GV/LNT
5y5f+TRRfjdQbNWGa1KdedGAc5XKs2LKs2rNN6bGPGPAMUfhGdfhGNXnHDbl
GTDh/krGVhPRhfKIHFn4ByVEGhHxBg8Pk4OG4uH+eJizODjAjKmwklDaqVM8
oNM0adax6Di4Efh9K3hgI+jrtF3VkEl+t0FiDSG6RN4rRcIpVswmWESbyi/E
g2VGgVnYIUzMYCQCDIcBmZkguvb8Dm/5Q/Kl3tUpF7Tpto159M2GljcbZ5SR
08rVk/IlEz7JhbwVD4kS94+UdgsTt/XlN7Rh1TRAk9RQCvJwCSFwlQymS43r
u7noSiRp753hcabJVaXX3bew83yb/RijzSjzzRjzCVelflulBnX+RgO+UnX2
XEXmTGl0kiAiggscyAnwYgNYMwEM0Iw6KEZlBCMN7cIwRhyUkRMGYEcA4Qwv
Qhy498c01ie0Vke1Fgc0NiZ1Vsd0Fka0Zoe1x/rV+ztJnc3KX+uVaisVy0vk
CvOk8rIlMjPFUlKEo2N5a2rwB7tW+zu2Z8fuTw/Jz4/vL86CtzfNZ2e1Zme0
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
k3AJFbXw5aI4sOqYMekYMhNVkFIS0G9ktkaKwDc78e4g6Y4YfIkJz0ciS64+
d5YFf4aFQJmXZIWT+FC03nKaw3qq43iQQYsWdwUeW4DH5kqh0sQRsULQID6I
CyfQmgVgwgTQwjCSMIx4FEAM/OJDhMj+EmVzymBnweR00+p61+L+0P523+b2
wP76wP5o2+Jgx2Z3y2Zz3Wp52WJhwWJsnNLTr93eo9ncqfalUTmvUKqgXC67
QDy/XH593ZL2m1enbg+3sT8f03/+yKYx/M/HzIfr+OuTwNM9p7MDV/pE5aHD
7VXY82Pa093rp9vo56uAuyOHq22L40WD7THNhV7VyRZ892fxskTch1D2Vy5M
noYoUyJMXRwswwP6J6oO+TfO/882tH9iMOlnB8OAaDgIAQHRAAMD0fdvM6HB
bMxgNpqxxYKwKJrUp78UgD/+lfpe/uDMZXPH6fwi9PGp9MfP+ovrtN3D0PlF
q5FRk4ZWtdxS+fRPCgnpkknvpT/XEDtHDJY2bA+PvG+vk25vPlxdxhwfeGyt
2y4tWsxOUgf6NLvaNVub1KtK8QXZsqkJQgmv+CMDuHwcWeyNMZb6aGN1hA4B
jhem56nyMwPZkQBm2n9C5/Z/svcZ/3+Gp33C8K8XmmLwh2/khw6dp3HTX1Pm
vxdtfg3Z/znp+eesz1On49VH3W17+QM/jSMvtRM/4k2iwUOmzV2C6amf3oah
xI6F2JaN6LoZ34o534Ix77gmx3cS6wCJ5bshR5che60a5rMyMpsATyciEwjw
MHGwryjIRwbiIgdJeytc306u6dWrGtStGaO0z9p2LjjUT1nVTVjmtGsm1ii/
qSaE5cs5JvDbxuBMQvgofvw6brzaDjy6jjiKB691mLD/R9lAmlxs1Ij7opDX
RR3cyu1cSWmYCijptXv3hZRcrfKumhT7WTkyV/FlmrhnvJhntIStPy/FgU3X
nEXTgJmsgZaThbercXY4ybR4yzX6SRQ6C8YZcUapMkdrskaY8bxxFv7gIvbJ
XbQ5hDARa7j21mEx3KRNX7CKyFaqiP4oDk+ThkcLw4KEoV58YAcugDEbQAMN
IDOBZCEMTiTs0rDW1hxdsRxtWlwf2N3R6tD+/sjhlh6O4XJx5Hq463iw7bi7
Zbe9Ybe2Yjs3a9FP47Hvut96NWqblQtKZT5/IVQ34hPfCw4MUw73bM5pf3vh
fX8T/nSf+Nfvir9+1/x+rnh+SL0997278Ls8dj2l3fky8Ofju+fb6MfLgNtj
p+sdm9Nl470Zyvqw1sQ3Qn+VTP0HwdwozkR/tgBLtJM2wlABqsgL4scC2JEg
DBRE1zA0nPwNlX8yMKH0/kr6JzSSp2l4NAyIhdMKhIEBUVAgjfBhEOA/YwEN
7SgEGAFjLCgnbh857uy5XV29enwqfvxRcXGRtL3nMzVv1dGnV1lLfJ8rFRLF
6+7FaWrG6uYpVFSlOrdisX/gdXYafH4RfnEWeHzosb3luLRoPjNNHRrU7upQ
qy4nFObK0aP2ksUSowWiAnkCPdjcrZlsqRhjDZrLhhLFITI4sAgbiBsLZEHQ
Gy3pEQHA/1X/oJ32Ff713/7wN2b9n9P6992U5wmTv2Ytf81Y/Riw/3PM79e4
9+NXq8sPWtsOMidh6rse+GNfpft0y8cPlndJVhdhZpfRRifexD0L0R0r4XVz
4RktzjES67g2+5AGcw+J+Zsqcz0RU6mGKSAh36sgkonwOEVYhBLMXwFqJwL0
N2YqqcaXf1X73KVROqBdM0JpnbFpHDerGTEuGdDLaCEn1pN8Pko6JPDZxHAb
B7ObheOc4sVd30rbRAtZvhJwThYOL1aOribHVCpkt+nUTXg1zYQ3zQTXT/vl
dxkn16rFVyrHlhHC8xUCMqT8UqXcYkWdI0St/fmozlw6pqxq+hiSNkZODt5p
KfHNU7bspWSum2Aalc2LjLQjohzUUZ5mbK88BeJdhD448JdZCw0Gamy8tV6J
og7aKbTq81WRmLLlEMkyiHBRmI8w1FME4sIHNmcD6mAAahiAMpaxJlt2Z9Fo
c85kb9Hs7MD+70AM1/tTz4cz95tTj9sL35tz/9Mj970dx8M9dxqPra/aLS7a
jE+ZDI1ROvu1v7aTyusUy+qUKhvxKVnCRVWK6zSvum19duh0c+51fxX48yHx
r+fCv34W09NKr189XEfeX/hcnbjcnnvfX7y8p+H/xPlix+Jsw+xonro1qj3T
QR6skW/KEvn8Gpfqzx5hx+xliLIhw1WFwWKsAC4UXbGjaM4UQoMEDeQA8N+9
ljRKZ4IwCiAAYnCANBJIwIIIGJAiGiiFAgohgNxwICccwAwHoelzOAAEvUBo
JLC8XnVt1357z/3qOpZmTq9uc/ePwlbX3UenzKsaiWm5EtEJAp7+XCYWzGQy
QlwYEvNGbHrFeHPb+ejY5+Iy8vQ8cG/faXPDannJdHKCMvJdt6dDvaFWubRQ
oSBbJjNVKu2NcEwILtSbw9uB1cmMyVwHpacMV5WCyvFBhNhpaAew0t9cunSH
/W96p49Hf4t2xv/7j6Io4f9smz10U2jE/uei/V9rbk8jbo+d7s8dDjdFesfJ
pG0fqYMA+S1r8V0nqcs43dOX5Ltkp8dC76sYqwNb1WNn/J6d+Ja18IaVyByF
Z1KdtZ+I7iRgutSZW/XYarSxRaqoDALitTw8gYR6pYrwlwW7yYJtpUGpiSJl
zaSyDrXiXq3aUcq3Gcu2GSuaUc3v1k5vVYurJvhlS7qnCni/F/XPlPJJF4so
UA7KI/h9lPH5IB1cpBhZphhbSUhp0mycfNm7HNswE1w37tow7lzQTU2sI7+r
U4kskg/NlQ3Jln35XtotTsQ+nM/Sn9fElUfblFmdglFRR8sqwGdzLQdTdaoT
8O88cK9M2Tx1MOYkhKE60kQX6+PKG+cn+tacN88I99UbPx5NWUmwHvFSa9Fh
LyMxZxKxyXLIGGlYkCDUmxfkigNZcgIM2YBE6B9uati1CYPtJbPdZfPdFbPz
fcerQ9dbms28Cny8CX+8irq/ib69fnV9EXR65L277byz5bC5YbewZDUxYz40
ZtTzXaetV72qiVj9lVRap/ipTPZDgeTXdvL2lsX2hsX5kevNmfv9he+P67Bf
d3FPN9GPN7EP9EOrva5PXK4Pna6PbC/37c93rA5WTQ6WqPSpmEHyRKtyR7F4
WTJ/RhhnggdLgCnKURNpKA+R5QTxYgAscAA96vAfeIAZaTKAGwqUhIO0MCAz
JoAtC8CWFWjNCjJnA5mwgHSYgLQ3mkCzJwiQKALACwNyQIFMUCAWRqNTID8O
2tajtbRls7XnfHH1+uFX6fNf+WcXISs7NkMzpsV1+Jh3Ah4vOfUN0AR5mIww
VFUR8aVZdX7Nau/A8+Ii6PI8/PDAc2fTZn3FanHeeHqCMtSv3d2h1tygUl2K
L8qRzUyReBvDFx3CE+bL4U0XM1gLXZS+CowsA5XjBwuygXiwINa/uZ2eifG/
e0hpMKe5VPpoxfBiuBj/n32bx3HrP6et/r3i9mve4eeUy3W93Xkp5bxUay1M
dtVDattPatmcd9VS+NhfYdNS9DyEcp3oehJgchNlfR1hfOKltGkhsmjIM2PI
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
TaWwWuFTiVxVrXJbO7l3UGty1mxjw35/1/HyIuLhPvP2NvnyPOSYvpfYZnWR
OjOlPzqs1dVBbv6q0lCnXFmBLy6QzfkokZ4kkvJG6BWN3j3ZvRxYHMywJjSj
qgJXkYbICIAF2WloB9H3P9BPEaJ5bQAY9DfaIcB//dcf5mpM/zmg/hih/Pim
++es/b+XfO9bzC++Uo7rNNeLlMbey7cmipenSGW+kfgQK9aYLNUWKtpN5ZnQ
5F7W47997fizJuVHacxFlNOWmcKOlcSGucCyBW7GmHtIg6WPzNSqgqlWxRST
sCVa2Hw9pnQN9BsyIooE91eEuUjQjCpEmxdoSoDnF0p/aSVVdKpV9an1zdj2
zDu1TdkOrryc3I7rW47pW0mY2s3rnIvoX05YOKqZP6jevR5aO2/vnA9unXSu
HnYq7KHmdxlltWpltWin1ZLjy5WjCwnROUoh6XLeb8U83gg5R/I5h/Na+HMZ
OLFpmTPRoI7XREorwwWkIMffo2bbnXoaqU3l2qmxhJAAIXcXPhsrDiNDVnUS
mkRkDn0plRkiWRYlWxeu0BmjMxil1+Wv2mQqUK3FnqeCTVFAx0ggXolAbTiB
chiANPSFpTpLe6P6xYHzjxufo23H7RXrmUnq1CR1Yd50jebF9pyuLgKfHt//
/lXx++nT84/cx/u066uok2Mavbvu7bmsrVhPz5qOTlL7hwxau9Rp9F5eq5hX
LPs+WzIxRSzsFc7RkdnTk6v4k2xfE2GiQ2W+R2W5R3VzSH97SGO9lzTXgp9o
UByokG0rkKhJF/qcIJj1iuddIGecO5u/OcZFB0lVhKoIgMVYgVxI+uKREBJg
zwkL4UF6s8Ki+LEvOeBvOGFvWWFvuZCJnNBUHkSZFGuRGDYdh0jkgMRzI6LY
YUGsUFc00A4JsEYx2qABNkxAIwxQBwHQQALkIQxavOCePp35DdudfY+zy5iT
86i1LYeJaf3BUb22fq1v3eo9/WpTEwYLc+bLS1brqzb7uy7XF+GP9+8e7lJu
r5OOD/z3dx221y0XZikjI5qDg5qd7eTmRuXGOkJVuUJJoVxOhnhakkBiLF9M
OC7Yl93LkdneHG1hgNJWhhGlIbKCYEEOEBd9G+c/wYYAKAhIAzwIRBc2/89/
+8PdmOM/+9T7Cd3nHlpZPHVaP34zO/mstlmksligPPRJMT9RNCaKPzySLzpe
PCFZOi9JpttVcM6Ib0mf5yxQ6z4j4EfJq4d016sIwxMvuS0boXk99ikdtjFd
1u86LD26LC0U9kZTjloqW6EW5qMq6i0REUFA+MvDHAVB5nxAYwEQiY3Bx5Kt
soZQ1UKs7SJ/GzbqmrSqH6G0jJu1Tlo2TTrXjrqMrEZ2zwWObb/vX09vmghq
n3nZsRA+uBo1sBT2uZta1GOc/U37U5v+h3r1lGqV2GJ8WI58UJq0X5KkW7yw
SzSfQwTO5ZWAmR+HpiWWTMWoGmJkyXAxBSivMHSvwGm13Wmsz6mhUT+/TDU9
W+FVrHhAqIi7J7+VFYeTo0BUhHR2jFRpqOi3KMJQiklPqEaHO77GWKBcn7NI
my0Vj46XQ5hzgwXgAF02sCb6xUtzjuTXUm4OAtUl6rtrVhvLFuNjlL7vegPD
uuNT1IVly4N9p9ub2N8/S//8+fnpR+GPh+y765jrq+jjI6+dbcflJYvxKdOR
caP+77odPVpNbWpVdcoFJfIpGZKvYgSCg3EOdqy6OiiyCsLciOVdtFD5e7GG
LMmOIun+UpnefJnuTxJN74QrX/PnR/Km+3PGu7JHOrJ7G2Hs1BCG8lAVIbAo
O5AdSU/zhtAPFQJasEOC+BCBrEhvLNSbhXaFvOOEv+aAv+WEZ/GjiwRQNVKY
HB5YAhacyAINw9CEDTiaFRTEDPLDgtywQHss0AINMEcBTOgtLYzqCIAuB7D1
q9rCpt3OgefRqd/Rif/GltPSqvXEvOnUnOn8rNnyvPn2ut3uhsP+juvRtsvF
WfCPh5xfP6sf6MQefHTovb1hvbZiOj1l8P27dncPubOL3PSVUPcFX1km97lQ
JvuDxPtU8TcxvJHBHEE+7O7OTHbmaFN9lCYBRpSBygiBBThBnEwgJjq3/xNa
+7+UDBwK+K//6w8vM47/7Bo8zOvdDWr8OW1332B6Ua512aSzmqE49EayNUr4
QwTO25vN04fT1YXL0ZE3MFyqLkR83IJ/wVxg21rsPt3tf/RmPn7yuIrWvohT
23spu24nsGrGM23M8Z3C1q3H3qHL2qTDUqXFUqrDlEFAJOBhYTLgQGmwixDI
nBtoIgDS4wepcgJDvLir6vFNX0lf2khfv+s3Dum0jlAbh0wq+/Vrhizbp1y6
F4Jbp7zqRpzbZwPbpj2qB82rBq1qhmxyWvXzvul8bFLLatDIq9dKKleNyJMN
zpDyShJxTxBxiRO0j+Szj+A18+My8eDQtWZWM8Yq66Pl1JDCMjBufsj/B/Ma
4L0=
    "], {{0, 40.08}, {60., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{300, 300}],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{60., 40.08},
  PlotRange->{{0, 60.}, {0, 40.08}}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{
  3.9468377355575953`*^9, {3.9468377991337233`*^9, 3.946837822328854*^9}, 
   3.946838889784116*^9, 3.95617129441461*^9},
 CellLabel->"Out[7]=",
 CellID->1494061956,ExpressionUUID->"91b2f30d-b706-4758-8d43-fa8f5526ab5f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TestFilters", "[", "randimg", "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.946765618067597*^9, 3.94676561892802*^9}},
 CellLabel->"In[8]:=",
 CellID->1239915792,ExpressionUUID->"c812ee32-de1e-41af-8895-02b651ee94fd"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
6qZ5svPDDz9Q5ps3b66sBLnm7d69WxgeFhZWq1YtdmnwWbz8UXbNS0xMZLtc
pOZt27ZN5A5nYZrXpUsXWlq+fPlVq1YxqXv37t2ePXsqVqxI4Y0bNxaJD80D
AAD1pEQ1b13EOnK8Bu4NcvKLOcPSokWLWNMsPu/6hw8fXr16JWXdtLS0oKAg
Hx+f5OTk4m1dCrT1J0+e+Pr6klcUGfnt27f+/v4xMTHs64QJE5Soef3795dX
86hFpmKRXnqfhipVqlDmZ86cKWP8Io9pYZpH+Pn5sUXnz5+XuK5cx5Su0cLD
w+/du/fy5UsZMy8XsmseGayMmkc7mP8v5ubmUjTv+fPnHTp0ePDggUj4+vXr
2bZE9hqaBwAA6knJad61F9e+OvuViavJ89fPi53I/PnzWbNC+ZRxlfT09A0b
NtSrV0/YnY8atRMn/vPUODQ0VLcAV1dXielMmjSJlkq8cTF48GDeYYm2Ym9v
f/r0aYmJPHv2rHPnzt988w2LbGxsvGrVqilTpiioeVevXq1Zs2alSpVMTU3Z
8+uvv/5a9780aNBAZK3U1NTRo0fTIl4slPNi94LjuLu760pCT09PYvyDBw/W
qFHD1taWSoMNuKDykZ5zGY/pR6ma9+bNG7ZoxYoVIovkOqa//fYb6zjHMTEx
IdkOCAgQRiPpYrsj3kGRZJItunnzpsRNfJRB82gRSbKlpSU/oNra2iKH4Ny5
c4WtbmFhIUXzCiMqKoptiw66MByaBwAA6kkJad7fOX8buxqT5rkluCmSzoUL
F1izUr9+fWoci4x//fp1fX193v6SafC2m1i/fj2P+eHDB5INCuzSpYt4OhkZ
GZqamrSU7EIYfunSJUqTpUYNZZ06dSpUqMC+Ojk5iSTi6enJI5PPUCssdANF
NO/48eMaRVG1alXhKr6+vuSEbBGZoZGREY/Zo0cPReY4vXjxYmF5kBh/9erV
cuVc9mP6UarmcUXZt2+fMFyuY3rq1CmmmmXLlq1bt26TJk0MDQ15ZjZu3Ci+
OSofkUQiIyPZIje3Qn8dRWoeuxEqHXEN5hRP87y9vVnKjx49EoZD8wAAQD0p
Cc17/+F9m1ttNM5qzA2WrxERJz8/v0WLFqxlKV++/PDhw/38/KTEj4iIIIex
s7Pbu3cvf0hKbRPreU6iJXzYtGPHDo2CWzfUQomk4+LiQou+/fbblJQUHhgX
F8d8oHr16rdv32aBVIZz5sxhORTenHn9+rWtrS3zgXXr1pE3suzx+UMU0byc
nJz4fyHZ0CgYqRr/XxITE3l8yiTlmZUh7Rrr5RgbG8szQ+pV7MxQ4iKbXr58
OUtWYvysrCwekx2XCRMmFJbzj3Ie08I07/37971792aLHj58yMPlOqYEG81B
x0444DQ6OprOTEtLS2HOS1rzaFusuI4cOcJSu3fvnsiBkDIpTfE0b9myZbQW
abbI7DTQPAAAUE+UonnZedlv8t/wryvDV5LjNbnZJO+9Et6DQ6JFjZ3wHkXz
5s1/++23wkZxPnjwQPy12u7u7mxdYb8sUgJ2h23+/Pki8WvXrk3hI0eOFAb2
7NmTAg0NDUmQROKzHLZp04aH/PLLL2yLO3fuFIlMSqag5glp2LChRlF981as
WMEyc/ToUWE4NdatWrXSKHhsKr5TxWbr1q1SNE8IuyU1e/Zs6dHkOqYs0MnJ
6UYBZ86cWbt2LbNccXGS65i+ffuWPWWePHmyeCbpkkT4taQ1j3PlyhWWWpF9
84QUQ/OoomC3LkV+Fx+heQAAoK4ornnJb5JNXE0sLln8lf3XPxV+zouKv1Us
e65s2KswRZIVgdp01vBxyMSCgoKKXJEa35iYGA8PD4m3rai91ijoW0UtOA+8
e/cui+zr68sD8/Lyvv32Wwpcvny5+FbIJZgt8JCWLVtSSLVq1URa/4/KHmkr
i+aRq1CcWrVqibvxnTt32M6ePHlSKfn5WAKaJ4KUYypl3rwKFSqQe+cKJpeT
95gSzZo10yh46r1gwQLpWlXKNI/OnA4dOrACEZ/9BpoHAADqieKaF54RrnFW
g/7a3PrnvgebQWWs31hF0iyMsLAwR0dH1jSzhlukjxAjOzubpGXUqFGkgnz4
A+Pnn3/+T+bDw1m4sL89m8xNZCBAcHAwi0kN/XAxmEcR/CEv6042btw48ex9
es0zMDDQKHg2Kr6IlOnrr7/WkHRLs9iUhObJeEy55tnY2DQogM0BQmLGH/hy
5D2mHwsGKdvb2/NNU+GvXbuWTkvxDJcyzSOtZVs5fvy4+FJoHgAAqCdKeWg7
wncEM729MXvLnStHfzFZok2qEklMTGQmRrRq1Upk6blz53iPevLApk2bDhky
ZPHixaznvIjmEe3bt9cQPJujNp1p5IEDB4TRpAw0EJKQkPBRIBtLly4Vz/8n
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
hrrD9LRn1ajutXKD/6atF4YPX/F9zSmVLaZUt/25YZ1lbRo7t2mysFG9GVUr
0y6sqWa1wqHWnp799v/Yf2Xj5k5WlqNMjQeaGPYxNuxrbNjLxLCTkV5bQ72W
BjpNDLQb6muR5tnraNvq6Nj8czfvX83T4Zqn88/nf0K0jPT/Cfm2/LeVzbRH
drfctqDW2a0NL+9t4n60udfJZrdONHP/P/beKjiO61/Ufbq1d6bXaqbhGWnE
zMxMFrMsZlnMZDGDQWZmxxAnseOYYoiZ7TgxMzPIjKduj/I/596Hs5+Th/lq
1VR7XG73TGmVvvrRWub88yybDdOtVw9aLO4ym95g2FWmbshTFieK08K5KF/a
34myMcQ8bcgf5tu+uhT16krs+ztZX14Mf/u47dPb1W+fD7161PjoZuG9q3l/
nkw8+Fvw8f0h585EnDsbcflC/KNbmS/u548/Knv7vO3Tq+H3z7vfP6t//WjK
+IOS8QeVgulNaF7hzfN5F0+lnz2YeGxf3P4dguaFbV0ftGml74ZlPqsWei2Z
5TpvmtMsnebp0KFDhw4d/wPPbuY9vJT86HLU46sxgund/CPs0rHgv44EH9/r
9/svLlvW2C4eMxntUzdXywrS+egQKjKIGum1/OUHz927go4eiTp2OPLo0dj9
B6IPHorbuy92x/awX7eGbFjnv2ipx/R662oN08wT8wykWz2cLpQV3+1s+S3I
c6GRYrapepmx8icrzZEAh0Me1r8YS3/UcGtV1Bo1vVjFzpbTM1XMkJRs57EG
Bi0iRZPx76JRJARFAiHigoom4VrNq2fQPg4uMdHbFR62xsa8g8PLSaScI6bw
RAWL1nK44IGjKm69s/3BpNg/SnLOFOVfbGw6WVy4zsWuW0KUk6CEBFkkkogj
eSzRxJN1pKiHRr63t/49IfHXUI+1fhbzAq0GA8zrPQ1rfQzr/MwqfcwL3Qzq
Am077c0aeapLxm328zlZOuV0XcOPwSEDcvFUFq8gQR6utcckHInFYRAOvTHo
oA3ogVyx1tDiSVhAgmFX9/0dfZtycgfsLJrMlFXmesVm6jpPh9YI354Yn+G4
wKkejqUqaQFH5PHM3MDQ1amZYyGTCvT0EkgslsLiKTxbTKVx5CSGDGMIbxJ1
IIElDg1RRE9wPBSTY6gEnajN+ztjO7G0FxAQ2H+q9UgMUCQECPju//lOTiHe
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
y8FAGrhoA4bQCAfqiYEtYgLFRcDHlj6yzuXlhZg315O/POv69n7L13frXj9q
un4qau9Gu3VLrYe6DRvLlIWp4rxQcaKf2NeOqs83un85+e2Tii/vV3z7svvb
p23f3ix4/bD61f2CV3eyX9zKeXIj9/7V7LuXc66ey/jrZNrJgwkHf4vatTXs
1x+Df9kUJDjeiiVei+a6zp7uOGPIvqfN4p/eQzp06NChQ8e/lDfjS9+8mj/+
bOqzO5PvX4m4fT7k+tmgqycDzh/2P/qb956fXNfNN58zYNjbqC7LlmbFcVF+
lI8dYashjOSojEV5CmMJVIxBPRyYU9CGg1YsqmGgl4Ks0mNHlJJ9seEXS/OP
1eXPyPeNM5fG68vi1XyiPh+uYjrM9XfZGR3y87xWWnqnuvJM7KSfTfWXKZhZ
PNbHIO000swg1QzMJ0AyLkrERbEYMglDfATTQ0UVNOyTks0c1sZiXQw6LCFG
eXydg9W1jrYHK9fcW7zkfMvUP1taztTWHC4s2J+TtSUkYJmDdbOcr2DwKg4v
54gcnkyi0SgK9SWgK45kUVgXizdQsI1B50nIuWK8nwazjTTrvX3XuHuscnWZ
Z2+/0Mp8saPDuoDAPalpFzq6z/cOnm5t+y0paYmNebeca5BQjVKmRUo3SZly
jsxnsCQSROIgCAMuGPDGYQGDC86WSGH9oSE7+gdnJycWaOSxYjxESnpxmI+U
DNYT+6lYNzntIqftJGSomaLMxiAOx+ocHI7NWnByzuLZAcFlMn4yhcbgaDAG
g3E0nMK9ScyFQB0wqIGIBgUGf2seClgIaBQhUEH2oBMGonAkkwRTGFDNwRYx
bOaQCgbJJkE+Bco5pFsfHzUhBgyxLgNiqj7eqsHq1WipDBbJQJ4EpPMghkXC
GBBAAVcS2BHQgoAaEvII4mmK715qP34p9vX15E+Pa7++Wf359YrX96uunYzb
tdFxxTzzwT7T8iJF1WRVVbRRrK88OdJgySzXp7fS3z2t+ypo3qdfv33a+u3t
og/P6sfvF766n/fydt7Tm7kPr+XevZx386+cC6cmnzwYf2hP9N6dk7b/ErJl
U9D6VYLmeS6Y7TJrusNIv21Xq+U/vYd06NChQ4eOfynv365//3rF2xcDL+7n
PboSe/V02Lkj/n8e8T3zu/fhnR47Njotn2k+q8+op1FdVaDIS5RM8qG8bHB7
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
fvus9/6tnMuXkk+ciN69M2j7rwE//eL76za/I0dCzp6OfHAz8/3z5s/vFn79
tPnbl1+/fd789d3CL6+6P79oevu47PX9shd3i55ez3l8NefO+azzJ5L+PJp8
5lDC/h1hO7cG/rDWe80y96UL3WbPtB/qt+rpsJjaaPJP7yEdOnTo0KHjX8qH
dz++e730w6tp44/Ln1yPv/NnyMVjAaf3ex/c5r59ndMPC61ndxv21qkb8uV5
iXxyEJPhgBcYoIm8aBIlisaRHAIpokE2A7NZNJub8AEahBOiJAlZIWEbWXK2
nmKhsf4MY02XmUmlkUGZiWGDvd0sX+8ljrYjSn6hWnokNvrR6PSH/f1/pif/
am+xUEKMsnCAha20oHlIPYtOobRj6CY0DwlCER9U5IyKLCEU9KmNBx0cbGFA
IwPaONhIg24eFbylnsGaeaKew6dKqVYZUyMhK3m8UkyU8Hgmh8XQMJQEXjgU
LMUSB0Y41MOgAoPWOKjhkB4p7ODQfh5rZ9AWBnawWK+Y2Dc55diU0gsdHX/U
1Z+rrdsVHbXA3KhHQrewRLOYmCqnuxVsk+B4YnIKixdweA6LJ1NQ0LwgDPHH
gYv28A6QQqJTWCKbQOoM1Psam66s3fhLdV2/q1O1vrzCWFntZFpso8kQfM9S
lWOtnBri2B3pk61S5LJkhYybGxi4Iim9Rk9VQKGlPJUnpuMZIpLS5p21mgdF
1oLmQaAHgQJCMfw7lIcYaofPgDISdLFgloJcZizb4GD6i6/jQktNv5LpV1KD
CmJYhvVL8WEpNltNz9Rjputzs834WVayIWOuQ0VVyYg8HmayIJUFcazgeEgQ
ifgK3x6JeGtTt4g5+l1hAHdjt/fzCzGvb6d+el73+fXYh/Hpj+5X3Liedfli
8pXzaWdOxxw6FPjHmYgL56KvX0x+eb/w85tp375s//p519dPP3/9tOnzm7FP
L3s+Pmt696T69YNKQfMeX8+7fznn9vnMK6eTzh2OPbM/5tCusB1b/DZ977li
icvi+Y4zR22Heic0r8H4n95DOnTo0KFDx7+Ur583f3y78NPrWa8flz27mXzj
bPhfh4L+2O+3f7P7z8tsv59tPqvLoK9WWZYmyfRnCm3JKmMsk0XSGGwyDdNw
UT6B5BFIDqkdNZxLwSwGTaFhDIlkiskSMV1FYwMybrq+akitaNNXthvotxgZ
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
UrRZAms5WMHBEgbJ1p5NhoQQiCeO2GPAEkMMMCDTpkEnqvIwgGGC42nbbEkM
FYzuPwsD2hErGMAxAAXtsaUHZjsv/dF/wSbfsY1e87cEbNwbvWFv6NKdvst2
+q3aE7xub/ia34LX7ApZ/kvwvPU+c1Z6j85z6x2y7+ywaagyri3UFCYoYrzZ
QFvSzRB11Mf0ecgSgMeBDEfUGDTCgNlEGZ4GB2oSChYqRhETNR4cIE/P1M/I
1WQVGacXGiVk6EUnq6ISVWFRcj9/ibszY21KuBgSiWZUlb0015hP12MyFGSa
lMiU4Sk8NlHjJ/pbIwMINIjC/CjUh4Re2pgh6ogDM8EkISKDUDrRdsFChBYW
QDwx4fsE8zTi36KCj6RGbXI1WWmnWuSkGnJS1ljL8q3Euc6aDE/LeBfzcCuj
XCVfwWINLNrJY20sFEx7upKaYySbaSwf1Of79MSdanGtlKqWENViokZCFHFo
AQeLeaxYDISLVFqUSGsbMUIpxIMUOVAicxIxwJHGBOmfG5wfH/Z5fjbk9aWY
8ctR728lvL6e+PJKwttbye/upLy5mTp+LfX19dQ3NzJeXE59dinl6cXEh2dj
bp+IuHww+OzugJO7fA/+4r1rg9u6RbbLZ1vPHTXrbtbUlSnK8qQ5KZKoINbX
lcjNUi5abr95p+c/vYd06NChQ4eOfykntzoe/NH20I82e9da715huXWe2doR
o3kN6hZ3Nh/9rza1ZGWQ71I/1x4bVaMVX27BZOiTKYZsggmb4KguDbarMJQ2
4N/NlZE/2xjtdrf/2VS5WkGsVBDLVPQCNT0ixbulWCWDpBHfJeNIFi4qIJEi
EpRQSAUD6lhYz4E6HjRI0CrhgkMbxGg5B/NoJJX+LokSxZBI0ITjOeIiKxwY
4YgS1/oVLdjdxBI0b6L/Av5/joeK/v4rAtcG+gxNyYo28xWbw9bsDFu0zXfO
Fu+1e2N+Ppqw+Wj09lMJ20/F/3Y6ceeJuN0nEzfvj9i4J2LNtrCVW0IXrPUb
me3c3W/X1m7TUG1ckqOeHCOJ8mECHUgvc9xCgeqxUE5pK+4mYobasCGJA4qA
KEBYBvoHyIvLzZt7HBq67cpbrac0WZU2WxfVW+dWWaZNMUktNEnKMAwJk3q6
s3aWpL0GizDAUzRkioZO0adT9ahEBRknw+LEMJKFIRT0wRAvDPGeaCfxJ7Tz
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
b9z1u/0o5M6j0IfPjvzRa0iKFClSpEj5k0JhkhsxPQ5kDyQOhIGLQ+Fi/BgH
OYr8U5Oi+Jyt1YCqbLmAzFfgFukopCkLwrlEHAvLZ+ONbGRGS+X50bSv7c2f
2lpO66tXkoxi/IdWGbxFhFWxweMssJqL5HKgJBbkT1fAAw0RWvPEMMyFIeqg
kwXx/aVRgMAhCIbkxKi3Jyc1Uz4lUzY5V+5osWphjdaxavXcGvXsaq2MMo2E
fKXoo0phibIhR2R8Q3gubmwbK8rQANPWxJUVURkhoqyCp5SrNc6YdyxYT254
L92OOr0TOnndf2RV4mDupzb9Ws/ZTG34zW/7bzxOfPVj24sv3Y/e12zcj9m8
E7O2G7m45j297No7bdvUb1rbYVjVZFRaqZeUohgaJvD14bm4sGxtWMaGhLoa
KieDyIoR7yiFxlP2fct+J9cCZ7aD53bDFvejz+wGz9wIm7gedvrG4dHVwKmN
yJHVsP7lsI7ZwJoxl4Ju6/Qqw5g8reAkFZ9IeUcvgYk5S00DV1LA+ByYTcEU
ARPfU4bpMN3fQ3bfaz4fHMND/ruBQoANCRbJ4IU8tJYNdwqwk0rUgBqrXoHd
KiZbxMwMnsTxyBw+s0TILGYjzfKctQD3H0cG3w0MPSovv5eedDcm6F6k5w1X
w2V9wVkd7jkD0aKB4LQ2d1yNmtAX9qocRPMEaCYbjKOAEBQIIoBACrJHAAuE
7jhMF705CM/yEJh9oHnkwaeLiR5cI7TDSx5l2aC2CLZWRB2VEAcl2EIe1hfD
mgJIhQvLMiEeATIx+iNBH7PE6JwaGGQU5Knv7rpt73ut7Hhu3Qncexj66PmR
B8/j7j6J+aPXkBQpUqRIkfInRaJ5B7mr9MDpCBIdGpJce4qwQi6WhgE5JFgv
YBawkQwmVCDDzJThxnGpEBJJZaINXLxVyNoIDXtVUvyypOB+UsxpfbU6Hl5M
gXkkUMiCj7GgUi5UwoJy2EAsE/DEACuEoXNQDEREJxF8r3IsMZmDfwNGC4ym
JhGXKFdcq1lYq5Zbo1LWadAwbNE1bdk0bFrepV/ZY1LdY55Xr5taph6frxST
LhcWJ+MVyHX2YJtZksZGpK4WrqKA2rrzGqat25ZsOy9aLNw+cu1p8crj3IX9
mO5ll+5LLt3LrpVT1v3LHuNr7tObPqsPk+++rX72qW3vRd7Ww4S1/cjl635n
LjsPztp1jFg29hhXthocq9LJyFOOSZT1C+a7erBt7ZimZpSGNi4vB5tYcop7
TfuW3UdXAqeuB8zfDL14N2b5QeKlB4nrzwrO30tefpA+txs5vRV2ci1gZC2i
+0JI0xmvmgn3gnablArjw1kagQnKnqHylg5cfSOmqhohI0IEXIQ2PRyWvCff
2+B+H/+t2v1fxzsYWhiYJcKKRUQjF+0UYuPKzD5VdqM8q0eBXS7LSRJwsjhE
pZhdK89tEjObZJjn7M3u52c/PV6xn515Ky1xJ9B91810217zmrHMipncVWvl
y9ZKFyzkprS5wxrsPonmyRA5bDiRgsIIMISEvDCGB8pwPqj6YoxC6igoe7Bp
y6c1D2LRjgd9FzaKrnkIKeGQPhMxpSALJmTPgpxYsCUJGhKgDg4p46AsBvFR
kI2CLPqYJR3SlLwDMAhoa5CXLjnceeCzect383bAjQchd18cefwm9dGroy/f
5/3Ra0iKFClSpEj5k/L9Lowf3FVJhN5ckwwSAi3ZcAYfSSagXCaShjHi0UNF
HDSFhYQTSAyJpFFIHgV3yHKXne3vFhx7WVv7vLT0XnrKtI5yKx/Pp/tfgBlM
LJWC8rhoNhtJ48DRFOiGgWYIQGdVHPRu4NAv932vFiQxCIUBE3NWxjGluhMG
9YN61QN61SeNW8/YDF90Hly0aZs2b52ybJ6wON5nXN5lUtCkd7RKIyFXITJJ
JiCK7xsqdHRjW1hTRsaEljYaeVS5+ax13bxx20XLK4/yH32d2HndMr8TM3TN
u++Kd/cFz6opx6YFl8Z5qxOXnOd2A++8q/v48/j915U3HiWv3Yo4v+F15orr
yIJ977h1y4BZXbdxVZv+0WMqiUcVI46IvQN4rp5cCxumpi6upkVEpKt1X3AZ
uOJ9aivowu2oS/ePrDxJ3XiZv/++8dbbpp3XVTuva68+yjp7O2FuL35sI3jg
WkjPxcCm014l/Q5ZTVYJpQYh6aqeETI2HgITW46WHqmkhMmIMR4XYZEIhcH4
QQe3/6x5/43vHTyDHlyIEDCWhxyXoxr4eJcQm1DjntKVHVYRTOkqNqmKMzhk
CRurETHrxMwTmjLdaqIxQ/XlAJ8rYaHrh8NuHgm/FeR22VzjiqHsdXv1TUeN
dUf1ZWulOWPRlL5gSJXVq8KsFCIZbDCaBANw0BcD3DHQGQXsENAKAUwQQAel
J1f0t4Z09PxKZE+MQhKLsyFBbxYYyoUiefSIEcCxQjiCBwWwIS826EiBFgTt
exq07IEijD7dxzz4TKIQEBIss3/Pc+u2z+79oNuPw+49j374KvXxm6w3nyp/
/KXrj15DUqRIkSJFyp8U9kEqhCwKKtHpD6C2ZGCAOkrXx0gVYCkkJHG8TBws
pcBiFniEAKJxKJuEK5lIHZ9c9nT/0Nj4obX5WU31y4aGRyWl0ya6LXy8iAll
MeE8DprDQbO5WCobiaDDPoAdyjBFGRoIIIeAfBg+SCUAvh/Jw2DA1JxdUK3a
MmnZMW/VOGNeO21ee9q8+4LD6FXX/vP2o8tO/efsmqdMq/oNq/tNizuMs+v1
0yrUYo7KhifLBhwR+UTwHTzYptaEmS2zqM+o96pLy3mLvmu+28/rn/w0+eRl
18py1PBl3/bzHo2zTvl9lgUDVjVn7EdWvU9f977/ofbzr6ff/zT08HXx2n7w
5S2/s1fdp5acxuadO0ct63qMKlr1M8s0UgpUopJlvIN5Lr48CweWriFh48ar
HrUaXvUaXfM5dyt07XHi+tPUnVd59z+17b+rvPex/emPJ1/9Mvfwy+DtD31X
HxUu7CXP7sSPrAR2XwiqGnfK77TIqDONK9YPTFF0DORbOHEMLJg6BpSCIiYS
IFw2QhIHoTC6HuD/1bn/J3yHwMA/noHpbXfImwXXKFHVArRdgA4qMCe1xJNa
Msv2BkM6iiVcvEWWXcrBWxT4Q9pycxZa0yaaE4aaneoKo8Y652wML5qpXbVQ
WbXRWLVSWbFVvWKrfEZfNKjG6VVmnVBl18vi+TwknY1IpD0AA3wxhisGOKCA
PQJIBF4foTOjZRFIcJA5IkToGJ0zCQVSUCwHjuWCKQLoqAhOE0B5smiGEEkX
orkyWKzE9JiQDxP0ogAHEjDHQT26KTAog4JCDGZBoLwIaWrU273vvbbvvXMv
5PGLxKdvc568KXr9qfbTT+2ff2r9o9eQFClSpEiR8idFBwdMccCNYrhQh1xI
hgsBOOGAJQYYoYciSTCdiWQRcAEB17DhUhI4SoDpOKOMglrZ0ElN5ZcVVe+a
m15WFH/s6X5UWrLs49Eqz6e7mHHQYzz8GA/L46IFfDyFBQbhDCfkkAXC0EcY
yjBDDANcGGLDdLSHwkCYwdDVpYprtNpOWXZfsu+75NRx3q5x3rzjvP3JFeex
Vaczm+5z191OXrHrXrRsOWVeP25WNWRe1mue26iXWqZ2JFvBP0HoGyVw8Wdb
OFHuYcKmWeu+q849l+3m9xN2XzXe+dSxun10qMW1Y9Kt/axz3bRNZotRSoNp
47x7Ex3Qs9t9WfLlt4lP37pevCu7fid0bS/k0ob3zAWnqUXnwVPWDX3GZa16
hVWaqQVKUaki3wieaxDPxo1laEXG5KoOXfOY3Aw4vRNy9UH8zquCnVfZd99X
vfhp5MGnrre/zr/6+fTjL/1vf1189Gno+suSzeeVi3vJE+tBw1eDm+c8Soft
C7qtk6oMAlOVvGIVHPz5ZvZsXWNKVQOXkUV4PIjDgv6+bwsgCOM/G91/Gv/l
SRgCNVGgUIFoVaJaeWibiBxS4Y6q8665G89a65VziFo+UcrFa8WsER2FJUeT
GTONYRVBowAvYcONInJcXXjRTOmyhfI5I9kZDe6oGqtPieqSp1rEZJ0AL+XB
6UzoMAEE4YA/xpA8SmTPHmbYIoANAhgjoDIMCGFAHgb1UdCNACMoKI4JHuVB
RbJIiSxcIosUyCC5IihfhKTzoEwhmslH4rhQOAs6zEHCWJA/CbgRko8fQxcF
VFBQHoP4AOBozL540XFtz+vSdY+NW/6P3mS+/tT4+nPrhx87P33r/em3kT96
DUmRIkWKFCl/UvzYdCAlmA0GsgA/JuBLAu44YEu3XQBcEUYmheQz0WMkXMeE
qikwl4DySbCQALs46Lyh1uvK8g9Nje8a619XVd5OTjplqn+ci5ezkWZFXrGQ
ymCjyUwkkQlFk1AADjgetHLQQkB5GBBBdJcu1oHj4QjIxMHwGPmWKZveKy6j
G55Dq649l+07l+26LtoPrNhNbTou3HCd33YfW7UfumJ/4rxj94Jj8ynbmhHL
4m6jvGaDpGL10HTZ4GQFjzC+qSMZmaM8uu7df9Vxett/5XHuhfuZF+9lTF0N
T0s3cXZRTM43zG80SqsySC8zLey3aZi1GV/zWLmf9OZr+8dvna/eF91+Ere5
77+84TF/xfXUksvYrGPrkHn9CZOiOu30EpXoLNmQJJFHGNfei23nzasZsz5z
M2T+ZvjyvZgbr/Lvfqjdf114933Fw49tT770v/9t4eXPZ17+PPHxr5fuvW+5
97F993XV+dsJZ3bCTl2P7FryqZ50Lu63zWq1iCs2CkrTdAoV2XgKjG05Gnqk
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
iQNS+QWtuudvhV66E3n9acrTLw1vfx578rn70t3kjkXnkiGjvF7thCqNw0Gy
usqIvjU7sUG766Lb7G7kjRelL7/NvP7l/LNv84u3MnuveDQvOldO25SO2hX0
2sZX6ocXqPskKzkEiU2c2Ab2THVDXF4F4wlRFl0qGSZwkA7o4SAE0eE7DheW
U8ZUtUljS5aVE9fanm3vzLVz4JmZMvV1SC3Jr+RReSGsw4P9hVC2AlqoSJSo
UDUS2RPTZpXGho8yoRQKjCehFBaSwcGOctEcPpbNx47ykGQ2lMAGDzPBEIpu
XOuNS+YUdEIAGxgwhxi6MKAHSyYaSSThVApOwIFEiePRO7ZIHgHWs+EWDtLG
RftkmcOKrAE51qAid1CZc0qDP6slmNHkSTRvRJndISaq+WgBF83mIBksOI4J
RlD0y3mTgAsOOOKAKcyw5UEdx3VuPw658zz+2YeCdz8ef/u19NXH4ofPM3bu
Ri1vBQwvOf/Ra0iKFClSpEj5k1KM/VBOHKpkApVsuI6HlrHhPCaURkJHMEYw
zKA172Dr1ghiaEuuEUYmySghGfkEkIEzMkiJ6TEC0EPhJF0kLZoEIpl0WQxf
nOGCAbYoYIiCEs1TgMHv3a9YCEDRHWwBDAVAgCGWwyqGzbquWQ+su669qLr3
sefmq+Yzm7HVQ44JKabBfvqhwYaJZWalY6Z9V+wXbwVtPk9dfZJwds/n9Jbn
+Kpn7wXnE+fd2k7blg+bFPXpZbdoJlYrRxTIpjdLnMq9/7LrxLrb6S2/uZ3A
metek+tuJ685Tq07z246L265rt72vfMs/tm7Yx9/7vnLv1359pf5dz/2PHtf
dOtx3OpuwPJ1r3OrrlPLDkPzNj3Tlk0nzcq69PKbtLLr1eOK5SNzZf2T+EVd
+pfuRV69G7P6KO7x5+Y33wYffGg+fyuhec4mr98gtUE7NE/FN1zGxZipIovY
+og6LrjP7oSsPkp9+dP4t3+5/vyn08v3jo6uBfZd8qyfcygatsxoM0qq1o8s
0gzKVHOOkLVw5xjaMzWMCSVNQiiDsTgwyYRJEkJREAIYHC6iYcg0dWI7+nH9
ouWC4uT8o8QBETIBkTKefkJHJ46VNcvMhDLQxnVUMCUhos6BvPhQsghOEUHZ
MmiZPHZMjKTx4FQWkMkG01hgHAXHU3SnWolrJXGRJA4Sz4Li2GAoBXpiDB8c
ckZBieBZwYAFxDCiMy8YDigUy8QSKDSZRKLRQ3HIoUwSyiLBXAKolWgeF+kR
MgflOMMKrH5ZakCBM6XKndUSTmrwT6pyh5VYPfLMNjmqio8e4+PZXDSBgmKY
UCwbDiUBySs64YADBtogoDUFVB9VvfUw6PHL+HdfCr780vr5l67331pffDq+
/zTh2t2woSVpNE+KFClSpEj572lkwzUEo4o6VMuB6/lYOQctZSMFLDiZACMQ
hjd8yAU+ZAcyzKFDOhCgDAHmCCMWA3LwQ9kEfSQvnUmH8oJJIITuZQ9E0qE8
QOJ41ihgjILaCKiKAjIIyEe+d7AFDlp30afIJK6iqcdsmLXqWbEfuxG48vz4
1sumhZ3EllMeWeX2kWHaPu5qzjYKXn6q+T3GTecsT+/6rD9N3XqZc/ne4dlt
7/FV18HLLt2Ljo2nrMuHTIv7DXLatJKqVaOOycdXqvUsefRedD254rm4G7J0
K3Rmy21uy+viXuCVWz6b9wJ2H4U9epP5+afm3/759Le/jP7+7xd/+9cr73/q
v/0sZXUv4Mq258VNj3MrbjPLjoPzNu2T5tUDBiVduoUtWunHVaIL5EKPinzj
+YVt+qsPY67dj7n+NPXZ144XPw6tPcobXw+umjLP6tGPrdIMy1V1DhBbGbEM
lTF1FbximC6kfP724Xsfqn/8lysf/3Lp0r208Y3Anotu9fP2RSct09oME2t1
DxdpBudouMfJW3hxjZzYuhZMRU1cKINwBQiTA6MSSSZBVX3CLVwcnCofli6b
eEwjtVQ7oVD9SI5yfI56VIpyYLSMVyDfw4fn4sqxtWKa6xMGKoiGCNLiwHZc
KIQLhHPAIxzwKI8eqSxGCouRzAKPUFAUCcaQgORRIu1hBBRMMgJJ4GD//ZAr
StdLMYQZks+ABsRQlTg/DIQQSDyFxpNIDA5GomASDmYSjEwMqOTiTVy0lYv1
y7BH5NljajKjyqIhOda0Gn9MjX9Cidclx+qQY1bxsUo+XnFQpyWDTZdYPMyE
JF8T/AmGGw7YYoATBtGmRzDyo+Rv3vF/9jrhzUfJrDX88vvYt78OP3xTenbZ
u6HWICNc9o9eQ1KkSJEiRcqflB4O0oD/UxXBKGcBzXy8RkCU082wsGwmFI0x
gpAffCSmJ7E7WvPotEoZiKEGge4IIwH7IYUE4igwmGD44qAPnSDJcMMAFwKy
IWC66BkGqaOgPAoKUYh3UD7lH45HpwyAgKWbsGnJqv2K7cxezOqzyoWbGXUT
Fo3DSTMzHVFBxrpabD1NloEeO73ZoHrW5OS6++bzwjvv63delS7cDOu/ZNtz
3r7trF3NpHn5iEnRCYP8Tt3UWvUjxUqR+fIdC65D13z7LrjObvufvRkwv+V6
ZT945W7IzaeH336tfP9j1ZdfOn7/t7m//NvSX//l4k9/Gfrpr/Nvvzbfeppw
Zcf70pbr5W2vM1ddTl1yGTlr1zllVn3CsKxbv6BFO71CNTxLHJQm9ksQ5jZq
L98OvHgrZPNJypPPrc+/Dq8+KhzfCGpddMg/YXi4RMk7Uc4pQGRozFJXxFXk
ybRaw/Ed/4W9sN3XxR9/P/f0y9D+6/pz++mj62HtSy5FJy2yukySGvSiyrTD
C7V9UpVsg/kGjixNM0JBCxMqoDwxQlCQWBF1DBLGFqtl1Ghm1WnmN2qXtBvm
Nepl1+lkVGllVeqlFWvHZqtEZyhExsuGHxb7+/NcHdn25kwLLVxXDlHhwoZs
yIsN+pNAKBOI5YCJbCCGYoSSjBBCMo9QKAkGSlydgwZRiDsGOKMMB5ThQg/Q
GmaYHLQzU4cARRCwx+EYAkmQDByMJyQDyGLCJRziuJBVJWZP6KlP6muOaihM
aMhNqMqMq8meUpMZV+S0CYh2IdUpoloPtmsbZJgVYiqbjaZz0FgWkkg/Qn4E
6IwD9ihohwNWGMMI+SHOQ7C+5fn0dezTN8mvPxV+/tYx2h2ZGqbpY0R5axEp
fqI/eg1JkSJFihQpf1LmDTSmNWQ6eHg1BVWy4BoBXicka/hYLgs+jINhKBAE
H3KGGGYwoA0zVCC6IooQBkUQpAcDHhgQhDN8McAVYzhKrAAHrDHAFAOMMFAH
g7QxUBmDxCjERSEWBpLI93ogAI4eJA7gkGeUYuuyfedVxzO34q89KR5fj6gY
NavuDZs5XR3sq6eqSGqrcvV02bFVmrWnTac2ffffNz//NvHy54lrD1In131H
rrp1LNrWTVvWjJmVDxgWdulLNC+6UNE/VVA2YHZmJ6LvgvvoquvZHe/lff/N
R4c3HoY8/Zj/z/8+/9u/Tv3819G//o8rv/3rwv/4n7uff+qRjJfvj994ELG2
73tl22v5ut/Suu/0BacTs9ZtExa1fSZlXQbZDRoJxQoh6YKgNJFvnDClQuXM
lue5m0FbT9K3nmVef1Zw6X7a/F7S4BXP8jH9+BqNgAxFh0CBkRVHVZVUEFFH
CvXbLtmd3gnbfXPs+Y+Dz76dvPOu5dx+8siaf+dFl+OnbPP6TFObDWOrdYPy
1DxT5e3CBPoOlJopoaJPyKnjLB4sr4FF5qsUdxs2DFnWDFrWn7RoHrOoHjAp
6TYu7TEt6zEr7zLLazDKqTXMPq6Xkq+akKYcGS0KDBL4ePKcrViWOri+AqLK
g7VYkAUFejFBHwoIoMOwgB9JH73zxgFPyVQidLc7Fwy0QwArhGEKA9YoZAmD
xnRXFEAy6WqQZIAS8Ysl0RQmlkLCSQSYTsAlYsGAiVG3oV6LnvaF4JALgUHL
fr6r/t7nzfXnLYxmTfXHVWV6ZNg9sux+eV67iGwVU/UiopSPprPRZDZdTDuO
jUQxQV8CdCFAO4xum2JBAPoQw9uQWjrneP951N2nsW8+Fbx7X1eaZGOtQqUe
1uzqsTp9QbppK0WKFClSpPz37EaF78dEXrQy6RGzy/BDNUywjocVc5AMCj5C
gBEYwx/5wZkuq0JnYahBDAWIIaYL39HROR4CqCGAKQpaYoAFCpggDAMM0MMB
LYzuOy8nETwEomAQhwEMAbB/FABBAQhiUGw4Mkez84ptzzX76d2o0Y3Qxlnb
4xNW2U3GR/J1XILFBsZsFUXCwlGQ12tUN2MyuRnw6Ovg+9+X3v56avNJxsS6
58Alx9Z58/oZy6Zpq4pB/fwO3ZRatahiBd8kftJx9enN4LFV/6FrLnPb3iv3
Qq4/Dt9+Gv7u59b/9X9u/vN/LP/6r3O//MvkL/88+/t/rH37ffLVp+rbT9NW
9wKu3Qy8fCNgacP7zBWXk4uOHVPmDcNGlb0GlX2GefWacYXywen8gBSh5xFe
aLrs4CWn6S3P8/thK4+SNp8Xrz8tWLqTcXI1uHLSJKlBOzBbyS5IYOHMM9Bn
GRtyDh/TqFmyndoOvvYw+fGX7ne/ze6+rDp3K3Z0zb9l0al80iyrzySj0yj6
uHZgvrJrktguXGDoytK0IpT0ULEyqmPFSqjUqh2zbJmw7Dpt333GqfOMfcuk
ZeOEVcu0Y924TdOUQ92IVUWfVUGrSU69fnalTmaRZnyacki4ICCA7+HKsbOg
TLVwI2VMWQDLUKAWCeljkCUKOOF0DNYZA10xwBGldd0aAcxhejaNYYYhBGhD
DA0YUIcgZQhQhBgyEKQEA94omHiwYxtPQJlM7BiP2aSrveDjdTUhZcIv4Ep8
/N6xogdVtdtHoi84WJ4x0b7gYj9najCuqTClrdApw5Z8j6jjoc2KwlpZTioT
TqAdD42iI8OgFwF54KAtzjBBJV8ZGLrQIUtZeLDb5O7zqP0nUW++Hnv7qaks
yXyoK+jx+9q125LJ8vij15AUKVKkSJHyJ+VNc9vrhsZHeXnTJrr1TLAQZ+RS
YC4LSWVCCQQYS4ChKOAJM2xhhglMZ2EoQoAMDAoRiANDTPqsHUDBABcBxAig
iIISu1OUXMMgH4F5GMynYBEHkROiMnxESNf3gFkE3boLQ0CBGEs8rtd91X5w
zfns3cTRtaDqCaOqcZusRsPIPDXXUJGxJU9Plx+aoVk8pF87Y7J0O1GiRu9/
nXv2Y+/648TRa/Zd56w7FmyaZyxqT5qW9urnt+mm16ofzpfzief5J4qaT9lM
rPuNXPOa3nBfvuV7/XHo3dcJn3/t+1//e+t//u/V3/9j7se/DPzy15nPP/e9
+nj8zvO0rXthm3cir9+JunjdZ3HNY/qSe/+8Xfcpy+YRk7oTJlXdhjk1KvGF
smHpwoAkgVcM1zde2DZrfXLNZfia3ewNv5uvq3ZfHT93K274ml/daausHr3o
ck3veHl7L6FHkHxIklp6h27JjEn3stPq44w3v4w9+9K9+/LY5pOCxd3Yngse
VdNWOX1GWT2m0VXqwccU3ZLFrrGyxu5MLRtSxRA3dedltem3zdl2zdoPLboM
LDr3Lzr2zDt0nLbpOevQd96l+5xL55xT62mXtlNutUMOx/tsSjrM86r0k7JV
oxLlImJk/AMELk4saxPCVBvVU0SUuZCQgjm4ZB5BFXorFrDBQAcctEYYFpIf
4UMSwdOFAC36JB6gCYOqEKAAAfIQIAeBQghUgxmhBJjOxhIkmodDWQRUKSsY
9/Jaz8i8mZW1VVI6Hxp0p7LiSVPzWnjwsofLjJXJhLHupJ7KjJHmlI5qhzyv
kotWctBaWW6VmJfKQhLZaAITjiUhuhoPSR8A8MQBO8l3BxwwQhk65KGiFOW9
B6F7jw8/fZfx4evxG+vZb961vP+pd/t+4tyqyx+9hqRIkSJFipQ/KU9KS951
dn7oPbEVH9+lKE6D/r8kDEjGwRQCSiChRBKKIejmVq4wwxqib/3KECALQzII
HaljwnTmLEEnz9IDgyEWBolZsKYMaqpBmuuQ1oZMCyOmiQFhpEvo61Caaria
EiYvg/I4kIomkdVm2L/mPLzuNLbp1zJnWTaoUTFiXNhpnFih5RYh6+Sv4HlY
Na1FP7dPp2nWfO1xyaffF1//PPHgU/PV+9GTaw4Dyza9S3ZNU8ZVg3ol3XrZ
jZpHq7WO5Mv5x/Odg9lJZapDl1xGr/mMr3ie2/G9/jDs4dvkTz/X//XfZv79
fy7/+teRL792fvzW/uJjyb0XqTfuH966G7m+H375RsjyVvDCitfJc44D87Y9
p6zbRiwq2/UKmzWyq5STCuUi00U+MVy3MLbXYUHjpMXEhsfEpseZG37bzws3
nh2TaF7PRfuOC5alE+aZncbJdbqhBWoxFTqRZarZA7rNS3at563P7IY8/9b/
8qfx6y/Kzu7HDl3z7F72bJxzKBw0PYjmqUo0z/uovEOUwNyfo+9I2QTwi06Y
dS85njjnOLzoOHzOafi8y9QV7+Flj76LTkOXnCdXvAeX3bvOOfed9xw479sx
494y7lJ5wrqw2SSrQjspRyUmWS44Qujty3V3ZtmYEiYaqLY8okibHsRCIQIG
WDAdoVWFQV0YMKB70gGSC/WDPXp5EFCGQQWJt4MgHwK4EMCCAH0YjKbgJBaa
RCBpBJTHRNt1tecDAtYzszbT0rcy0hcjItZz826XV25ER25Ehp/38TlpqHfB
3vqCk92sqf6otmodn6jkkcVcMoeFZbCRTA6SI2Ae5ZFHSEYQBfmR0EGmNmiF
g6YEqAkdinbjb+567z+Ofvgq8f3Xsp//Ovz1l6F3X1vuPs9e3gn6o9eQFClS
pEiR8idlLSTo68mJTyOjD0vLx82M8tB/SsOAFBRIxhgZJCORCcVS8GEc8EEA
e5hhADFUYUABAmVhkIeArINmFiRKOx6JgHI82Faf9HHkBPsIQ4LEAf5CTx+B
ly/f2Z1j78S2c+ZaWrFMzZj6BqSKMmpgzirsM+/fcB9Ycxi65tg6a1x9Ur2o
WyWrUT3kqIxviox/unx0mWpqi1bZmOmJy873PvT98u8bn/5y9sH72qU9//FV
u9Frzt1nretGDSoHjEp69bMb1VMqVaJzxcFJIic/toMvp7hLf+iy68glz9Mb
Ppf3Qm4+jXnxIfPLzzW//t7181/a338tefImY+/pkZ1HMZv3Itf2w6/cDLu4
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
Ubz4Eu3Gsw5HLtj3LLseW3buWLBqOWtxZNambdb24CnLujGLpjOWQ2sBSw+T
Hn5sef/nmR9+nnj4run87fiJq/4DS+4nznt1T7sdGrKp7JKWNBvsrdJK2asa
kcD18KXb2BFSU0zmeMo8SFMTya/Tbx+27j1tN7Hoc3E9/NJm0MadyI3bEcub
ARfWfWcve00teQzPuZ0859p7yrFv3OHIgM3BI9LKBp2CavHeUvXMfFFcmiBi
F98vhO3qzrCwIg1NcE1NVE0NTdyjfWbDf3ItcPZW2OaLnCcfap5/7tz+vnb9
ZenSo8Jz9/bO3d8zfiNmeDNs+lbkhTuJ9981P3zfvPVi3/nb0UOXPcYue49e
8eua8zow6lB10i6/yzz+gE5UhYZ3tnJKncHU9ciZ65FTG8GXH8VvPEvZfJay
/jTxxqvd116m3X6z9+GH+gcfGm+9rdt4sW/lcc7MjejRtcDT18LH1yJHrkSe
WArtOhfYdMqj/qTb/l7nkhbrzHLD1EKduN3iwAiBly/H0YFhZUqa6BPaaqiG
ABEyYRYBkQiIyTUPRBDo7+3u7y9IGHImwRwekU4iOXS0XV+718K0TMCuUmVV
a/Eq9ASF2pxMHU66NmOPEXevHkcme+Vq3P1CZrs6b9BSshAafCk2dtjcuFUs
rOHTS1loPgXlMZA9PPpuHiOOAMMoKIQOeRKwKw4745AlBpoSoD4GmvDg9iaT
uw+jHr1Mv/8q+cWbzA+fD/7pn8a//Dzye+8hBQoUKFCg4A+Ko4izS5Wzm0Xk
0+EGATXvar8R5HPaVK9DSO2jwFRcpnlKIRgtEAP8MSUXFDRFQV0MEuOQryu3
olFac8KpZsi5etixYcK1/YzX4dMu9aP2B8fsD4071Q/b15ywrjluVz/gUtVj
X9JuWdBgmlVtlFikFZUjCkxWjsrTbJhyar3g2n/V68zNkPFrvoNXPYavegyt
ehy/7H100XnwqtfS44IrT4vuv69/89PAy899N18Wz10Pm9kIHVvxOX7eo3PS
pXHAuqzVqKTBcE+pZmKmcngM18WVtLYmJFJcS4wKeSiDACVmjNwy7dbj5v2n
nGYWfOeX/ZfW/K9cD720HjK16DZ9wX3krMzubPpljjfm2Hbc8lCXWWWjfmGl
Rs4+tdxC9eTdymGxPP9gtpsnw86BkpjgujqYmggVcGE7J3bXKZuJKz6nN/yX
70fcf1v88nPb809Htl6Wrz0tufOu+9bb1pUnxQt30268rHr2qefDn2cefWjb
fJ5/6V7CmWsRI5d9h1f8+s77Hp50Lj1umdVmlFCnHVUu9s1Wrh9zmr8dc/qq
39z14I2nKVsv0m69zNh8lrz1avfW68x73+959bXz9U/DL3+aePDh6O3vm1af
lizdy56+ETt5LWpiPerkpZDjSyGd53wPj7vXHHcqabPZW2eeUqQXl60Zlqju
F8Z3dWNZW1FSCamvhWoqo8pshEPCdAyWtzeE5RUZf293/7UQRK55Hgw4l0+m
kXAuHTtmIR1zca5W4e7X4FXrCvdosTN0mBn67CR9VpIJK8NCkGMmKDRULRIx
94uYHVrKZxyt11KSpt0cTttb9hrp7ecQe+hIFgNLpdBYAoykIyGEvFezLwF6
yvO2oB0GmeGgHg4L/r/vYny4S5c8Hj6Pe/A88enrtOdvd//wsfb7H9t+7z2k
QIECBQoU/EFxN9J01VYL4TP3colGIXnaTP9WYtz16JBhbf4+BpyAATEYGI6B
oTjND6M5YIAZCmkjoIc5q7LRdP9J+4ZTns1nvJvPeh6Z8+694N85594159k6
49o67dw4Ztc07tg24XZo0Hl/n33VUbvyDpviZvOsA4apZdoxeeLQbFHloG3r
Bc/hDf+pG/6Tm77nbgZffZo2tx02su41cS1geiv8zvv2++87Hn5sf/pj+70f
Dqw+Sp3d9J+46ivvIjLv2TXpfOiEdVG9dl6lZnahOCKW5RfIdHWjW1uRxgaY
WAXlsRAOA8EhUEcfT84RH+ow6xuyPTXlNn3WbXrBffaCz9g5x/GzTgMTdi3H
JB39lh0nrA60GVU1GhZW6OQUqKflqqZmqsYkyON4nt4sJxemmTmpq41qqGMq
QpTDhJWVkfQijZMLDuOXvRbvhG49T3/4rvz11yNPPrQ//dD9+uupuz90Xn9Z
dfVJwdMfe55/PvHofdvtN1Xrj9Iv3Ay5cCPizFpw77x7+5RDw7hdYa95Trsk
8YBu+D61qDLx0JWA2euhs9eCLt2KWrsXc/t56vbLrM3nu689S73xKuPmq/TX
X9p//OvCh78uv/l59vmXU/fedd1623L5afnZraTx9YjhK+EnL4UdnQ9oOe1V
N+BS0mG7t94so8Iwbq9mWJLIP0Lg6sFxcGBamFMSQ0JXE1PhITwGzCRgEoN+
O5j3m9r9V1gPlkf5SARyoaAUNr6bQuvUlUc93Yc8Pet0xFViQZGYm6rGStBm
RmlREXqscBN+nL1WhodesYtuvrnyPn3uYR3hGSer1fjoldjIBX/vE5amVXxm
KY+ey8RT6VgCBccxkAhKXoURTEDeJOhCQHb4t+N5kCoEGnChjjbJrfuhD57E
PXyR9OhV0uNXqU/eZP7ee0iBAgUKFCj4gxJioWcpEnga6eSq8yr42FED9ft5
uU8yU8b1RUUMNJ2C0igkXj7qFPLAQFsMMEVAGxFWvs/k0IjbgVMubXO+PRcD
upZ8+i76DV4OPLHid/Ky38CSb8+8e8dZx945j/45v6NnfFrH3JuG3Gp77Uo7
LYtbJFm1ukllWiHZyvldpu1Lnsev+o5v+E5e95rfDlp7lrJ4N3juTvD5O9Gz
8rqGgy++jDz7fHLzeeHineilOzEy+Tm9GjRyMaBz0vXQgNWBLmnxAa2sApWU
bFHELq63L93FibS2IAx1MDUhymciLAqmEwgKAqrKaGikyv4Gg+5j5icGrIfG
7E9NuQydsu8dsjg6YNHWa9p4xPhgm1HNYYPKOoM9hVppOaLUTJW4JOXQSJ63
L8vVhWFjTcqkSEuMqfBRLgth0GEcAy3tGE0DkpFFp/mt0LXHu+5/X/Dq8+HX
n3uefOh+9KHj3vf1jz8033lb/+T9kacfmu+/Kb/+JOXqvagLW0Hnr4de2Iwc
uxTYOe14aMyxuMcyt904oVYnYI+woFM6fydqYSt8/X7yzaf5V7ajNh4mrD9I
lFnuyqP4lUcxG0/jt9/sffml992fz739efrZl9GHH3rvfzh2+13H+ovqc7dT
R1fDhlcijl0Ibp3yqht0Kemy23PILKtWklJqGJutGxCj4unPc/Pg2tgyTSWU
gS4mEiJ8Nix7VhQO44hc874JHvr/ZG8RiIWA7nQ4no3lsMmjUsMLiUkLaZmt
UiOZ5uWpcZJU6VHqVIgGI0iXE2mt4S1Rd9JTiXHUKw2RFtmJqrS5/SZaC262
mxlp055ubTqich69UsDMZWCp8oUkM5FoCg6nw4Ek7EFAjjhkhYFSFDDCAE0c
EgC0mEDB/AWX7YeR957E33ka8+BlwuPXKb/3HlKgQIECBQr+oIRLNd2M9NL9
3DLFvCIm3KjMWAnx2wr371BllrCwItmnOQOOp8BAEnLDIWscNIKUEgLUjgy6
N0/7Hjnvc2w58NiKf//loPGNqMlrERPrQaNX/CbXgk8sefSddx686DO2HDx+
KfzEQmDfjF/biFtlt1X+YePdB3STKrVCclXiq3Sa59yOX/Ef3/Cf3vKe3/a/
9CBq8X7I1Ue71p7tnr0dceF+8oMPLTdfVp5e9x276jl7PWxqLXD8csDAgm/L
kF1Nu0lFg15BhTg9RzkuVRgRxfNwp+xtCQsJrqeJigSIgAmzSYSOwwwCwkCQ
zYDdPNhFRVqHDhl1dEi6u827uy1bOyRNbcYHmwwOHjaoOqBbWqm9p0AtLUs5
IU0Yl6gcFs7z8eE4OzFsrSiJMW6gjavyEQ4doRMwicuTmGw2kpQtHjhrO7sR
eGk77NbzjPtvCp99aHr8sWv7Tc29H+ruf99w73XVo7dVT96WPHiRvX43dHkr
+OKNkKWtyDNXgk/MebScsm8Ysq84arWn1Sj5gF54oXrHjMfCdvTynfjbz3Ju
Pc5bu5d89V7yxZuxCzeizt4Ind0KWdoOX3kYt/o06+bL/Q/edT/6OPD0x9Gn
n4Yefzzx+NPw6vPqqc3YweXgznm/hgm32iGXyj7n4jbb/EOWOTVmqftMQpNE
fhFCNx+etS1dYkLq6uDqqqiAi7B37gtHdxqnfDuk9z/ztjLN4yCQLwOOZcBZ
DLzPznpjX+ml3Pw2iWGFOj9PnZOqzonVZAVpMr21mN7GKlJVlgYdc9YTZfpb
5LtolenwOvXVzrrY3cjePentflCVXcKWHw3NoGMpdCSBjkRRcCgJ+xOQDy5v
neeEQdYoYIoCxhioiYMiDBDhtPxszUurPjfuRtx8EHHvaezdZ3G/9x5SoECB
AgUK/qA4c4kEV+tUS/3dKqwqNtYjJBesDJcczJr4eDkbLePh2SwkmgT9CMCZ
ACUwzV2HamxxOjzp03HBf2g1fGQjdGwjdOZm3JUnpWvPSi8/2rPyYO/57dTp
zdjzt5LPrEeOXQ44uxZx+nL44KJ/3zmf+kHHonaz3Ebj1Bqd2FKxb4Ywr9O8
byVgaNV3fMPz3E2/+Vu+i/dCLz0IX7oftnQvfPZ2+IU7CWdvhA1f8Rm94j1y
yWPgvFv/gkfnpHN9r3lxrWZuiSinUD09UyU0jOnjTXd3oTtaEcY6qLYqIuIi
PLp8MAeFypv7Ubi8klS2RELU2Y6VEics36dRV6lbVaZRXiouK9UoLdEsKBRn
56gmJQmiY3ghwWxvL6aTLWVtiksMcB0xqqaMCNiIzBiJnY7QGAriMtODQE1N
oqTOcPyCy/SK58VboZduh17cjrr2ePfmk7z1JznLd+Ou3ou79iBi417ote3w
2492336cu3Yr/NwV/8lL/n1nXVvHnap6LYrajHMaDOJKNXfXG0xuBC7ejbvx
PPvOq7In33fef9Ny7Unpwo3kk4sePfPOx5fcT6/5n1rzn1gLGb0aNnI5ZOlu
wf33Q08/jT77PPL08/jddwOLD0pPXA7vWQw8Mht0eMJrf79T8RHrwmbL/EaL
zGppXLZWSIKaVzDfzpUltSD19HB1ESLgwmx55HPn1uTNVQBM3lDlfxzSgxGI
h4CBLDSZQkrZ5ExI0N26Q2eiopoNtOp0Rfnq7Gwj5SRjbpg5L8CW62rCslZn
SjiUEYehx8JTpcJqfZVmbdGQndXVlORzEeHNmqpFTCyPTSZT8G4eI4GBhVKw
HwF54ZA7DrvgsBsJO2KQOQoao6AmKtM8iAPDHAzMydS4tOa9vhV4837E9fvh
v/ceUqBAgQIFCv6gWFJItrN5nDo3V8CsYsNH+fiYOntYnXmEj9XwCJnmZbDg
EALwJkA7AtQDvksN1Wwf9W6fCxq8GjG5GT2+GTa4ETh9K3b1efn1V9X33jXf
/aH91tumm29aNl/UrtzPO7MRMX8jenYjevRS0PE535ZTbmXd1tmHDZNrdGPK
1AOzhJH7NA6f8Tp5JWhgxX1q0+fclvfivZALdwJnbrjN3vKe3vQ+uex0csVl
5LLP2GX/gQvux2Zdu6dd2kbsajslxdUaGbnClExhYrLA35fu6kS6OlDWJqiB
BiwvK2DJywoYMsFDQQoDd17l0zpkpkfHIZEAtjWlRwXwU2MF6bsE2ckqmUnK
6fHC+AhesDfLy5HuZElaGuMSHVRPDVHjozwmzCDkM3wJBJApkHzJNA8DCQxm
kriTu7C1XzqxYH9+3WvpRuDCdd9zG97nbwQs3gw8f93/0lbQypb/2q2g1a2A
ja2Qm3fCl9a9J5c8Budcuk7Zt4861B2zKjxsmFWrH5EnKmo1mb0ZtnQn5u7b
/LdfB77/eublp7Fbr9rnb2R1nXM+fMqy+ZR1z4J774JHz4J8xtmRWbfx1V2X
H1fdftvx6OPJJ5/GZcq38aJ55mZO/3JI13xAy6R3/bBb9TGn4jab4hbrPQdM
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
WEGx+PiQZGzS4uy8/ZlF23MXHRaX3Zcuuixdcpmbszs7Z3P2rOX0lNXIuOXR
ftPmbpPaJoOyA7qFVdoJuaLgBIFnKL933HHjYcLaw8QHb0v+9M+X//Svtz7+
srLxuKlnJqim3ya/1TR1v15siUZIjig0W5RYqZN7xLSoz772lNvx5fCbr1qf
f5p8/nnq0Y9TF+5VdC34tJ7zaJ/xaDrlVjfoUt5lXdxikVUjjd2rG5Ki6hHG
dfRmWTkyjKWEljaurIJy5NE8hMAhXJ7a3rnZ/zkIA4Pkz8GGQpI4hEzPBp1s
twvyrmeknvd17rHUqnDQ9dVRljBJGwHT21gU7qydFSYpDDHJcdFM02aVq/Ma
tNQOaIq7rCzOBIX0mElLuaxcNj2LgacQcAIdjcbBMBIKJGB3DHJGITsUtEIg
EwTU3tE8FQhkwyAdAcnfBFum1rILG0vm772HFChQoECBgj8oaca8Aj1mEw+r
5iDlTKSRAR6g0yopWhVFK2LQkklaGA7IFEiCgwbgd5nJOu1nA4YuR01txkzf
kDc8OXsz+sythLFrYf0rHoOrvqdvRJ26Fnb+Tuqbn6a//HXt/Z/OvPlp/P0v
8y9+7J3bjDq56N6/6NM+6VHdb1vabZnfIk2q1InIE3kn8W39mV67+CXd0s4Z
l9451yPTdl3nbNpnzDrPWnROWxweNWk8aVJ/TFrZolvTrFtWp7W3TD0lWxC9
ixcczPL1ZjjbkzamhIkWKhbAIi7CpcM8ApbSoSA2lM4Bd9NpWXRaHgvIoNNk
q4BFy2IoZVJAOl3usYkkLZqgBeE0r507dcYBSxTURwExAgp2CkuZqDyCRMA7
qcxvyif7EoVYJMFnclgkLvM92aITsMyCxGp4aqZqb6/e6dOmZ2ct5xdsZs5a
Ts1YzpyzPjNpMTZqOjhgPNBv3H/MqK3DqKVdUnVALzNfLTVbFJmgHBDBt3Wi
esYc1u7uWr+fdPtFwac/n//L3+6++9PFlXs1rZPee1rNEssMI/ZoBaSLnAO4
lnZMCwtmSIZGYY9tyTHr5hm3C9sFTz+O337dce+HvsU7BceXQo6c82w743F4
wq2636ms066gyTyzRpJQqBeWpu4RwXfwZlo50aUWlI4+ripC+ByERUdImeZh
8gITDIX+vjcy+lujFS0MDGcjSRTcIzV6UFL8rLJ8KsgzWVvooca24VLWPDLA
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
3ExefrJ/ZDWu5axj84xXcY9lykGDqBKt0HxxYo1h+YhT2wXPsQ3/iw/SX30d
//P/2v70l+U7bxuX7qRMXAk/Mu1RP+hcIXOVFvPUUr2wNFXPUK6tC91Igmtq
4CoClM2AvzXpRUCAxEBlFURqTto7MVzdGK4upIMNbmuOm5tgUj3MSAvVFMqn
XagzoDIDYjtA5Vmi/std2h+zDd6naG/bcc8JkTE2eFq2ONAYCxxlgyeZQA+T
1s0GOtlQMxNsYtKamEAVpZRPKuWStByCthtXSsC/i8WUwlCaN7KTvYVpUhgw
hEFNCBDBgBCRmx4LARkwQP1WFPBN834VPBRmoHIVFDBgXQHqaIB5GGDe+oin
JuKoClnwQD0GKMQh5rff3Wnfh6MgicEUjsCAkqkJtXk9dPtu3MPHu159n/7p
l47P/3Ty8Yd9N19mXtgKmV73O7boERolNtMjXaxY9lacgCjV4h6LxinXvote
G8+rvv/lzPd/mn3+ZfzSg6KhK+HdF7wPTzqUHTfN7zIp6JBpniS+0iC6WD8s
W8stkmvvz5E4EnrmuIYBriL+NZqHy95uefEF8FvS9r9MD/jvQ3oIaEbBuzhw
EgPKoSOHxYIJT5erWVmbGSlLYR5jDmajdtIhW7NzIQH9UZG7JUZnoiIvxceN
+/v1u7m2GuoVcahcNinTvF0UtmsnYxtNokE44oVB8ggqDOhCgBoMCCCIBYF0
CMAhefgOh3bStZBsyR8aHUHokOxdUCRtFShQoECBgn8MhkBsBFJFIDEKmsg+
ZDHQCgVN5YIHKaMgR6YuiLy4AKYBQnWyqNft8DmfY5eDJm/Eb73tmtsu7l4I
aDzlUdprl1ytF5yj4Rml6uIriMrTrTrleGwl4PT1kI2Xle/+fPbrP199+K59
9kbM+EpY33zgoWHnsk6z/EOS1BL9sGRVrxCevSvTWEKI1REhF2FR8qpVSn7I
TX7+DQVAFJIPsBCwETUhqsKDhRxYmQcLWBCHhJg4xMXh3ZrYqhPnkb/q+z2S
fz3u+s89zj/uld42511QwaY40DQPOsODZaY3pYyN8tETbKiXBXWxoW4u1sYE
WljQQQZYTQGlJK2AUMrBaamYUgyqFIEqhaA0TwR0QgB7WF6UYQQDWjCgjtCU
d+oyZM+NKZc92SMC6AhIlz0rFKLDIAsF1TlwmB2jNY0/mCOcyheMpDH7o6mu
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
O03kGMm1C2ZL3Rh61qS6IcZTQ5kcmebJk7aoPGMLsrmIgSVlH8TwSWQHJnN8
4zluEUyXIJaNKyWxwvWNMA159xtEzIb8hUiqKpGpQk9lE1kMtICO7MHBWhba
LiTaeOhRVXqLMv0gn6wVUPu4ZB6XymRiSXRkFwMNIhBXFLSCAAkEmMCADgyo
wABvp7BCttRgUIpAdgjkgoJeKBBEwNEUGkvCEQQcSSFhFBxGQqGUogRDgQIF
ChQo+MdIXTkhGcI9+zWr2wwqmrWL63Tza7T3VGtmVWgl5okjM5RDU5T9E/g+
uwQOfozEKsMjF4IH10LPbSdu/3DszU+Xt171DC7HlZ4wqDjudmLqQFGLa2ix
aniJVk6HWdWoXeusx/i1qO33R9/8PHXr9cHp9fCxlcCBhcC2Mee6o1Yl9SbJ
mRph0UIPD7aZMa4tQlS436J5MBOD2CgoRCFtDJJioLwwBIOscNAMA41RQB8F
tVBQHQUFEK1ei37VlLtqwPpcYfsf6/H/50H6f97P+F9nM34pj/1aGPslRyZ7
ie92BT9xs7hnY3DXSueGidolMWNJnb4kohZF5LwKNqtKnlMlZkT4hBAd4MJH
WUA7k9bMAup2Ynp5xHe5dFqaTPYwWggK+KGAMyrv6maK0vQRmjEOZhpgq7Gc
TwXKn6s0/9xt8E8dBp/y1d4k8Z8Gch540m87ktuu1JYbddUWX7LEJ7TBYQPo
uAHcoQ0dVAcqVGmFIiBDGYxkAx50wJYATXB5TE8Fh9RYcE+T/sOH3ht3opbv
7Vp6GHT77Z4HPxy68rxkYDWoacyuodeqadDixHn3c5vRqw/ztl833P+h7e3X
qQfvelYe7Z26Fn3ikl/Pea+2s64HJ5yrh+yLeixSGwx2N0qjSnV8MpU9UpSd
Y3iWAUxjF7q2JaGii3FUUDpbHs1DMYhkQFomuFsMO7JYOa5COalKNalCLX6f
ckQ2LySF7x3JdvGn27kyzC1IXW1MVRnRYYMhqkSGmJWhwtyrwsxioxkEWM5G
G/lkizLRpc7sEDHqBWSNgJRpXi4TTWcicXQkGAc9ENAZAa13Dj1qQ4AaBAjl
lRcQFwb1UcgKhWwQ0E0m0hgSjEHBGBiJA7sIKJ6CZb8eT0eiKDicUkTzFChQ
oECBgn9MdIXu3k79A0PS+pOmld2GFR2GFZ0GJe2G+YcNd9dop1SIE0s1Ygs0
o/O1AlIEsUWaDTMeR5cDJreiF7Yzbr3tvfNubPHe/iNz7hVD0rITFvImyR0m
hX3mZUPmjTOOJ1b8Zm8nP3h/9PH77mtPCs9uRI+vhA3OBxzut6s4LM2v0I9P
FgUHC1zsmeYGuJ46qsaBxXRIj4RMCciBAL0pMJABBpFgCAkF00F/EvAiQBdc
fijLGgP0EcAGA4d06Fel3E1zwbss6b+dDvj3tZj/ezfp30ZCP6c7fR/l9MOu
gD+V5X4tzHyXGPw2xu9NsNtTd4vbZuJVHfYldeqSXPaI86r4rAp+VhU/rYxO
KWPDfOQoB2jngK1soJ6hVEkp7WPQ9hBKMtOLxoAgjOaN0VxQ0AoBA1lgnyny
PJz5IZ7zOUv1b8fN/m3I/Os+8bsYzveR3Cdu9HuO1GMvzj1X5rIhctEEuyTF
Zo2RM8bwaQk0IkE6dKBDGmC1OpCvTEvj0aK4oBcDsCZAKQ7qkvK4pZU+OTFo
eumKx9x6+MJNvwvXPdeeJlx5kjp3J/b0tZAz16JOrQaOr/hevJX27EPXo/fH
br7Y//CHzq2XBy7cSZtYDRtc8e9b9Gs76954ymX/gH1hl3l6o0FCjW74PrF3
ptApjmMXyTX1Zug7kmIzQqCFsYUInQ1jGKxhTPqmKcftF6U3a+zp1Nl3TK/s
uGF5j0HxEe3ceo20Ks3YvcKwVJ5fNMfVh2nnTJdKcbEaKubCNmw4go+mqpBZ
QnIPDy9go8UsuFFEtagxDgqI/TysnIMVsdF8NpbCQsNIefsUW3lhC00ij+PJ
Y3dCGGbvFNKaIbAHhngTmBsK+2Pw/8/efQZFkb574391lunume7Jecg5M8SB
YWDIOWfJOWcEJGcEEUEkKRlBkiA5CQgiKII555x13VV3Fdj/H9xznnqeqt95
vftiPtU1BRRUTcHcNV+uvu/rcsdC7jC48/sPJsBBeEwECY4kIUEkxJ8IBwhi
noCAgICAwP8itEK5oFvz4ACnvEevuF29tF2juE09v0kjq04j7TA7/oBifDk7
Ik85OFPWO1ncLU4sp9OgZsqxecGpY2EnwkWfe1B1+mZ+97J37aRF+RAvt0un
tJdX3KNXdpLbMG3ateS4fDfz3puuW8/rzt9MnFwN7p/zbBu2qThmmFWqEbtX
3ttHxNaCytPEayoi2pKwPh2yoIIOZNCFDHqTgAAy6EcCA4lAEAncQwA8cDt5
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
CHjiQX8Sxp8AeuMBdxxog/ycWrtbtQNlQVAcgpgQSNvthAzIYMDde7Uw5IyF
HBCMFxb2wWECCbAfFggjwmEEZCfaJVKwsWQ4jgzHEjCJu5U9QcwTEBAQEBD4
z4pP6def5rcvmjcvWDbOmDZMGjZM8NtmzY+NmzSPmx8dNa/uNy7o4KXWc+IO
ygflSTnGCxd1m7UteRydde5YcGxbtO274DFxxWfhdvjsdb/5G2GrD7LWHxXc
fFn77NPAy18HXv164uWHo7ef7lu6GjC+6tU54XD4uElRlc7eLOXgUHF7O6on
j7jflFGvRz2oiM0Vh9OZUDYDKmZiSmnoMjK4c5VQoJ2Pd65COpRNBZNIYBQJ
CCMBDlhUIhk6o02/6y5/zULsrqPk80T1h5k6t7I07mWqP4xVfhStfN1d+oIh
Y4MvfJ0v/iLA6nWUy8so9zfJwa9jfR/ac24ay1/lip9TJp1jkxbVSJOS8KgE
PCIBT8jj+yWQY3SwioI6QBYqJAjlEFApuF9icUJReFQeDbWsgrnOwz+woT91
on09rLu94rI5Zv61TPN9uNTrAOlH9oxbPMIdY/IjR9Z9B5FbZtQrPOKGIfUC
j7Ski5/Xwc/o4EfZmD41TKMMupwlVCSKyhABYmioIArgQgKMCShtLKiKBWUR
SAwLMWDIxpQ8MMo5c9FyasVsYtVifM1uct3p1KrD6JrH5Lrv9OXAmcv+I+fd
+5fcTi569p7Z0znrdnzOo2nSuaLPrKiTn9bIia9Wjz7Ijjyg5pMtuydTzjlR
ytCPxnEmsS0ISkYEEWVYTg/vni0bVqMSVatU2M/ZP6xXOabdMMNrmTNpnTds
WzBpmOYeHucdGjEq7efkHdfJaNJKrlEPL1T0S9lJeiKOvkxLOwpPH89WhqVE
MQwymoJDsxCQjYdN8WgzLGiFgywR0AgG+DDAxQBqGFARDUr+LOIx0LvTLvAQ
SMfs7rq0QSAnBHLEQp4/63geMBCAhSIImDgyLp6ETSDjwglIKB6KxoH7pRnF
kvQEkiDmCQgICAgI/Gf7R43rTxu1nbXtOu/ZtezVf25P7xmb7tNWbRPmbVM2
rVMOjeO2BwctS47zsxrVEw4qBOTKhBUrNs46V41ZHpm27lh26VtzH72858yd
iHP3488/SL/xsvrR++NPP/S8+zrz7EPbw5fFD1/l3HwUsXItaHTJrXPC8VAr
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
/5Jl74LpiVnz+iHDA116mY2a0SXy3mliVkEM+zDh7GbdqhGzY6ftBs559J9z
PLniPLBsP7DsMHjOpf+sffusde2I6eGT/Jpe45pug8omTmWdTtF+1dRUmcIw
yXF/uWt5nI9rwd9fpv9+I/LL3eRvL7M2X5X8ebv4Y2/209yYxwWxtxL9b4Q7
XIuwXTBRndAW71EkdypR6+XI9UqkSgVCBh19UoOxZiJ8zUr4fYXP156UT+1B
L487PBq2uDphvjRqND5g1NPKrS5Uyo0Rn0hn345QfRKm9ibN+F22/ask02dh
mvfd5G/YSlwyEVnnMVc51Dkl/LQcMqOInVSAB8WhbmHgGF3oCPWXKopQIV6o
UwzYUEceWLE+RMr9nq/9tVT7x4Tj5nmfrSn77838L4Wcjwkav2XyvhTb/ppp
+TnT9lOa3eswzmt/5ec+Ug+dxe9YMC/xaWc1iUtahAUt3DgbGVTB9ChCDRJg
HlUomfRLAlUonIryIKGscCgDBLUT86T/Hpu7E/NgNBkLwSAgykQHhAgfalQ/
fsq4d8Ji8LR197TNsTGz2iHT8uO8wmPaBfVaO1dWlfq+SnbyfpXoXIXIXKXQ
TEXXWHHbUBHbEFGuE4VtRtzJeGJKCMeBmtqtXjjIKx3lFQ9z8gc46W3s/HaN
hgnj4Q3PsUuOo5esT21YD192G7ns3bPq2L3q3HLGvv60RfWkyYFho5J+fn6X
UVarUXylVli+vF+imGsw3daDYmJN4PHxWhpYeSm0MBVD2t2kB+0W9HZiHnr3
1i3mf66dyAeCABMDGeAwNiTEm4hNoBKiybgwAhxJwsXScIl0fBgJiSYjyTRS
uZRonRZ72M//pI9fp4vbYS31HCo2gySIeQICAgICAv9ZRDU7okardMDoyO6t
W/e1J8Vvvy18+GPl6Yfu5ZtxU+teg+dses9YtM8Y1Q4bVPQYpR5mxxTL7UkR
tw9jGbtRnULFsuq1Kk4aNU1a7YS6jjnr7gX7Ewt2XaftW6csGkdMD3Tpl3fo
lzVxDx7j7a/SzixSTk6ViQkTqdwjNmcvfjNN++ul2M13pd+f5219OLL1a/32
b8c3P/X9uNb8qb3s2YGEe1mRD9IjLvk7rXmYr9jpTOpKtCtSmpQpx5TI1dL4
fRSoWYa4rM+8ZC7yqszt68i+30aT3o/6Px13vj/ntj5qdmbAZOqEaftBzXx/
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
6VbEnR7bEX/FMQ+5WW+11XjjW4XedyuibxeE38yImPcw6uGKNquSa2UJxSJI
Lg28GKz4vs3wy/ye79cz/ryS/fVs8ocJv5dd1hfK9LrztHsqNVqLVIYbdC/2
mz4+6/7xut+3x2FbrxK232Zufyzafr3vx+Wg33qtXpXqPYhWueYttWYrusSn
TnCIfQqY4xJAvxy6Xgw4pYB+5CT8616F7732W2sxW2v+2+sum2u2nxeN7o3r
j7frNVXrttXonazlPT6k86VC78tBkz/qff6oCfyYqPcqUPOJo9h9a8ZlLuG8
Nm6ZgzvLxc3r4iY4SI8q1CgFHJZAHRBHZbOEEmgoPxLKEbfbU0ULQcnv3rQF
6TBI/ruah9ltTrJzIT8fyQjIxEEiMCQGolQIkKkM1oqNt9EnWhoQbcxpfH2S
jiZeWQ6REoOZDAyVjCYR0TgsiIUhGAM4xorm9LGLTnJbluz71r1bxtzT0zQj
AyVLDvMP9FpHF2vEFqnUjpsdnbc4umDVvmw1dMln4X7SxScF5x5knL6dfHIj
4Ni8ZeWYwf4Bg9xOvbRjWkm16rGVKjsvj6h8Dd8keWsfhoE1mc0hSMvDImIw
gw4TcWgcAu0++f/rpi0GDUBoUBeP9qTi9hDgJBZlOMBnID40yVbNWo5RYKVY
4qScaiETrMP0VmFGKAhHiVAiydh9DGKRODNbmJ5IQmIF1TwBAQEBAYH/RfxR
Zf9ieecAaQMu3TlCLb5ZL7vHaPha7trTpvWnjZOXk7rOuLROW9Wc4u/v0stq
1Ek4wI7IU/KJl7L2ZhpYkdl6OHlVRFISERaGGTQMeeetHAIJWHDnbV1GGqei
iNNUw2uz8WqKWBU5rIo0TkEMlqKho+QIE9rMMWXyiDLtoofB27aYL1fy/niY
8+XZvvf3op+tud2dt7nQY9IZr9YZpjyapL1UYLJRbHez3Pfegbi7xcnrCV5T
ruweHrOFTT6iSMhigO269Cf5nA/HrX8f9/i2EPdlNuXXEb+Pg64vB6weDFmd
r+TO5WrO1ulfGrJ9eSn44/2YXx+FfH8Vu/0u66+PZdtv83/ci/tjec+v3ZYv
S/XuhitccZdYNqHN6hGH1OAuGei4LFQjihpTQV54Cn+t0NxaDt6+nbS94fXX
Vc8/N+yfzRmuDOp1N+nm7lON9peI95FeLuN8azH646jVn0f9fq/y/y3L6k2Y
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
wksipEw9uZ1TdMqwY8Vr8UHBpWdHLz9vnr2d27roVjNpduCUcXGvfkaLdkKt
enSlesR+jcAcZb8MFZdoSStfYQNH2m6zPlWspDQizMKQSDDuv2Me9LN7HohC
gwo4dABzd6hZDotYx1Y4YcI7pCKZJ0vNVKbGKpNDVEl+GjQPdeoeXRk/BbFA
Ci4Ej2nk8xYiwzayslbiY8c9PP7pNSQgICAgIPAvldysEVWrHXaYndyku7dN
PX9Ap2PF9+rr3mefz9142Tl0IbR+yrRxwrhtzOJIj0nxMb20Ko2wTHmfaAkH
T6axGVFXD89WwynJYWXFEXEWTCOiSVg0BYHoCCgKg1IIKI1A0hhQ8mdjEGEM
SMMA4ghQrEqeNhId4oos2CpeDTG+X+D5oM7rdqfX2Q67/mbTA4XaMSGSnrZM
e22Cuy7JUYvkxGcdS1Af95BfdFa+l+7xpDjm/r7gZXvtQU1amyK+TgFXJY/L
FkHH0wA/EpAmBs8bMJ6laX087bL5NGLradz2w7ite5FbN6M2r4dsPYjaehr/
16udmLeT8Qr+epOx/SJ560ns95u+n+ds3vTyH9ZoX8lROBMhNuLJ6rQg1fBw
pVpwqjI6XBS87Mn447DG5pzD9pPszeepW/djvqy63Bvhrw8YTnfq1Vcrd7To
bozzf1+x2Vxw+THgvDW1d3s2Z7Pff7PH5o8jnC8V7N+qNN9kKt33Ydzcw1h3
IS9ZYccN0P16mHolMIuFiiEIhRJR7jiUKRalgwAKGEABhhKlMB2auAED8pAZ
vYtPGbKkD+mTT2gQOtiEo8r4Zk1yowbpiCy2UAQulIBzRNBpIpgkOhBFBgLI
gBcJsCWARjhQGwuqYwElPMT8LyEPd2bntOHJZavZK24zVzwnN3wbRy0LWrSz
63Wii5W902SsQsQMvBh6LgyeO8s8WDK8UiOn12j/sFHfxaDzTw9dfdFx6UXL
/N2C7hXfqnGjAyOmhT0G+5p04qrZkRWqoSWqQblKvmmKLtEylj7CJq4sLSOi
AhsnIQ0zWRgyBU3A/z0OA8Kgd4/cAmhIHIbcGFh/Gj4YjykQo7XoKNXJM8sU
GTlK1CRVcpQGNYwnGsyXjLLSDJcXDSHCe5mkFiO9c4nxG7m5s0GBfWb8f3oN
CQgICAgI/Eslt3ISmjSTm7UK+vQK+9gHRriTN3Ke/Tbz6MPw1WfH+pa9a8dM
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
jMs6oUPv1GJ0cxjHFIhH5Yk1CsQyRXyxMj5TGg6kAp5k0I4EmhBAPTykhkPl
FSgOLtkNLFk1jhlU93Oq+/TKO3Xzm7nxFWoRRYoRJfKR+5XiDinF16gkHFFN
amSnt2gcmbLvXYucvZm58az2yrO6qy+b157WjV1Lbl10a5i1rRwzz+3mpRzj
RB9SDylR8c1V9kiRd0uUsw4W4ztRdcwoSjo4SQVEVOz/Z++8gqLa2j99NWP3
3rt36hxpcs4555xzzlGQHCQnAZEkAoqKYkRQUFRQQBAMqCgYMIuoIEjGhDl8
NY3nzNT/4pvrcy76qbdW9SUXvYqn13rX+4OZTBKVCmEYhMB/2vP+nOmRQMCY
CsWKUzLY5HwW1u5kPxAR0GyuWqbGLVbj5qjz42TZMaL0dD4tm0crpqPtespj
myJvZ6ZM7Ki7FBZy1EDnn95DQoQIESJEyL+U/DbDyrNmtT2GO84b7h+yaB/x
G3lZfme6+vrz0mOXPJt6nXZ22lW1mDQcN9vfZr6zSb+8Wj0uXtzXl+XuzLQ0
ofiro1VycKsGfs6EPmBE7dfEzyqhrdLwEWnSHlGwgQdu5wJbWEA2lZhGIUTj
hDBsgxeyIZYGnDVgdztIdDmJj6WZLHZtfnevamG06FVfxNMzHqMtDl31hgdL
VGpiJCrceXUO3NYY5fMRymfMecNu6m/KYhe2J89sCR6PMBi0FTuhRW1SxAWm
Vy6DZYkhiXw4iAU5UwBTMqiFQQooYMUEd+rTh5zZ42FiT5Iln2crTG1Rna3Q
eFOn+7JW936OwoNcpTvJMteiRAcCOd1ezJNu9APWlK06WII05MMD7cVItnKo
jQpupYwZy5JaXVgfs+Q/d1r/noj+vZD/ezH/99zmXzPJv16E/34V9Hsy6PeL
0N8TEb+fJH897vmtyed9ge1cmMqsv/RLF/5jO/Z9e+6wPuWCKnJKiXRYEmzg
EsuYGwrp6ze2cRSCH050JgOmKHGbHmXYnXfJgj1sLzJowbtgyB0w5g7bSwyY
iV62kxj1kb/lLn3VWWzQRqzXXPS0HrtDh3nOTLRTl9MsR26UITeoMBo06JXy
lCwRUiIHimCDHlSiFQU0wEA9MrGkQunUJZtjA3ZNXSZN3abVx3SLmzQz61XT
a5Uz6pSy96gWNmvlH9DKPaiZf1i3+LhB5SmT9uuRFx7lX36W/3Bu//jMnntv
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
yeC1EmghH07jQOGM9RA0dypgCG3ITpHuumzXP+Yz/MDvxmP/vhHn81cdBkfd
Rh77jz0Pvv0i9u5Uxr3prHvTeXeni8amSu5Nb3v4ZuftqZJbk5nPl4/efFl0
4WGsQPM6RgJarvnuHXBu6HXY1mlR3GqYsVsrrkY5ME/WO1XGMUbcMohj7ssy
cGSqGdEklDCuGMJiw9R1zSP9T8dbb88jgVQIMMahUDYeQUP9YCCaCseyqVFM
SjKftZFBzmDRs5jUGmWF4y5OrYbah2R5FWxyHg3NYWCFbOo/vYeECBEiRIiQ
fynFbfY5B80z9xnlHDBM36ubtls9qUExrkY+pV6paK/Glkb1wlr1zcWyyZtF
ozdyQwIZXs40FxNyiw3jhY/UhI/MbKTyYrz6lyabHz1eHxos3pcaLGZrzCYo
T4VKT3iL3rHjDCjhF5QpA+qU84rkLlmsQxY9KoPuFoGKqRu20MHDRvzuBO0L
MWqX/OTGwpWeZljNNUc93+LzJNH2eZrd8xT7RyGmTxPcXhdFvMwOfRrrPOqu
ftGAPajP6tVhnFalHpal7JFEd0iQSvhQMguIWZ+bB7hTiH9uJwEVFJBGBZoH
sRGIAa9HsAmK8idvl4pCNIwkKCZZIHuQiiy5ucbg7WTg6nTU3PPI14+CXz3w
eXTLffSy/a2Ldjd67S6etOzYrXuqUa+5VHlPrlxDguR5X+7LQJG5OMmVbPlP
e3S+nbT62m779ZjV12ar1RS1OT/xaVf+AxPmdVX8kjLlnCL5AA+sZhIqmALN
IxZQCTkUQgou0LwNISjBDyVYg4QoFnQ5SGS60eDDqO/KkPtMk/XLTP0X0fqv
0m3ndvhNFLg/TXWYKvCbLvR/Ux0xWxM6ker+qjTqxZag+1Gmz9Lt7kfqjoZp
XPeSveEi0W/GPaXJaJbDt4ujRXxSgRicLkIKY4BeDNAE3JAWInruqsPFOz5j
z4LHnoVeued3+3HE+ETY41fRr+YzXi5smX17+NVi7cRc6dTynifzu29PFz+Y
rb49XXZ3tmLkZf71lzkXHsScuuV77Jr7wcueDX221V1mW0+aFbcabd6jvWm7
amCBjGeKpH2EiHkA29STqW1LU9Aji8kjHFGE8UfzyGQIQSAEhv6n6cEgKItA
LgwklIF541AIFY1g0yJZtBg2NZJBSeXQBJpXIiO5z8LskIlhozS3holUcyhV
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
hLDQUBYeSseDMCgEBSJxUgITT2eSS0XoTQrcXRL0f3oPCREiRIgQIf9SXKJ5
ph4MXYHpaWPSCgiHS6LRIBqVRKeRqIIPNIhOhWhkiIpDNBxCSUC+KvllvPrK
Lvufl6J/3Ni41uX5+VLA2mW/jxc9vvZ6fDni8v1k0PeTcd/aor4c8ntXYTeX
qjMZofw8WPGRv9yondglbVqPAnJSinREklTLImbiGzahhC0M6LAE3qlAP6lI
Oa9NG7HkXjbjDFpz+g0ZLXJImwal3YRxVIO8TxZpkoV3S0O75JAqSVIRb/0o
L4VJDKUSfWlEV8r6+N8/s/JAcRRiIyANIVH+uq5dr7+P8nAUoJMhBCDERspO
PY5+/yr901zu17dbv32sWXtX/GE1+91S6sJs7Pxs/MJc2txM4vOn4c8ehzy6
F3TvlvetK87XemyGTpp379dvq1Lbnye7J01u+0bJLX7czRaULepIoxLpqDzU
Ig0eEAMaRQh1PGgLE8ijr7fkxa0ngBD8MII7RnSEiWYkohYJUIUBHgiYocT9
8uigKfe6NX/MVnIyyvjt/k0rh1I/nM9Z7Yl9c9rn1UmXe3tNz1dqnGxUb69U
PpIs3pIucbZA5W6zxUyP+/zFwMX+qIXusPmTES+r3W6Hq151lTlvwus0oJ80
pO1Rxosk4CQuFMMEw5mALxOwJQNuqsixE4a37vs/nIybXcxffls2v1I0v1I6
t1I+t1r/eqX+5XLNy+XqF8t1j+a2jk5lXX4WN/gkrud+8Jk7AR0jPu03PFqv
ue27aF/fa1V1xrzkhHnGfoONO9RCyuT8C6V8c6Ud4/kWoSxjP6aOM1XOABNT
wdh/NebRSALNQzEIRf4c30HrF7UCtVs/zfszSQ9dlz2BjYNyZJIpHbankVzo
iAOV5MGAw9h4OBMPoZBCcDCWhsUz8SQmXsAhl/OEvXlChAgRIkTIf8cnSdw+
iGtkT9MwoiqqkUVEEDqVREYhHBb8L15PmcdI6yWQJRgBJclQj6vEVLHpx9P+
P8fTf0zmrV0N+nDR6+M1/3eXvdZ63b4PBf+6lvDrav6v/syvp2I/7HSfidGa
8JWbDFR84C592070qiHrgjJ+Tgk/JgnXMYnZZEIsuiEaI2xlkY6IYS0S+GEx
+JQ8+ZQ8dlgKPiaD7hMl7ZaAd8ki+1XwPYroDmmoVhKqXn9aC+ZwwTQ2GMck
BtOJfkzQngoakUENHJTGQC5KoqEQBQHJyPqUPIHmYcifJxgIIJBVmEDU02be
vOz19vXmT0ulnxcLv6yWfF3b/vld5ce3JR/fFbxdzl5ZzFheSJ+bTZx4EvHi
WeTk06jH94JuCjSv32Gg06K/1ezMHt0DJcrN+Up1SVKlQbx0Z0a0MTlKHU2V
I+WKg0V8sIwHFLMI2QxiAo0QRSYGY0QvlOiIEM0QQCB4CiRABFrPyQVBogsN
OK5JueomdctectxNYzre7d2x9PdnSuaa4qaP+E+0ut89anvrtE3vceOdlXLb
CySr0iQacqTbq9RvHDV81ev2ptdrcTBsqTf6dUvUi0qvB0k6w94yZ3UZbZrU
Fl36LgW8QBJJ5kMxHCiCBQUyIWcGaEwhFmXKXL7pfu9J1Ks32YsrAs3b8nqx
YHoh7/VSyfP50kdvSu7NZN2ZSht5mTj4OLznXtCFh5Hn74V0jQUcv+7eetW9
edBpZ69tdbdVSbtJ3lHDpN1aUTUqQVtkfXIlPLIkbDdyzYKZRr4MdTtcSgcX
VUKZogiVCeNUBPuTdEaCiAK7wzCIzoaZbBKHi3B4MJcD8zgIiwbTKSQaBkni
JCMqyZYKW1MgZyYcyMODOXgUCw+mwRF0LJKGJrMpySxyMh35p/eQECFChAgR
8i8lPEvWPZJv4cbQt6QpqZFFxRAmE6ZRSGRMIEggBoMIAqIwQEVAAgC4iuLP
UzQWT3h+Go7+cT/311Ld2su0uZs+r/qdF694f7rm93047Of1pJ/XC34N5nw/
Gb+233cx0+hNvM5zP/l7lmK3TLmXtOgXlMjnlPFWSWQ9DIJBSCUTgjFCGEbc
wgCbxZAmPrJXBG6TJ+8SI9VywN0i4A4RsFyUVCmNVEqC28SBrRJQqTgpmwcm
cYBNLDCaCQazAFcGaEKFVDFIFIboMET+43WCwv9HkZG/r2tBwobKcoOl6cSP
C6WfVsu+fqz+vlbzda36y1rN5w/b195vW3tf8vFt8duV3Pk3Ka+n4l+/ip96
sfHZo9Cxm563rrpf7rEZOm3Z22JybIfm0W2aTXnyFRtFc3zYURYUf33cTRmx
lyRZcSA7OuhBBzyogAMGWmKAEUrURQBlGJAiAUwSSCUBZBIRIwEgAMTy4XOG
9GE36bs+ihPRVlMZAa+KvJcPJE7kO97KNr211+ZOj2vvYds95VpFOVLx4Zwo
H1ZGjOjuEvnBgwbPupxnL3qvXgtbOBP8vNbjRZXf/QSDK96yXcaMVg1KkyK5
QgoukiZnSaAJPDCaBfnSAEeG4I8B/MyoHV2mN8Z8nrxMnJrLnVnMezWf8WIu
Y2I29d7L2LEXcTcmE0ZeJF95FnnhYXDXXd8LD6LO3g47OeJ5/LrnoSHnpn6n
7d12FWcti9uMNjdrx9aphG5T9C6Q8sgUc0nj28RxTQKY2m40RTOymAbGk0Xp
IgiFgSAYCRL8akBBDh+RkMMVtWgaJkw1PaqKDkVJnaygRJFTIIuLoXwuiU0n
0XGYj0E6ZMiOSnJmYQ5MzImKeNMRHxocxMACqHAoDYukYxFU+J/eQ0KECBEi
RMi/lOg8ed84CVtflr4FRVkLlZCG2RwSnQZT8D+aRwLQ9d42kIpAGwiEAm3m
coXJ+yshn58lfXu6+cdS7ceF/KnHkdcuOIxdcFq64fPlSvDP0ZQf1zZ/70r7
2ZPz+Uj0YobJdJjaYwfxW3rsqxq0fgWsX41yTpNyRAzayV6fI5dOIYShBE+U
4I8Tc+jEWjZYJwIelIcbJEhbOGCFCFAlBubzgM0cMJML5ooAmRwgmQnEM4nR
TCCcCYayAGcKoEcC5GBAAgMlqCQRKolDhli4wOj+CB4M4uj6M1tB0cgkEmGD
vjZjdCRg9U3mx8WST6tbv31q+PF519dPtd8+133/tPfrWsPnjzWfPlS9e1u0
uJi5uJC9OJf+emrT8yfhEw+CHo35j193H+6z6zlh2rpT82itxsFy1Z3Z8qVx
EhvtaMHGuKcWZqOA6PFJSgxIlgyK4hAPgTgwyIQBGolIIYHk9dNRAFvXPACB
ADIE5CtgA6bMK+b8u77qs1t831SGvshxn8hyvLlJdyhNvb/OoP+gQ91G3QAd
Wog1xdeGYquH2RhSwr05bTUaD7pspwbc5we837R7zDQGv9kZ+yDe7LK7/EUH
kZN61CYlcqkonCWyfmkbx4aimKCPQDtpgDkFMmYBpVvkzw/Y3b4f9uRVwtPp
5GevE5/OJI6/jL79Imb4WeTAg+ArT8KGnob03Q/qvuN3etT3xE3/o1dcDww6
7em3a+ixre22qeg0L2ozTt2rFVmtEFAq654l7pgq4pTCs4pmG/gxNF1p8iZk
UVWUI4NSWQhOITFFYCkVXMOUbuLGEZSFF8/aR8TEmW3swNC3oGkZUdS1cSUl
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
lXJctXJynUZKvXZGg056jUb8VuXYUsWYYnmB6fkliXls5HrF8jyj+K7BXEdv
tq0r08SarmtI0dDElRRRSVGYTYNo+PoJs0CSBUWDQS4MSZNANQT8p/eQECFC
hAgR8i8laatidI58YKKUozdXx5gsp4CICzSPBTOpf7fnCTSPSYY3bCCkGIis
brNc63D7di/p5/Leb4sND3vDUhzkXdXZnrrkaFt6kCm5q0zvy0nPH6cif43t
/jm889dA2Ydd4W+itCa8lG9o0Yc1acMGjCF9Wo8G+aQydkgWLeOCm7lAIgOI
JK/PG7FDAWMY0IIBGRgURQA2AjIQEh2FGBhMIUFsHPK34Zyq1rjaYjB61uxe
n8Voj8nlTr2+Ns0zzcptuxQP71DYu02utkiyMkesKImXGsGM82NEe9D97Cku
ZpijMW4gB7nZsh/cj1xdzP34tvTtct78bNLa25Kva7Wf1xq+fdnz7duhnz9O
//rZJfC9L5+aPnyoWlzIWZzPWl3KXppPn59Jev0qfuJx5JN7QeM3vW4MOF7p
se07Y9V+2Ghfg9b2EuWSLLn0OIlwH46nDcNCC9OWRuS4JHG6wJP/DHj5K1eX
BPwxPYhMgkAQlKOCh625Fx0khqxFH8dYze2IXTmevtge/6TU8Ha5aW+JXvtW
tTMNekdKNGoz5AsSJLPixBLD2HF+9Lwo0ZZKzXu9di+ue01f95+7GDzfFva6
wXei2OV6qHKfI6/HTqRNl1Ilh+aJo+kicBQTCmXA7hSiNU40JINqZFAOAyVw
iItCBtrU0lqVQ6dND503bRsw7xi0ODVo2T5oe/SCbXOPzd5ui8azZjvP2pS3
GRYe0s5p1sraq5HRqJlYpxxdLR9WJutfIOWWwXdN41vHcU1CmVruNEVLsk04
L6pCPr5OJb1RPWefXmK9aspOzcxG7cwG7bxdukW7DTfXaafXaWTv0M3arp9Y
qh6ZKxOeKROSLhuWKh0cK+nqL2LlzDC3oRsYUTQ1cAV5TJxLEmHATIEwIxBO
ApH1gXvrk/dwUHiaJ0SIECFChPx3ksuUY3LkAzaJO3pzDM1pCoqohCjK56w3
RNEw6K/2PCYOE4jEVG3O2zq7L5fCfrzY8nOu8dtCw/TdjSd2WGxNUmnYql6V
KxfnxzpXY/S11//35eTfD3f9enjg11DFtxMJ73Y4zcZrP/eWf+4re9tW5JoN
Z9CKfVqLekQG2c6HcrhALIsQSib640Q3MmCBEnVgQB4GxdajyiAWCrFwmAZD
alJoVbLczTaTO92W9/qtHl2yeXLF5sEli5s9hkOntC+c0Og6qtZ5UPXYLqWm
Svk922RqC8VLUnk5saz0cGaUNy3AmeJpQ7Y3wJwsaDdvhQgcb+1dxYfVsrmZ
1NWl3I/vytfe13xZq/v25eD3b23fv7Z+/9by9cu+z2uNnz7WrX2oer9a8n61
9u1i4Zup+KnnMZOPw+6P+d265DTc59h/zv5Um2nLPv2GCtWteQpZSZIbg7i+
TkxbQ7KeAqwiCksw1jVPIKvU/3tp+6c9DyLDAAkEeQjQaM697CF32UX2boj6
yv7kjyfzlw/ETVXYPdhmPlyqc6neaKjR9HS1zoFi9apsufIc6bIciaoCicYC
yaEjBuNnLZ8POsxd85w/H7B6PmlmZ8DDJMOREPkhF16fHbdNj7pDESmRRjLF
kQQeKYwBetFAWzJgjAGqGCCDQuIIxMNAOglSV8Y3F8k1tukd7DI52GV4qFu/
5bzZwS7L3adNdp40rGs3qmo1Lj2sXbBPI2evRupO1U01ihsrFSK3ygUWSnvl
iDsmc61j2OZhTH1furYrzWuzRHy9cvpezbxDelvbzMtaTFMbVTMa1bP3aOY1
aRXv1yvaZ5izV6dov0FZk1nBLuOsOp2UGs2MKq20rZqb8tVispS8o/nOgVxH
L66pNV3HAFdVw2SkYXH+n0cZFIiKrpseuj5gGRCY3j+9h4QIESJEiJB/Kclb
lTblKYbESzr5cEwtqGrqqLQELMqBOTT4z4Th9atGukDzCIREbe7Ho14/n+T/
Wtz7e/XI16Udi6/SXz+JuHzebv92ldpihcochfFDNt/6/X9eT/w9Xvn78Z5f
w5XfW2LWdrsvbDaY9JF76Cp+y5pz1ZJz0YR1Qglv4ILbREnFXDCVRgjH10/z
XHGCjUDzEEBmvd8e4qDr8zRYKGijQ+us037UY/m43+7pVcfHVx0eX7N/NmL7
+Lrlgytmo0PG13oNLnfr953SPndMo2OfyrFGxaYqqfpisapsXnEyOzmMsdGf
FuRGcbXGnG3xK8MBqyv571ZKPrzdujCXNTudvLSQu7SU/+F95bcv+75/Pbj+
FuNn148fZ3/+6Pry5fDntd1r77e/f7djeaFg7nX89GTM8yeh92/7jl51vdRn
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
g8Ml09N18/Mt27Mdh/N9x/M9h5Ntq7Ntc9Ka0fG6wdG60eGK4f6ywfa0/vKI
xuKwyli3fH+HTHeTWFOVQPkz7vxstsxUpqQ4urAgWncXzKNHTFPzDnsHD7d3
fDa2PGYX7D591n/boNLwTmNnN/DyMuX7t5d//dX+40fDz59NP3+2/LhruPtW
enWRckQK2t3x2lhzWl6wnpkyGxvS7+vTbmlXqaqRLS6RyC8UTU7lD4/g9PFl
drCj1SKiFSXgYjxQdkYwA/X9cjLs/bYqIMT/tvKAcBAIAb5/wgVIRfVQGNlr
wTpowDLjIriRrHlc5X3c4kXq8F1rsljvtjkY9jyY9t2a9JgbNBvv1ByuJs42
aG9+MNpu0N+u1TtqM92vtDp45beVZboYpPLZQrxTEf9WEFbGCn7OAkljg4Qz
gIIZof40QFtyzIM9UINSSUGoJKEPeMAAJjCQBgzCgu8fD7k/8/dP+ETC7tt6
YCoqKIiKnhEsKAZXIKLVDbAaptTa5ng1I2olXYycBlpMCckjDmflgzGwQxnY
QZYhbIkNkumNsin1snFVMgnVsgnVEjmNSqXtmlVdRrV9Du/77Zu6bSua9Yob
ieXN2uXvNcreaxXWqBbVqz+rU39Wq1HUoJ/+WvlxmVLEExmvdLGgTInAVBGH
UC5LX3YjZ4b7L62Pk1dDyyighIThnOxQZnowHfX9po7/6TFEQUFBQUHxX8ov
QcQlkFvPCq+sgREXg3OxQpjwIDwGiIGBkP93FRkCDEBBgYAHDx6rsl7laXz9
6Px74eGvBb9fK/5/bwX+te51N+9yt+T217bvr3W/v7eCfm+F/1oI+f0l8K8P
jncN5lfF2gehUluegtsPRZa9eMcd2ftNmJvlsdWi8Kcc4FhaQDCeygtHZYOi
0kM8ICKpJJFATigVkR8x3008XTUmrZqdb1pe7dpe7Dqd7TmdHzhfHrid7zmf
7TmcbVte7JidbZudbJoer5uQVgx3FvTXvqhN9CkOdsn1tkq31ArXlAsUPePK
f8KWlc4UF0UbGoR3d8U0t2ntHfhv7wRu7frPLzv2DxtU1snnFEgOjdheXMVf
Xud+u6v+8Vfjz59tP//quPtR9+0m//oy4Yj0cGfHa3PTdXXZbmHeemLceHBA
t/uj+rt3Cq8rZR4/EYiI4wiLYvfxY7S1pVEnouQkYCK8UA4mMBMNmBoBQoLv
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
SmEjRXTCi7XfgqHLgK5NC1cvj3rKB05kBwYzULnTAMzRVJpIKjk0iO1f/yfO
g/Nkyehi0/YbyenuxOOvc/8f50Hfzh7dnkXd3Rb9/Fb64+uzH9/K/vpW+ov8
+jrr+3nU5Z79+bbp/pLe2rTmwrjq1GfC+CfFkR75zx+kOuqF370WqCzmKspn
zclgiomkDQ2jn5iy2j8M2iXFHBynHp8V7p9kLawGNdfojg7ZHJ9GXl9kfP/2
7Oddxffvxd9uC26vMi/PYs+OQo/2/Ei73htrDnOzVlNjxiOftfv6NFo7CDUN
ck+eC8emc4XEsHoE0Ns647V10RJiEGUFlKsrc0oKb262UNZj/ux0vsdJXKlx
nAlhbNGBrKFeTL62tO5meHtdrIUSoliHZtCCZUCPedZVbNxdZLfQcr/S/aDJ
77A18Gr56eliPGnUe6fLdrfX7Wwq6mwofKfaZS3fbDVef8KdMGgr2m3E3aHG
+E4CV8aJzGOCpdCD4xkgkXigH+aBLYLKGEalDaVSJmc86L+fvwDSgUHUYCAa
DMBCQSgoGPHvSds/2/pBwUAIGEC+wkD3iQ4KBsHud/z7cx9yX1Dy7waU/E8q
KBRANKbLqZcpaCHmt6vntavmdxJfdml2zUeMbr74vJK1sPtm+bBxfuf19mHT
yl7j/G7N/HZV32RC52jQ57mk4fmMsZWC/oXMmj6X2nbzwhrV+GKh+BfCuZWE
3GrNqKcijzKEg9PF/WLFnIL5LTy59S2YldWx0vIoEVE4Pw+Enfl+Qvw/PYYo
KCgoKCj+S1m7M+qZ0BKUUZJicEEuKDs9mO7++Yv72TpqCIAZCmSFkAvACQVy
kAtGvj4ol6X9+kTtx0LA77Pk30fh902889Rf50m/LlN/Xzz++zT1907Ir1m3
n+M2P0fMr+rVj8sUT2uI+y+k1x6LTIXzDLuz9joytujhGoiYQnFYEi8ohAXg
jAcYoAAqCCpxJIAD+q/mUpnzLZOrXce7M9+7M7/vp4/uzkNvTx5dHYdcX6R8
u3p6d1Pw/Trv59fi33dvf17nfTtPuD70ONu1OVwz3pjWWRgjLo6qzA0SJvsV
Rnvkupskmt8I1b3iLX3G8TSbJTmBISAQ19Kuvrnvt3kQSjrLOL4s3j9+0l1v
VpgmPjbhcHwScXGW9pWcHm+ffidnvOvMq/OE85Oo8+Mw0p7Xzqbbxv2kreXM
pMnosE5Xj2pTm0J1g+zTYpHkXN7QeDafYMb7mKeHsrWlS00TKCkWe1UqVvpS
9NVL8dIiiZcFws9yBPIy+HMSedOjuGL8WUJcGXytcHbaqAA1dLsF0wc9hs/m
bJ+N2Od85ZeSDBdSdLdfudzMPSYNPjro9Tzo9djrdjufSrwYSdh547X73GU+
UqvHQKCDyPJehbGeQF8tTl3Ch8hmhsbSAMIwVF6oB/YIKjP4A23IfcaTAT8Q
hty38ujB5J/v/VYqGAg540FB93OyQHKQQ0HIqe9+V2p6OJARCWJGA1kwIFYs
mBULYsOB6NBAHBKEhoOQ93sqkj+JioYO4hrGXdRKzG9VzW0j5LUTnn9UbRp3
ndkrntqt+DQfPbtXuXzUNr9btbb3dnqzum004NNcQu9s6ocvkQML2SPL+TOb
FaOr+U3DPi/qNXIqFZ5UEdJeimc8ly6sNU0vVwxM4/KJ5/NPFHUJFbL24TOx
5yDq4OSUUBKSCAFeCCcrmJmWEvMoKCgoKCj+mbkjg74xnSoBIyMGF+KAsNCC
GbAgdhRICAmURAJk4AApGEASCpCGAkRh9yUAozLHQ2bt+P7qsft9nvjrLPY3
Od1dZv66zvp9nf37IvMXKebXbsjvBfcf/aa3H3Qvm9TPqwlnVYT9ZzJracJT
QRzDPmz9Hiwf7OnfGdMUyCFiecHejEArHJUGEiCLArCDH0iywxeHtI+3zK8P
nX+cB/64CLm7iLo7D7859j879Do+8D4lhVyfJ92cx36/yfnr++uft6VfT+Ov
9j1OduyPtix2FnTXJlXXJ1VXx1TmPyt96ZHpb5PorBdprOKvKOLKz2VLT2YK
8MPkPxdZ3XJb3vbfOow8PMtdmYmuzFIse6M5s+B2chx5fpZ8c5V+dZlydX8O
WvL1efzFWfTlSfDBnu/mmvPGusPKks34mF5fv2ZXr3pzu2L1O9mCMtGUPP7Q
BDavIEZLe2xoJNur19LvmxRamxWa3sm/fyfXVC/7rkam/rVUTZlk+XPR8kKx
4hyhp4k8qSFscf6soQ70HvrYp/r4DkOmNiLdB2X6PjWOYTvxITexjRyTkw7f
7XqHjVrLw09+Bx+9j3sjT7qDFzMNpyN0xtwlegzZOzSYWrQYalQZigQxBfyI
LA5YAgMoDHsf82wRDwyhDzQgACUIlSSEihdCxQIB0kJAGMh9gw4OgWIgYDYE
QBADkqYBERnB6mz3pckG0WABa7KDNdghmlwQNR6IsiBEVgAqwgXhZAQz4iA4
NAgOAfAIIKLzJF591H3Rrlo3ZFEzZF0zaDG0lrJ13rl4WDOx9WJ4vXB848XY
elHLWEj7RGxVn1Nlj21dv1vbRHj3TMro6rPR1eeDS4/f9Do9eatY+Fa16K1a
QYV8Tr5M+nOVpGK5R+kc3jGcj5Ik3MJEbf35TN04NQzwSipIOTmkmBCUiw3C
Sgf5T48hCgoKCgqK/1L65rS6ungVRYyEEEyQFSqGByvSgNWpQdpYoC4KoIcC
aCKAKjAgAQZUgAPlYEAZBFAYRpUuRvsjT+vvvRhywPt9kfXrMvf3Vfbv84zf
B/G/dkJ+bfr/WnH90WN4Wa50WUM4K1c4KVPYK5BZjuKfCuYcCGBvt2NotKKt
0MfmyiMieMAOdAA9LEAWAeRDgtD/+pe+Mv5gyYi0bnF56PTt1O/nZeyP66Sv
pw8vD92Ptq23V83WVy13d5yP9z3PDwNuzuK/nWfcHEdfkQIvDj1Ot6wPV4y3
53S257S2p9RXhgmz/YpD7VJdDWLvXwtUlXA/e8qemsTo60sdGs4yPmu+tOGx
vvtoYzuy65VpVYVBa7/12qo36TD04jTx6jL95ir18iKBHPBuzuMuTsJPSIFH
B4F7W25bGy5rK45TU6aDn3W7e9VaPihXN8oVvhJLzeN9GMPi5EOXlM779r1c
5wfl3h7ip17V3m5i10fVD61KXe3KnS0K7e8U2uoUGiula4rFy/NFnqfz50Tz
JvuzBtvig3XQb/Tpm5Xw9SLYVkl8tzpLnz7H9CPZlQzdhUzd9Te2O+3um/Wu
G2/cVp6bzcTpfPaQ7TVh7zdka9dkqlfCv1GieSqIymSHJjKBI+mognAPvNBU
1ogHetD7VXn3Z5xBgFyQ++laGBCIAAE4kSBFPMSMBeQpBPcTR/iLIfzFEX4S
cG8RmK8YwkcC7iUBdxGDOQhBbSRhlsooQ2WkmixMVgQqwAFhvd/2GaRApE57
JVPWqV3epfN20Or9uOvo+uOJ3WfLpNqd09aV45aBpcyOybD2ifAnjfpP3usX
thjkNKhl1BJyGrSreuwbB32bh326x/zLOixfNmsVNWrnvSXkvZbLKJKMfCIY
kSMU+ljYJ4Y7MFbUNUzEKUjIyoNbx4RWRQ2tJI+UEoXz/Hkb/+kxREFBQUFB
8V/KwJhGVRktK4WQ5YHqMkNsmSDOTBA3epAjDmCLBTpggVZogCECYIwC6CIB
aggAEUlFgAM10MBaDZb/6bT7dZjw+zj991nGb1Ly7724X8sBf404/pp1+GvJ
+bZD57JS8bRcaS9PfDtLZDVecNKPbciH5YMDfYMxTYUW9okSMloY6s4M1KMG
SKIAnPezhBDA//vA1ZrlaN30YN3qiuTy9dz37iL67jL24tCTtGm1tWw0M6k1
Nq4+O6O3umi0uWJ8vON0uu97eRx4exp/dRR+ceB2Qk56S0YHs5q7U6obX9Tm
BpVHPsh0vxdvfiP4poz/RSFXWgpTSBCtmxu2vlllbdt9fdd/fMClMkejsce2
f8SWdBBysB90fhp/TY55FymX57HnJ5GX92fgxpyQgg73fA72fLY37g/CmJ4x
Hx8z+jSg1fqRHPOkC0qFk3N5AmNZMvIEWjtV+vs1hwZ1Rkd0hoe0yTXYr/Gp
W+3zJ81PXWq9HcTeTtXOJsWWt/L15TJVz8UKknkeh7InejIGmlDHa2CbNWkb
xKnrhTDtCvhP6kwj1vyDTiLTMaqzL8ymnuhNpqlPpel+DiL2uUu36nG2a7N0
qDO0KOFfi2MLBdGPeZDxbNBweuBD3L98sPcztsYwKl0YFQFCJQEF8EKANEAg
DgiQwgAt6EGhgtAkKWSaDDxDCZWqjEpURCfKoGJF4XGi8BhhaLQ0PFQCHiAC
8xSF+aqgPPQw9voYCw2UthJCUQwmyg3hZQObWNPnvpEt6dSu7jdqGLUYWU3d
Om/bIAc8Uv3WWcfIRuH78aC8VoPseo2UavmEKoXUauXct6ppb5Qz36o+qVd9
2qj9ok2/vNO0rt+jZcSv9qPps/caT94qp5VIRj0RiMgQCEoUco9k94zm8YgU
cQ4Wtnbn1jeiVVPDKCggJUVhAtwwdgZKzKOgoKCgoPhnhkY0KkooTRGEsyA8
lA8RxwtP4oJFM4JD8VThdIAAWoAnDdCVGuiAAVmjAWZIKnLe00cC1BFAMxrQ
Z0ee//lo99fSo18b4b+2In4t+P015nDXbHBVQvjaYXDbpnmUK70VK7ibIbIc
wTXty/rZge6jNb7JgLpKF/tMGZUgAnViAKqjAYIwAP39eVsgDBz8//0//yfQ
i+t404y0ZXtNcvt26vfjMvH6OPBkx3ZnWX9hWnOgX7mrW66vT2FwQHl0iLg4
q7O1Yn6863FzmvjtIvX2NOx81+l03fx0SetwTmODHAgHlIY/SPe3S3U2iNSU
8Rblsz1OYQ4Lpneww0TH8s6u2s2vONfkE+uq9FoHLKfnPE6Ook8Oo85P4i7P
E6/u52oTTo7Dzo7CTo8ijw8CDvd893a8t9ZdlxdspqbMR8cM+sgxr1P5TaNM
QZlwQhb302KR7l7iyIjWly/6szNmk1NG46N6E+MGX8b0R4f0Rke0x4f1B+/D
nnp/t2Zfp0ZnE7G+Qq4iX/R5Kn9mKGukE62fPjZXA9umRvteha5VEd+nRNdB
oPugyzbiLjIcofj5ofxnf+l+X8l2G6FGQ856NaY3sjS10tg3EpgiIVQWFzye
CxbBBnmIpyJnPDc0wAIJMEJQacEBclAgHxRIBwDIYoAP+WH5cqhiIqpUF/NS
nXylLtGhLlBBFSghnysgn8oic6WRufKox0R0vCwyRgoeLg0PI6ICdTAeumhH
PYyFOtKAgCBIIuTFYV4BrEWNhNIurdrPhu2TdnP7+aSbzzsXPUukusHV7PoR
zyctBmn1yklVSknVqjkNWqnVqkmvlRLKFRNeKydXKaW8lkupks17r9Y0EjC6
WvBpOrmq26GwUaWoWjWjUC4skz8sRdg7itsjiss9XMDWn8fEkUXPEK+pTq2o
hJYUhwvyQtkYKTGPgoKCgoLin2loYizk0eHS2DQxdDYfvEgIUSWFqlGifqtC
nc8PTmQGRtEDQ+gAfjRAdxzQiRrkgAFaIan0EFSaSIALE2TCW/B/Go1+9tr9
GHH82WfxrUXvplrtNFPqMFH0KF/qsEBqPYpn1p1l1J6+35Gu3QLXaEb9WhOV
KQENYgVa46kIaIA4FihADeLAgLhoIDz0ENSDf4X4ch1umpI27S9Izrenft8v
oi5JnocbpkvTGgOfFN42SL56LVJaIVJZJ/62RbqrW/XLqNrhhu31aezXy+xv
Z6nXB34XOzanK7oHU8S1EcLCoNKXLrn+FvH2WqG3pbzPn3Kmp7AHBeLtbdAG
Oui6ZvW+HsPH4eJ9Q/YfB6y3toOO/2S8i5PYi9OEi5PEM3LqOwo9PQo+IQXv
bfnsbvnsbHptrDnMz5t/mTDuH9Tt6FF91ypfVS/9uIj/WblIb7/q1LTBzKzJ
3Lz58rLN4qLF8qLFwqz53KzZ8rzF0pzpwozp4qzl+KjB6KDBUJ9uT6dmU51S
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
QQM10CA5OECLGhQshH4lj21VxfUZ0feZ0nXo0zRrU9dqUD+XR6aJQXPUMLUB
LJ05gh+eC7UUCDRk81WkcL9M5smLYs8IYU0OYYsJZA7zZPC2wYcHsMxNm+5s
2B1uO57uu53sOm2tmk6Ma3R1K9Y1SBS84AsPJ8c8jAmRRkuCmhkNVFfH5r3k
GRpUOz+K/nlb+v086frA/XzT6mTVdPMLce6T8linXHe9eH2JwItM9pQopiBv
OnszrI4yUlIAqipBbanCmJAo+fmL9di449ZW0DEp+vQo7vQo4uw48vQw+GjP
72DbY2/LbWPFcXHWenHObm7KcmLU5FOfdnMr8V0T4XWtbFahUPFrqS/TJnOL
1kvLdtubLqT9wLPz1NOzx5cXTy8vci8v8i7OC85OM48Pw44OQvZ3/NfXXJYW
7BZmrae/mA7363a1qDZUyL95LlaSzp8bwZHowxRiiffSxrjIITLkMZVKuEop
bLUEtkyc+pkguoAXUciNfMqJzmJHZ3Gho5igj2jBj+iAntQABzTAjhzw0AAD
FBU5gRPhACUk4JkGfjWM57BM5qheabdQcqdAbDtTZDNBYDmIZ8aXf8yW/ZMm
ftCQYViPvl+DbtCQ6bMNZ4sabaM89r0aTa0atpiAyZdHpUmhYkRh4bLIQHF4
oAzSUxphLwJ1UEKnpgi8fEeo/KTbOG7aMeM2vB45s5s9upnROuVWM2BW1mOc
+14tqkQ2skjWM1XMwJ9Vw4VB3oyGaEuv6cqs58tiEcHqmMjhlc0dXSSaWCH9
qk33TZfVsyaT0hajJzWE9JcymYUKoQkigZFCfuFCfqHCLgG8Zs5M+lYMGgY0
qkS0jCiCh5XSzaOgoKCgoPhnOfzYSil8qzLdoCXbQqTE4Vut80Gzq2Gz0yaN
1QSJfkuOGnncSwnMcwnqHEFsMicygRUewQh9SAvyxwM9aUAWaKA2EqCKAkgh
gHwQgBASoEYLtmEGOzKDnVmhruxQGyawMR6YZIDvKRQdrZcZqJTsqRBrKxV9
Vyhcnctf/kSgKIM3P5H7cQxnciRbQhhrsA/jQy+Goc+aG6vWuxs2+1s2hzuu
a0vGI8OqHz/Kv2uQfJbPFRlCZ2mIeWjJ56HNIsKCMNajyyrk//RJ7WTf79tF
5veLtJtD97NNc9KS3uYXjblPKiPtsh9qxasLeQpT2RJCGPxccJa6KDVZmCQv
lI0OjEcD2JiggWEiH/uMFxbcDnZDjg6iLk/iz49ij/aDTg+DTg4CDrZcd9ac
l+asx4aNp8ethweMP3SqtbYS6+oUnxdLPn0h2vVJe27ZZnHFen3D/vDA9+wk
5uam7Oq6/Oa67Pbm9e1N9dVV2cVF7tlp6jEp6mDv4e62++aa4/KizcK05Zch
o/6Pmi01Cg2lMq/zRJ8l8KYGMke7MgRZ4O2UUWbisCBx5DNpbIkYOpcHkcMN
T+aAJjLD0lkQCYzQGCZIBCvUFw/0ogFaIgEGCCpNOIAAA8jCAeJQIB+YKlmF
ZjWCn/RC5qJTlRzdjyvlSSXSOxmim1F8i95c406cfSr4QTXaES26IS36LwbM
k6ZsA0YsnUSadnXaRgKujoApJ6BfKKCyJeFpUohYaUSwBCJAAu4rCXMTgzvJ
IxMiuIrrlF736tcNG74fMxtaj57eyxvfym6b9qzqNy76oPu0WTOqWCYgR9Q+
mk/LiYWgxywkR8MljuKRRAkqYAiWtMYPmZ1S2f3y+COLhAsblOt6bN4N+tZ9
cn5SS8iskI1/JuYbxe0RyOEbzecdIegZImzlwWrlzmLjzKSmjhEXgfOyUR7B
oKCgoKCg+GdForg6Gfo+A84pD9G1OKXd51qHbwxP263OW2y3MnWGrYXfKzOW
S+NeimJy+VEZ3Kh0XlQSDzKCDR5MD/ajA9tiAMb3h5QB5BFAcQSIBw6khwJx
EBAWAsTC7g/PYkSDw51YJ1sU57tVxpoVh5rkBpvl+xpkOiolagqEKvIFX78Q
Kc0XKcjmz8viy07jiYtkCwpg/NCpsr1mvbVuu7dlubthsb5kNjGu0dur+K5e
4lWJYHoiq6ct3lqDTl0EZaFFn5rO87pOfGxU73Q/gBzzflxkfDv2P980Iy3p
7kxqLfarDDZJt7wSKs/iyI1lifGnc7fEGBARBFGoMBuEnRbMgINg4WAMEmRk
wVb3Tndt1etg59HJQdQpKYq0H3y4G0Da8T/YcN9YcpydMB8ZNPrcb/Dhg2ZT
k2pNjcKLl5IZOUJVdYqzC2aLq3ZrG47bO+4nJzFXl7k/fjTd/Wi9uXn19fb1
9VXJ1WXx+Wnq+cnjs+O0o6Ow/V3frQ3ntRW7pTmruQmz8c/6PS1qrW/kG4ol
SzIFsyM4E32ZQ+1pPXQwFgoIXVGoHT80RgCexgm9n5xlhYUyQyOZoSH0QH96
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
0t5KaGxQqK+Tq6iQeFYk8rRAICmNK7dAZGHOdHPN5vjQ9/oi7fvX0suztP1d
7/l5vcEhQl+fYl2taGOzRM8npYkp7fl5k4Nd19uLpLuvL3/eFn09DrjYdiQt
GW180ZkfUBttk2stEy57zJkdyRztReeijzFRhhPFoKLsEBYcGI8mBzwQGg5C
wcAoOBh739MD4HGQgEDR6teaPZ36A916gz3k0u/9oPP+nUpluWzpS+m8J6Ix
cdw+fiz2DnSPs0QWVy3XNpz3DwMvLjK/fn1zcV1yfJR2sB+6uxe8sua+uOgw
M2czOWu1su6+tuG+teVxchRzeZF7dhK7v+WxuWK3PGM+9pn8hTS624ltb5Vq
iiWLc4Vz4ngSHrGFeTJ5W9DYaWIMFRDKglAJFjAfPZgVB2LCgOgRIDro/RQ5
+YoGAZAgABQMgIEAcDAQAqKihgKy7Nh/Nqtftmrf9Oh9mzD7Om3xbdLyssvw
rFJrP1ZmxpBrwZBn2ZJv1ZJ/1YZvwZRzQoVhwYht2Y531pZ3WJOpX5muV5X2
kwFrvylrhwFDvSa+nIh5oUmdTcQkK6OiCagAabiHODRQH/eiSPrVR92X3dpv
BvSbxm2ap5zejVnXDplV9BrlNqknvSE8KpRyTRW0ieA2D+TUdWaT06SV4kcQ
OGAqbFB+PISJDmrqzRb0Qjz+jVxGg1JNn2Vtv82rTuPKVqNnVao5pfKJzyXD
skUiMiSCE0RdgnksvVksPZiMLOmIGhhZeaSYMCXmUVBQUFBQ/LO3BIZ2Xc5u
Y6HhANmJOKkuO952S4FeH+kPnuK9/rJj0QaziS5T8XZfYi37PJXqVVleydLm
ilInydLECKOD2aFebBB7OrAxDVADQ6WCBkqggEIoMCOAykIN/+Wj2tKIzvKk
4fa8yeGS+ema7eGy1fa80cqU/sK03syE/uigbn+fVne3Wls7sbFR+U2dXFGZ
eGGRSHYeX0om7/CI3tamHenA8+os5u5r6dfrZxcncdub9uvLxrNftIf6lYZH
1MbGtebmDHY2nS5P4+6+lfz8Vvrj+un1od/RqsXenMH6iM50l/LnRun3LwSL
U9hTHzGGOuGc9dB68nBFQagAI5gRA8YhwH8yHhAJA5ELBQdhkBAEFASHAoSF
MI6OXHFRIrmPJV8WyJQ+kyp8IpGeKhwdzhPgy2ZnQ6+rRa2hin1RLLO6bbuy
7nx0En11/eL2tub4+PHmduDyiuf8stvwF8uefv2efu2+Qf2RKfPJefutTa9j
UujVZc7leeb+bsD6qv38jPnwZ4O+j5ofW9VaGwk15bIvskWz4vgTgtmCPRi9
bGhtdahNiChVCZgMJ0SMBcyFBzOgQeR3joKCEBAQFASE/bvAQDgIgACDIACA
CBNsNEvyd6/+7YDJ10GTuzHTH7O238esrj+Yn5bqrriKzBsJrpiLbbnKbrpI
7HhJb9iLrZjzL1vyzplyLNrzz5jzjBuyD+owDRqw9ugwfjRk7LRkfqNJ81IV
m0fEpKmgYxSRQTIIL0GouyQsM16g5qPBy4+6rz/ptk3Ydcw4tE7ZNI5ZV30y
z2vVjXgp4ZvL75bGbxvFbRPGZ+rHSzRnFpTFCQmi5IUxkoI4FW1G5wSeqHKp
9AZCYbte+7jnh5mIyj7bwiat3FpixmvFhCLJuELpkEyJgAQR1xB+az9WK28m
fStaVV1qeQWkqBD8Pz2GKCgoKCgo/ku9IzK90+VqMxP4FCbdFSpWqcFQrET3
xpr/lS1/pbNgnZNIt6/aXLrDUpbraJBBqx53JYE2XxKXJUadyI+K5IR7s0Dt
6ECmOKA2FqiKBcpiQbxgKiVO+PsymbUveoujepsLZodLZucbNuebNqdbdofr
1lvLJhvL5ktzpjPTJl/GjQcHdT92aza2EN82Kb6ulX32UuRpkXB6Lk9jq8rm
us32hv3F8cOvN0+/XhfcXGZdnsafHgYebDqvL5isLJovLpisr1qQDnyvL1K/
3jz5dpXx9TTiYseJtGy2NaGzPKAx+UFxsF6yPo/3eSxrki/tQ2tqW3WUBjkv
cUM48WBaJAhzn/FASCi5gOQrgpz0oEA0nJz9IFAgAAkHMdLCxISwagRaPU06
Q116XQ1aFQWslChakBfBygjh50VUvlHe2HNYXnc+OU+/ua28uCrbP0xaWnYe
n7D++EmvtplY0UAsrpSvfEto7tEcnDRfXXc5PAi5OH9yfpZ1sPtwbdl+dsbi
y6hRf6/mxzb1lkblmgq5gizhtFiehFD2IC9GdxtaKz1qc02sriJSjh8qxgbh
ogUzoshvHoyFgVEQIAJ8H+3gf4oc9uBgIBQAsFWkuXiv8rVb9+uI2fcpy29D
lnfjTneTbrfdjqfFBks2YpvOilsuhF1/5f0w4kmi4Wm03rabwpIB76Ih15I1
76Id37Q516gey5A2U686fZ8x8wdrllpyzFPC5Moj05TQsXLIIFGoBy/ERRAS
5cJY06xW8VH7VY9Ww4hx57QtOem9HbWsH7V70qIVWSIa9kLYN0fQIYHbNorX
JJBX05lDxZRFTptB2YBZ347LMUrQM0covlohqU6+oN3ow2xi10JK7aDns1aj
jGpCTg0xrZyc9BSDssW9EwXdI4VsAtj1Hem1zGk0DfBKyhhREcR/egxRUFBQ
UFD8l2pRZmy2Fmr2EGsMEC5x50/VZkxSok3UYUqw4Mhx5n/mwtfwSHYo3mA+
1X4qwqxVj/e1HL5YmjpPEJUhjIzkQQRwwVxYIFYMID2a+wVj0kigPB5Ukiq8
OqG7Mq63MWdCWrc527Q+37Y737Y927I72XHc27TbWrPbWLVbXbJemLeenDDr
69Pp7NFs6VKrbVIsKhMrqpQpq5LMKhAcnzDZ2bQ53ne5OAm6vkj4epP/43vl
t5uSm4vHZwcBpweeh9vOe1t2p0eBt1fpt2fR18ePLvZdTtas9ueMNsZ15vuI
I82yXRUi5Sns2SGMEc40HvoYMwUEgQ8qQA9mwoBxcPB9Hw/6J+ZByC+AcCgQ
BgHBoH86ewgwEn7/gAAcct80Q0D/t8gfQkDuu38wMEhAAN38UWv7wGVr2/Pi
Ku/mtubkNG9zJ2hy1qanX7+mgZD7QiwyidfvEbubF3tCunhTl9bCqt3erv8R
KeqIFH6w672x6jg3azn5xbi/T7OzXbWuWqnkueSLfPHMZL6EcM4wP2ZvR1oH
E2oLbYweAUkQgUlwQPkZIKw4MB3qz/uH3Oe6f9f/ZjwgkBoKyPPl/J8hnctu
/e9jZt8nLG77bb5/9rwb873psD95qr3mKLnzSHXTU+EgUPEyx+I61/o01mzf
T3fXi7DlILZqzr1ozj2lyzqkQv9Zlf4TkbZbla6FSFuriC1TwhYooh4ropLk
EOFisIeScHcRqKs8srBAtLpFtaxT/VWvRu2gQfMXm/oR85rPJkUfNTMbCAnV
it45QrZxbObhTAaBzMZBnFZh/OZBPCYPOayjuQLyJcNeKcZWyac3KJX32bdM
J76fjKwZ9i5sNUyuUkp4LR/7Sj7kmZR/lohnoqBrlIBdIJeRC7OWOZ2qLo2y
BrWEJPI/PYYoKCgoKCj+S7Xqcze7ib32EX7pypNmSO+lQu2qSO2pRfPIljXB
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
88L+XuL2VtSaIJC/6D03zZgYsR/so3d3Up89Nat5ZPywSK8gTz2bq5AaL5MQ
QYzwk/B3E/OwQ9sYixqrw7RkACUJgPjP/sg/MQ/ys4OM+LWFAf3jD5o+5tOw
/f8LfL+Oe38b8/0+FfJtIuTwqfvmfdpmNZV/zXTcV3U2VH2GrTTNVFwO01ny
1tq8YLOX6vcpK/A4J2A/zU0YarjooTTjKj/tJjvhIvvWUbqHhm+lileT0eVW
mCILdB4FfZUsepmMiDaCn9eGeWsAOVzVqharijZaeZdN05D7sxGP5lFm/RCr
+o3vg26nhqHg+13s1Er9q7UWN5rtbjy1y66nFbY6F75wrB0MaxlPaJ3its9l
977PaxiJLul0K+tyudlMS/8RCx8Zpz8kc4pJMXlakVkaIVwNdqyCe5isE5to
7YwjmyP1DcBqHggEAoFAv7f0Mn6yJbC73LbiqsHVSIWLLBkXa3GyJkqVCNdT
xXDC1B6nGlRFaXTEUt5d8RyMprax1GqdZO5biN0xwaXro5LUEbGq8GB5wEMa
aos7VxCnsjTJFPJ9hDyf1QWPjQ++u1vBR7uRx4dJp59zvp2VfPl858tpwenx
tYPdyztbMevCiNWVoEWe79QMa2ic0Tvo3P6K1txuUf3UuKyGVPBQO+umakOL
2SrfU8hjbS2ztgXeh8KAo42g4x/Xrvsdbfh9Evpt8tzWF5hrc66Cd47vh21m
+6xHXpj1PTF8Wab9OFfpVoJ0Els8xB7jagQ3UQRU8T8XbDFwKAYmoomEULFQ
H0lYAB64QABSpYEUIowjg0hXFOWqiaaoikbLwkOkgAACwJaEMfBQRzGAioGY
oSEkNEQFKSINP+fpSByfYfDXgrYPEvoa/f2tFUJclLzpEn5O+HC2VCCL6Oku
6WCLs7PEJSYqdQ/Yzs57Cj8E7+0kHB3+CLoXhasB/EWvqSmX4bd2/b309heW
jX+aVNw3vFegXZivfi1TMTVOKj6cEBUked5bguUsZmuCtNRD6CkCSgRAGgvB
oyDoX4OC8F8d258rGFAoIHLOh47/96zT/y16/zXj9W3U76+xsG+DQftP7NdK
KbwC8nyuUS9brpetMBGlOR6kOumtMumoKGDrfrxod5Tt/7ko6qQ4bIdjKwjU
mHeRmXQkjtgTBqwkXtHw7TSJRktcuRn6toFoPhmVRUJySYhYXViYLsxTGRLu
InavwrCy1aK6i9Y06FXT7/S4z6Z51KdrJvHldMLzybi6wdDyLq+Goai6NxGP
+8JfTqW9Xszvnr/ax78zLCjqW7jaOpVa8zaspJNxr4dZ8MI2p97icpnRpXuG
l4pJl4sMoq9phmWoBVxWZsXIugQS6QwxuqsYhYbWB6t5IBAIBAL9D2sDGXNd
Yf31jk9umqSdV/a2xjsZiTkYEPUkkXKikFAPpfIrpKoE7acxxt1JtO5Ik/Yg
vQZ3hTpbyRJjdK4hiqsvGqMKBMsA7hIQB7zIk0Ljdb7PusBvY9lnZd5zfdV/
Sxi8txl+uB93/In7/azk+9eH38/Kzz4Xftrn7O0mbKyHrawEvl/0nZzxGJl0
Gxhy7uq3a263qm02e9xgWlyhn3tXM/O6SkurOW/aWTDtur7A2OF77C957gtY
+yvsHR5zm8cUzjovj9m/H7Kd6aOOd5sPPCP31JGePdCuyVcpSlG4Ei4V6Ypl
WaCtNWG6UlB57M+vzeRFAQoW6omHRUrDk+Ux6Yq4TDlUBhHOlYRyJIEcRXS2
OjpDDc1RQ8XIwyOlYaFSQJgsPIAAY+CgDlgI/UfYw0J0UNAgN+nxKbeFZf+d
Q+7SXFrFLbuyIuv6Olpds8WDGnLWLa3YSwrJqUp3i3Q7BxwmZ7z4PL/N9cjD
/ZTjw5y97QThSgD/vef0O9eRIfu+V7T251ZNTyg1j43LSnULb2nlZ6tkJMsn
hEvGhEiG+op7u2LtzZHWhkiSKkyFCMjgoHgkBPvf2bxf1bxfBwY5l+gv+7fA
/fsE419zXn9NhX+fvnj6mrVbbS0opby7rj/I0exO1Gi6qNEVrzESp/6KKTtg
JzfnqioMpBznhZ/Vp59Wxu9yPVZ8tefdFSaZisN2hAFr/Ctz8ZfWEk+p+Psk
dIER6q4V9polJt0EmWCAiNCB+erCXDUAToJCdROlrt2iqpv+uIfa8Na5ZdSj
ZyGun5c2yL/WOcPtneX0zGU9H0/umr4yvlo2vV7N23kxJHjUx7sxtJTXNp1e
2ulW3OF6r8Mhv8kqt9Yi57FpxgPT+Dukize0o7I0IrkavvEKnlEyzgFSVFcx
qiuOQkfrG4PVPBAIBAKBfm99KGO+L/LtU5eXJY4cN12aEpxhKOZEFjdVRyng
IR6Ocvcy9Zuy9RsTDF+lOfXE01v89Z65KNVZiheR0Dn6aI4eMkYBiJADfIlQ
b0X4mxb65gd/ocB/60Pgyjxrcdpj6T1rddl3fe38wV7s6fH1s9Oy799qvp49
ODm+tbebsr0VubYaxOP7Lyz6TrxjDo669LxxbO2mPXlu8aieXFJpkFegmZat
nJqpVFVjPPHGZnHEdnncQTjluDHrvDHjsjnlJJywXxqkzb+mjneYDz03ef2n
fmuZzp8FmpU31O5clskIl4z2wLGpKLo2nCQDVRaH4lFQRSTAwMNCiYgEeVGO
IjpVDpcrL5YiAU/CQbgEWJ4iNlcOdUsNU6KPz9fCpsgjYolABAEIEAdYYhBn
tIilqIg1+pwNDkLBQoJdiCPvXBYEAVt73P2j25s73MWVkKF3jOc91EcN5NIK
g8pacssz8+7X9IlpzyW+3/payMF+xuejO4cHV7c3L64JAvgLzOlJp5Eh254u
autz86ZGSm0NueKhQfFdrZu56rkZypdipWJDCWG+eB83nDMVRTVEGKrB1GUA
GTFAAg3FIkREAQgcgMCA/8Y8Uei57GjlvzeYp71OX1+7/Xs+8ktf4EGr28en
tsuVlLE7hh052vV5uiVXtEvSNV/k6HREqfY6yE7QZQVsw5PChK+NeYc3o9eC
6AIvHb6n6ryXwiRDbpAu2Wsp/sIcV2eBe/Tj0HEl9mI3rDFXrFCXzZAXDBAB
enAnZcCFhLiVr1Hfal7TQa15Re2ZYHdPBXZMBr7hJY0KrvbOZb7h5b/l3+6Y
ShlbeTi9/ufSbo/goL//fW7bRPjTkbCK114PulyLXtgWtdrceGJ5pYqS/tCU
W2wSl68Xma0emq58PkXRJ17WLYxo5y3xI+OZ2qL1zZEqeuDzyCAQCAQC/d7G
AGeyPainybWh3Cb7ktHFcMUgPzlPJtHeVtzUGBvsr3ozWbeSq/8khdSRZtPH
deiMsWhhKtfRCSUUsWskTJoWMlEF7kqA6qPOUYjAvZuk1UX2yUHktvD86qLP
1DhjYtxtdobJ43kLhecP9y+dnZZ8/1b97cu9LyfFx59yt7fj19fC1j6ELPH8
pqY9hscZfYPObd20ppeW1Q3GpY8MbhXqZF1Tj0uUOX9eMp2r0lJrPNxuPtVj
Mf/Kgj9gJ3hrw++zmmkzHWsm99eSXj7UeXJbrTxLpTBV7nqcNDdYIsod609D
0bXg+jKAIg6CEYXIICEMAiJOFh1F+JHxxOKlkVlSojkEZLY0KlcKcVcJ+1hH
slQFe10GkSOLypBGJhMQETggAANhY0R8sBC2ONQZB7VFQaxQEEPEH6FOhNFp
xoIgULgZv72fubIe9W6W8WbEob3PtrWL2tljNTLsOPXOY26WxVv03VgLO9zj
nBzfOD7K39/JEH4IWV1iL8y4jQ7bDgz8HMxrbTFrbjStqzaqeEgqvqOZn6uU
nabISZKLiyCE+on7umOdqUhLEsJIHaYuC8jhf8Y8zM+mLQQBQP9JenCICBom
Upiq8fcG4/OA3Vm381mPz2kHa7fWbvWRxUKZ2fB9cuV1zavpyqkcpfQsrbw8
vcoruv1+yjMO8nwPjYMM1smDlJPi6IM0j49Rpqv+GrMu0hP2hGF7yQE7iW47
iefOhCZ3qXoXyfs07G1z9BUKKtkEFakL91aCMpUBKuFcoB2u/JFRfatZQ6fl
y7eunWPeTW9dXoyy2sb9msdCWsej3synvp7jDC4XvJzKaJ9M7JrlvF7g9s9f
rur1Ku9hFLfZ32tzuN1IvV5nllZunFxISsjXu5CjFZKpEpgqH8xRYifI2vuL
Uxk4S1ccyRqlaYxQUAOfRwaBQCAQ6Pf+A91T5pE=
    "], {{0, 184.5}, {422.5, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->144.],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{422.5, 184.5},
  PlotRange->{{0, 422.5}, {0, 184.5}}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.946837824594844*^9, 3.946838892127658*^9, 
  3.956171296922064*^9},
 CellLabel->"Out[8]=",
 CellID->1380234033,ExpressionUUID->"1a2c5ebf-4303-4ca0-989c-f7a32e8abc32"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["ifaResult12"], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.946837965247732*^9, 3.9468379677839622`*^9}},
 CellLabel->"In[9]:=",
 CellID->791234997,ExpressionUUID->"ed5decd5-e177-4faf-9ce3-299ed23e6498"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztnQk8Vc///z/f7+//+ebul2vfSkT7SoukfSFSJEr7qqIFlRYlpEQiES1U
2iRlSbKmLElKRVSkspeIpF2f/5v5dr7nc697XermU83zoR73zJmZMzPnzLxf
Z7ajsnC18dJ///HHH7Zi8J/xgg2jbWwWbDRhw4HpKtvly1YtWay3ym7JsiU2
Qxf+Hzg6wr/H4L/p918YDAbTETQ2Nr5586a6uvoFBoPhAaoGVBCoJh1dUzEY
DObX5/3791VVVR3d8GMw/3SgmkBl6ej6isFgML8y0MyiJhfeB+vr69++ffsO
g8GQgEoBVYPoS8TKBIPBYEREY2Mj6iepra3t6LYfg/mnA9UE9Zng0RwMBoMR
BW/evEH9JB3d3mMwPweozwQqTkfXXQwGg/kFQW1sfX19Rzf2GMzPAVQWpOQ7
uu5iMBjMLwgaK8fzSTAYIYHKgmpNR9ddDAaD+QVBDWxHt/QYzM8EliUYDAYj
IrAswWDaCpYlGAwGIyKwLMFg2gqWJRgMBiMisCzBYNoKliUYDAYjIrAswWDa
CpYlGAwGIyKwLMFg2gqWJRgMBiMisCzBYNoKliUYDAYjIrAswWDaCpYlGAwG
IyKwLMFg2gqWJRgMBiMi2ipLJFh0cSaNRqVMnaV2+srk0NSpoWnTEu7Oyyqw
vlmwPDVn7vV7CxOvzw29ZOx5QMdmfY+5s5Qmj5Ee0putqsiQlmCwGLRR45Vc
Duj4hOm5nx7vFDTG4cBou906yzYMMJunNkpXrm9Xdl8pupYEbZA4vT+b3otF
68mkdWXQ5Rk0KQaNzaDRGLSeLNpWGWaQumyIpspB7a6bByqs0lSx7tt1tSRd
dJYI84+isLDw9evXgv28ffv23r17d+/ebWho+L5Xx7IEg8FgRERbZYlaF6a8
NENOnrnZU+t44qSz6dOCr0w+mzbt2v2lWQU2d4o2p+csSroxJzTGyOuwroPz
gEWLukw1kB2lzemlzpKVpA8dqeASOMovenJQorFfzGTf6Cne56fuOKa/3lNn
oU1vAxPlwVqSyvIMaXG6FLPpT7JZjcD/4s2ahMmg0Rm0LiyarTzLU4Htqyrl
00tum6q0narsChnxTbIsfsnOyclxbObmzZv8/Dx9+hT5SUxMbJuV+k4cOHDA
kQ/p6ekdkqQOAW6Wtra2nJzcwoULuU4lJyePGTNGXFz8jz/++M9//qOpqblv
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
CJOG9skSYUrgXXMHVGVlJVmlXL16FQLu2rWLX14EwytLTE1NwcXa2prLJ2QQ
bUiCFiODbbVohmvmj5eXF3iTlpZuX3q4wLIE0yKNjY2BgYF2dnag5N+/f891
9vXr1/b29nZ/x8fHp0OS+vPyDy9GMC7Ozs7btm2Dlryj0/IPQqSyZMOe/hYr
lEZO5OiMk3Q/rnMyXj/p1qx7j5bcfjAvOWvGxVSTkDiDY5F63sEjd/pqrXfp
vsxW1WS2/IjRnInT5I/G6UXfnnOvdEfsXUufS6O3n9FyDh3uGa0bljHz9hPX
2DuWh2L1doaMttqraWqvamjVxTdy8oWMGdE3zeKyLeLuzLqcPetcusmpq9OP
JZocvmzsdXbyVr8Rq7cOmLtY1cBAfthAcQ1lBr9kc8kSYuzG8etoDnLnkiVg
Zz08PJB4IOzyjRs3UED03o0kh7u7O3pbh5hjYmK4BlBELUuESUP7ZIkwJQB+
0CziyMhIonjDw8MdSZNpa2trQQFCJALmCZPhlSUQHH3dhrzuBm5r9+7dwX32
7NmEI+pXMTY2JhYrQYLZbDbXMhxo3JYuXTpjxowWd/0VzG8oS6AMYwRSXl7+
wxIsauC5EpxZ0MAtBszNzSV2zb1+/TrXWahBVjxAdRN9hr4z0M6gckhNTf3x
V/+HFyM0hihJDg4O3x4bGCPiqYuNjc3KyoIm9OPHj98e8w9GtFNeHXvOmCs/
YqS4Rje67lhZj8ChoXEGVzLMUm+Zx6YahcXpB10YF3Bq9C5fLXvn7lbrus5a
oDjJQHqgJrt7T9aeo7pRWWa3n2y4V7wzLmf1hVtWwalmEbfm33m2OyVvzelk
gyOxk3ecBFkyyHhdV3u/YeEZ5kk581PzF6c/WppVZJdd7JrycEN45tzTKaYn
ksz9IqftPDbe3lN7qV0vk1nKY0ZLDezD5pdsLlnyrnkFK7KtxNzXdzyy5F1z
dwFamQKAIEc22pG0sLeoqAgNWIC8AV2xc+dONJ7yI2WJMGlonywRpgQAqC/I
EaTRsWPHiF1TiL1N0Pxex78vNBYAryyBtkhfXx9NZFVXVzc0NNTS0kI7z3fp
0oW87hgy1alTJ+RuYWHRp08f4ps45LyDcELuO3bsECZJZH5DWeLt7c1rC8jA
Lf5hCRY1UIkEZ5ZfWRUWFhJ+eF+WP3369JgEvFMLaU8bGxtPnToF9RQE/3fI
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
Tk1cvK2v0RKVkZPkZtn02hqsG3/X4X7ZiUu3N/hE6XucmbDZd4SVk+YMS7Ux
hjIiM0QYzP/AsgQ1Ry3KksrKyhbbt/Xr15MPQaIQQVJSUsjNo62tLdmKQTPI
dQloGwkPYI+8vLzA8nJdjixLwDgS8YNNhEujJt2qefYI7/u48LIErsKvPf92
WcJVYi3CZTXamlMIbtVssuFW8ppXMJ1cfT4VFRXo1K1bt+Bw9+7d8Hvv3r38
cgcluW3bNhSE0KhWzcaU3McCFs3R0ZF8aXt7e+I3ZIFXHQlfjNeuXUPxtDgr
Ozw83KpZuYGhJxyJJxwKE9QCZJNsiE+fPk2OAQ1m8cJPlggfuQBZAoBPdJZc
c9tUldr6gLW1npIRqSzprcbsq0C37yUe1Jvlr0z1kBZzkhFzlqU4SFM2SFFW
SIjNERebyhIbw6T0Z1C6MqiyDJoEgyrOoIIgafq/+Q+0ytDBHOft6seD+gUd
6hPg1cfVUc3eRmWeheL4MVK9ezD3Hxl9M9+ytDo8v+yk53l9a9ehEycoK7Dp
fQZIbQ7UDkldklsSmJiz1S/a0Cl45Aaf4VYuWmZWGqOnyIjMEGEw/wPLEtQQ
CZYl0IKh4RWi9YOGurq6GlQEOiQMN7wOWzUPlCcnJ0MyvjSTn5+/adMmFA/X
6uN9+/Yh99zcXORSXFxsZ2dn1fwWz5WeJ0+eoLZ069atxEv6+/fviVadd9Km
8LLkw4cPr/5OWFgYV+740ao9BUOJ4oRiQXFCfrkuRx6baEdOkSwBkCqA/9PT
0+G6oBNKSkq4erQAeM23ajbiaNABHcJFyTadnDvEoUOH0NNVU1OD7p0Vz+gD
KvPDhw+jWfF/NY+tnDhxAnk+cuRIu4sR8oJEjru7O9epz58/g3hDKSQcQbyh
ZwmKkVzN4SGEZMDD/PLlS3IkoK+4bgrxtPMmpk2RC5YlxL0jasFfbaxKbX3A
2lpPyYhUlmh3YZwao5BjoHx9uHSwrNghqU7+0mJe0mJ7ZSi7ZSgbOZ1WiIvN
Y3cCZTKKIQbKpBudqkCnSjWpEQrSJBxm0x9DjCrJpA3TFLcwll1oKjttvOSI
QeweKgwFKTqTSt2yTev2/QWFpTtyS3dF3ZwTGGY4f1637opMTW1Zp5MjorJW
5pUdT8x18IqcuDlw2FrvwUudBk5f2W0kliWYHwKWJcLIEqJZRhZn165dqLc5
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
    "], {{0, 64.}, {366.5, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{144., 144.},
    RasterInterpolation->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{366.5, 64.},
  PlotRange->{{0, 366.5}, {0, 64.}}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.9468379684663877`*^9, 3.9468389661247263`*^9, 
  3.9561714072970953`*^9},
 CellLabel->"Out[9]=",
 CellID->54935807,ExpressionUUID->"18e3cc88-ba5e-4314-ba14-c0db2b96b848"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ifaResult12", "[", "\"\<Data\>\"", "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.946837965247732*^9, 3.946837975781838*^9}},
 CellLabel->"In[10]:=",
 CellID->1652444913,ExpressionUUID->"73d2fad5-bb5c-4738-9776-4e5a00500cb4"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
hiDfOCS3wtt3H4/XnhJ8OsHjX56h5dT3Uwtq5KvXbhw9elzonj+iHyWzfMzd
uw+IDe3k5NyevSOgd6Bo7yDTnt/qfsREb5t2sms3ALROWrN3CB1WUL+BuhcR
15XGvHv/qfbEafwtJQHqbdBYI3pIEme4EQ14B0AnaO8dzs4uqMvqFxLaYM1d
u/caG5sQuwYZGBiuWbOWt8KGjZvZbLaGhiZvIepMlJSUUDnqT4jC4cNHoBK0
wCXVy/BeXt26dUM1v9X92pKYmCwrK4v/S9euXfsG9+PtIVGvFRk5ksFg4Aqo
5vTpM1qqqZvFO0pLy/D+Vw02DpmtgDl2rNbO3r5jx464mrq6RtXiat4KO3ft
Qc/Fj6Jqbm7uN27e5q0wrWi6tLQ08Y/Q+2Tf/p9JPkpm+Qi05mjFiA0dFTXK
3sGBlt5x+co1DoeDNisxLvN5R+7UPBVV1U6dOuHNza5LfPwkku2Jl+/t7fPs
+avAPkF4fbJzclu8GQGg3dKqvEPEsHLz1p2oUaPRwE305za2trynl8Hdi5dX
d9R9hYb2l5KSQnWYTOagQYPREt68/TByZBQxHPj7Bwiai5jDTYOAdwB0gvbe
kZaWjj/paObz6fO3+qqVlJTiaqjvcnB0JI5NKC4uIeqsWLkalcjIyPA+ES0T
1zx46AhRiDQHlaCeEE+05OTkXFxcUfmr1+/MzMxwfVU1NTQLRX0juj10aAR+
IppW4e4LdX2+vj1cXd06dOiA7iYnp7ZIUzeLd2RkZqFyS0tL0Y1DcisgKioX
YuNAk3k0GOEBBS2NGErKyuYQ2tI7sI+yigo2OMLv5s0rxxXQCNUnqK+amjq6
raurh38CE/0omeUj8gsKcR1JSUk0zKGXSQw69PMOwV83+EomT05C2xSXEN4x
cWICyfbES9PS0kYfCrzdWSzW9h27WrwZAaDd0qq8o75h5dr1m126dCG6F7QQ
3Juh8Zf4RQN3L6hHQp08uqGoqMjlcvFT4saOQ0/B3ZGKqiouRBbD+6/FHG7I
AN4B0Anae8e9ew+J48rV1TWmT59BnOqTAHVNaHKIKvQN7vf23X8+2u/efwoN
7Y+fdfLUWVytsd6BYmhodOjwUVSCexjUieFZU+WCRf9dvfuPUCdGfEscHRMr
UXe6rStXr+OSjZu24KkaeiHUN7X43vHi5RsdHV08IohuHJJb4dbtu0wmE5Wg
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
7j//RVkZGShyPXzdEAMDQzRwiH6UzPIxrq5uuA7auO7uHviID3y8YXvwjs9f
vrNYLFRiZWX1+JdnuHDmzFm4GtqyXl7d0ZSAZHuCdwBAa6NNeMeaNWuJfhh1
LHhMwV16s3jHN/GGG5ItAN5BDeAd1EBv7/hW9/3GjBkziauU4ujrGxA/MRAs
WFhFSAGeGqEui68O6oLwrvt4DunvH/Do8VM09UV3jx37//XB+wIJnVpfuXod
//KL07FjR7QQ/LML5u7dB4MHDyGOPsMdZmlpGe/eR5TRKO/AR9g16B0iGofk
VvhWd4lYwkok6n4hmjt3Pu9OTdVLl/OewKRTp05oYDpz9gJ+dP36jUjrJHji
69sDWSGZR8ks/1vdCBURMQxfPBdFXl6+aHpxVnYOuj01L5/6TclHo7yjwS17
/sIl/DJ57Xjc+An4bbxz1x6iTXjf/GjkJdmeQpcPAEALQpl3oA5ToiHvEDGs
5OUX4N8X8EiBNGHdug0SPOfRFdq9IAfBhbze8eHjF7wovqv+iTPckAG8gxrA
O6iB9t5B8O79p0OHj/588DDx7atQbt66g6ZJxFWBBPny9VfUEe3Zu5/v9LCN
Aq3DwUNHEPV944HWFvVs6L8Ql+RuERrlHc1Ig1vhW93v1xcuXt6xczevtfGB
JG7X7r2nz5xH44Xgo/fuPdx/4CB6S/BeRJLko2SW/61upn348LFTp8/xHejR
4jTKO8TZjqgB+d7kuNGQgAu2SYPtCQBAK4Ey7xCfZ89f7dv/Mxovfuh/EWe4
EQ14BzWAd1BD+/EOoAm0lHcAPxpqvAMAALrShryjrQPeQQ3gHdQA3gGIALyD
roB3AAAgDuAdlAHeQQ3gHdQA3gGIALyDroB3AAAgDuAdlAHeQQ3gHdQA3gGI
ALyDroB3AAAgDuAdlAHeQQ3gHdQA3gGIALyDroB3AAAgDuAdlAHeQQ3gHdQA
3gGIALyDroB3AAAgDuAdlAHeQQ3gHdQA3gGIALyDroB3AAAgDuAdlAHeQQ3g
HdQA3gGIALyDroB3AAAgDuAdlAHeQQ3gHdQA3gGIALyDroB3AAAgDuAdlAHe
QQ3gHU3g2fNXVYurEeSfAt4BiAC8g66AdwAAIA7gHZTRdr3jy9dfr167sWXr
9t179r1919rXn5be8fHT1/pAW0f85W/dtkNCQqJDhw7knwLeAYgAvIOugHcA
ACAO4B2U0Ua9o3LBImUVFYl/IikpGdA78PKVa7x1ampO1J443ez/ummLpaV3
dO7cWaKeLFy0WPzlg3cAzQt4B10B7wAAQBzAOyijLXpH0fRiYn5rYGCopKSE
bzMYjC1bt+M6L1+9RSXS0tLN+6+bvFgaewdqdmmBrFu3Qfzlg3cAzQt4B10B
7wAAQBzAOyijzXnHs+evOnXqhKajgwYNvnX7Li68cPGym5s7EpDbd+7hkhs3
b/8I72jyYmnsHZs2b/1BywfvAJoX8A66At4BAIA4gHdQRpvzDjwXRXnx8g1v
+Zevv967/4i4e7z2lGhB+Pzl+/kLl5CwoBui/+OTpy9OnT738dNXMoutD/CO
f9rhee2J0yKOx/nw8QuqcP/BY3R7+45d4B1AMwLeQVfAOwAAEAfwDspoc96x
Y+du7B1nz10UWuHlq7c6OrpIDXA19j9BM95vdXpSvXS5k5OzpKQkcWzI1Lz8
r99+I5Zw+co1Dofj7e3z7PmrwD5BeHadmjZFxGIbpN16x/DhI1ArIYPYsHGz
tbU1kgj0lI4dOyYlpfAde/702cuQ0P5du3bFLayvb5CengneATQj4B10BbwD
AABxAO+gjDbnHW/ffcRTUxMTkwsXLwtWeP7iNZro4n2xBAVhxIhIXI7MAtmH
iqoqvltWNodYAjIaVKKlpe3r2wPdQP+OxWL9tHa9iMU2SLv1jn4hoaiOnb09
bjfkbqjR8O3lK1YR1R49fqqpqYXLUcujjYvcBN8F7wCaC/AOugLeAQCAOIB3
UEab8w5E7tQ8YkYaEtr/4KEjgnVWrlojdIeompoT1tbWm7dswz9wfPz0tVcv
PzzXJepg78CZMiXj2fNXDS62QWjsHbFxY+fNK+fl7t0HRB3sHSgeHp43b92p
a4rn+voGqARpHVFt5MgoVNKtWzfUwrjk4qUrjo5O4B1AMwLeQVfAOwAAEAfw
Dspoi96BKC4uIb42R7GxseE7gRJ5QVixcjVeyKvX73AJ4R3Dhg3nqwzewUt9
59HdsXM3UQd7h7e3Dz5ABpNfUIgK9fT08d179x7i/a/SMzJ5lw/HlQPNC3gH
XQHvAABAHMA7KKONese3uq/NMzKzuFwuMd2dNCmROEyjQUF4++7jnr37p+bl
B/UNxk8n9toivOPK1et8zwLv4AV7h79/wJjoGF5493/D3hETG8f7ROx6HA4H
392ydTtu8CdPX/BWA+8AmhfwDroC3gEAgDiAd1BG2/UOzIePX8rK5igoKOCJ
a0lJKS4XIQgnT53tG9yvS5cufN/Snzl7AVcgvEPw2A3wDl7IH9/B5x0bNmyS
qDtGBt8tLi5BdxUVFfmeC94BNC/gHXQFvAMAAHEA76CMtu4dmBcv31haWuL9
eXBJfYKwevVPeJceQ0OjwmlFR47U3L5zD7yjaTSXd0wrmo7uqqiq8j0XvANo
XsA76Ap4BwAA4gDeQRn08A7EvHnlEnXnnsK7WgkVhI+fvjKZTFQ+ekw0sUfW
k6cvwDuaRnN5B97tqlOnTrzHgHwD7wCaG/AOugLeAQCAOIB3UEab8w4kBRMm
xL8RmDlkZmWjOaqmpha+u3btejyV5a2JzAILxb17D4nCR4+fkvcOoYslA3gH
byGfd+CrMaJUL13OW+2nn9aBdwDNCHgHXQHvAABAHMA7KKNtecfLV2/V1TXw
XlLbd+zCl71+8vTFoqolDAYDlUdGjsQ1jxypwVPZjZu2EE+/e/cBLqxaXI1L
Ll+5ZmNjQ947hC6WDOAdvIV83oGwtrZGJWpq6ucvXMIlu/fsk5WVBe8AmhHw
DroC3gEAgDiAd1BG2/KOb3X7U2HFQEHzXn19A+ICcxoamk+fvcTVPnz8oqys
jGetHh6eRkbG+CRLZmZm+IleXt2dnV3QjS5duuAlkPGO+hbbIDT2DtR6nQQS
FTUK1yHpHdu278RboWvXrk5Ozsgr8W3wDqAZAe+gK+AdAACIA3gHZbQ57/hW
9yNFSGh/PP8nBCRq1OiHj57wVkNTWRkZGaIO3ofn2vWbJiYmuARNdD09vZBl
2NjaSvCcR/f8hUu4wvMXrwX/u9DFNggtvQN7gdCMGj0G1wkN7S/oHfjEubze
8a3uBw5VNTX8dKx1aEMjK0T/hfwqgXcAIgDvoCvgHQAAiAN4B2W0Re8guHnr
zvYdu5Av8B2PTPDu/afjtacO/Hzo5au3ROGXr7+ip+zdd4C3sFEIXaxoaOkd
PwK0TZGA8F4jvlGAdwAiAO+gK+AdAACIA3gHZbRp72hDgHdQA3gHIALwDroC
3gEAgDiAd1AGeAc1gHdQA3gHIALwDroC3gEAgDiAd1AGeAc1gHdQA3gHIALw
DroC3gEAgDiAd1AGeAc1gHdQA3gHIALwDroC3gEAgDiAd1AGeAc1gHdQA3gH
IALwDroC3gEAgDiAd1AGeAc1gHdQA3gHIALwDroC3gEAgDiAd1AGeAc1gHdQ
A3gHIALwDroC3gEAgDiAd1AGeAc1gHdQA3gHIALwDroC3gEAgDiAd1AGeAc1
gHdQA3gHIALwDroC3gEAgDiAd1AGeAc1gHdQA3gHIALwDroC3gEAgDiAd1AG
eAc1gHdQA3gHIALwDroC3gEAgDiAd1AGeAc1gHdQA3gHIALwDroC3gEAgDiA
d1AGeAc1gHdQA3gHIALwDroC3gEAgDiAd1AGeAc1gHdQA3gHIALwDroC3gEA
gDiAd1AGeAc1gHdQA593fPr8tfVz9ep1tKrHjx9v8TWhPSdO/qe7e/nqdYuv
CdC83Lj5H3lH9tHiawIAQFvkwcNHqA+5dOlyi68J7Tlx4gRq6lev3rT4mtCb
h48eo3a+ePFSi68JvTkMgUAgEAgEAoFAIBAIBAKBQCAQCARCr7T4fl9kwMd3
nDhx4m/ID87p06dRU3/9+rWlVwTSzLl//z7aso8ePWrpFYFAIG0yL168QH3I
jRs3WnpF6J9TdQdafvv2raVXhOZ59eoVaudr16619IrQPOAdEBEB76BrwDsg
EIg4Ae+gLOAd1AS8g5qAd0BEBLyDrgHvgEAg4gS8g7KAd1AT8A5qAt4BERHw
DroGvAMCgYgT8A7KAt5BTcA7qAl4B0REwDvoGvAOCAQiTsA7KAt4BzUB76Am
4B0QEQHvoGvAOyAQiDgB76As4B3UBLyDmoB3QEQEvIOuAe+AQCDiBLyDsoB3
UBPwDmoC3gEREfAOuga8AwKBiBPwDsoC3kFNwDuoCXgHRETAO+ga8A4IBCJO
wDsoC3gHNQHvoCbgHRARAe+ga8A7IBCIOAHvoCzgHdQEvIOagHdARAS8g64B
74BAIOIEvIOygHdQE/AOagLeARER8A66BrwDAoGIE/AOygLeQU3AO6gJeAdE
RMA76BrwDggEIk7AOygLeAc1Ae+gJuAdEBEB76BrwDsgEIg4Ae+gLOAd1AS8
g5rQ2DuuHnE5fcBj/kyjffsC7z0e++BR4pYtATm2KsVyrKUGCrMNlcPl2N05
rGmqctGair3UFKpdHKZoKg+TZS0z15niYDDUQGOWlkqWmkJfOU4gS7KqX8iO
YcMW9+kbo64SpqzgKMfWlGYzJZmjIgwfXx/08u6QO+f77t7gNrPQ6OHJoL8+
Lvj8JuWPL3N+f5/75n7MpZoBm5Z6VU6zpWabNmNIekfNnh6HtnttWeW8cq7z
0lyXJRNdlgx3rAo0q3LUrTRVL9ZWTFRixymwJqvJZxtoFVmaFFsbTzXWytRX
zjPVnGqlm2dpkGuil6irOlqXO9ZUL9XJJtPdKc3ZYbyZ8UA1rr8cp6ccu7eG
9GA71Yk99bPCTApHmRZPNq8qdtmzJuTCkah7l8c9uZOAuHM55tShAVtW+ywt
d6amfdpuwDsgEIg4Ae+gLOAd1AS8g5rQ2Dte3A57eKnPlpW2qQk6q1b6HKnp
V5lu+5OL/VoHs73WupVaCnEK7EAOo1RbJVdXvdLV4eTwoWlqipOVZFY5mU20
1kgy093eJzBRSbYHhzlaW6O6f+gkJ/NMR6sCZ9dwBRlXOY4Ghy3NYcuzWCEu
ytNiDNOj9AI8uf39lb89TXn7fOrWtZ73ro3+7UPO60ex54+Hb17tW17iQM02
bcaQ9I5j23sf3Nhjc7VL9Qy7ijT78hj7ikG2C/0tqpyNKy11i3W5iVx2nCIr
UUMp20S30Ma00No421grA3mHiVahjcE0W5Op5oaJemrYO1IcrTPcHFOd7cdZ
mA5UVwmQ4/SSYweqcYZYKk300soI1M0dqFcYY1SZ67BjWd8z+4ffPBf98PqE
Rzcm3roQfepQ+JbVvuAdDQa8AwKBiBPwDsoC3kFNwDuoCY294+ObaU9v9f95
s1PUQK65BqePo9JkO811AV6ZTuan+wYs1lEeK8cMlmbmKLB29gm4kpq2yNku
Qp41SkF6gY7aIjvrfRER6/x6Ig3pzWFMtDLL9HYLNNWIsDOtCAoOk5O2l2Fz
2SxzNmOMHGOCEitFgzNYgWkhyQhwUPztRdrFU0NSxmpfPTvhX9/mvH4w6lxt
+NqV3sUF1tRs02YMSe84uCpwb3WvdWVOFVPMZow2mhZmWOxnNMfDrMLZfJ6N
8TR99UQVTowSa7y6Yoqxbqa1cbqlQZKpRpKRcpapZqG10TRb02xzg3g91VG6
3FhTvckOVsnOtomO1nEWJuEaqr3lOAHy7BA12UgjxQRbbqqbclpPlZxwrTmT
rDfO86/dMvhaTdS9C2PvXxp//cyY4wfCNq32Xgbe0VDAOyAQiDgB76As4B3U
BLyDmtDYO/74dc2TmwM2VFmNdpeLkGOOkGHGKskVGejMtDK7FBVZqaMcK8f0
4DCHyDMLNBXTNbkj5NkOHJYFh5WuxFrl6rixh3eOmkIsV8ZXmjlCW23J4EEJ
tkbJjpbTXV0HykvbclgaTEaRucE2X+eZatKz9BQTNWRD5FkB2uxfzg95/Xzy
zUv9f/1c8cfnsrePYi7VhqysdsmcYkzNNm3GkPSOPXP8ts/0WZVlN3uMfn6Q
eo6Haq6dWrGV7mxb41Irw6kG6hNVOSO5zEg1mRgD1fGW2hNsNCfYqU20U0m2
U8+y1c2y0U8214o1Uo405EaZ6Yy3M5/kbBPvYD3azDhMXSVQgRPMlR2mozbB
WDPVVDnNUiHZSSHDT3XGSJNVBd6HVoRd3DPyVk3srZOxl45FHt4VvG6F+9KK
tvfTEsUB74BAIOIEvIOygHdQE/AOakJj7/j2evLjK0EL4wyyNJXLNLllWkrj
laSzuXI7XR2O+3ev0JaPkmfacphcDstdltlXRsqLy+7TXc0vQD3YQnaSGitF
XmqiEidYjqXPZNrKMLPtLOf07Llk4JBEMxN/GZYZm+ktyyn3ti/t7TTFUC1N
VT5NixunKu0vLbVupv3f39L++pjzx4fCz8/jXtyKOHvYr2KuZWSEKjXbtBlD
0js2Z3uvm+K+eKxFSX+dPE/VXEulbAPFPH3VImOdAhOdVD3laE32EA1muA5r
iLncSCeVGF/NCX10E/roTuqlPdlTc6KLeqyDykhb5WG2KsPstEbbG8Xam422
Mh1ioNNXWSFQkROurhBrrJ1irpdlopFppJRqqZDmppQXor1gkuO22YE1qwef
2x55fs+IEzvDd63vuaLKqWp+2zuUhuK0Hu9YuHChlZWVt7d3gzX/9a9/WdVl
xYoVLbICEAiECHgHZQHvoCbgHdSExt7x+Lx37UaHTGetQgfjYke9eaqyWcoy
4xWkp6vIzVKTyVeTDpVh6LCYHBaLyWJpq3Ay822rd/Qo/8krLcUs2EnBU4Hp
xmFYK3Hc3VScXbhB+jLDlGUGKMkGykvbybCUmYwETaUKZ91BjoZR6oq5qnLZ
2tyJKtID5Bh9TWTuHPL7+82o355FfbwXcedU4JaVjvGxmhMn6FKzTZsxJL1j
8ViHBWOsy8KNinx0p9lrF5qo5WorTtGQT9NRSjLgjjWWG27KCTdnh9pwwj0U
RgZpTxxuPiXWPnOsfVqUWXx/3bjeGmN6aUT5aUcG6A3rpTfUU3eInU5/Y43e
Goq9FDkBSuzBWkoTzbQzrfXyzLXzjdWzjZVSreTTvZSLBhsuSXHZMtN/36Lg
A8v67ljac/VC16p5DpVz7ahpn7abRnnHgQMHVq1adfz4caGPHjx4ED26f//+
pq1JRkaGhISEoqJigzWRd0jUpbS0lCicOXPmjH9SXl7Ou8JE1q5di97Jnz59
EnMFGhXUQc3gycWLF4mH0CqhkvPnzwt94urVq9GjZ8+ebd71QUGb++7du3/9
9Rdf+fr163lX9d27d3wV0Mrn5OQMHjw4MTHx2bNngkt++vQp7xK2b9/e7CsP
aW2ht3fU92ERzG+//Xb16tUfetZH2ngHais0q//jjz+a9vQnT56gkat5V4k3
dPKOx48fo265ac8l85YWZ1PS2DumjNVKHKI8w8Ywz9ZgnLnagV7dl+kqjpFn
enEYfjKMHtIMVy2OubGslgaHw5QaGmuy5WxIzc3RtVejVmwKiBmjZ2UsraIq
PSHHfsZq38Ri18AgTQc1jqUM05jDVGYz5ViMXC3FxfZaY01VF3m57AvwWqov
X6QtN0qJZcuScjOV+6nU6sJm94PLnOZmGffvpTh9mvXJi8FN2EAtG5LekR+q
nddHM8dLa6qdzjQrvUIz3Uxd5XgtmRh96dEWcpFOihFe3ME9uAMDuBEDNOJi
LDLSPIryehQX9MjPdE0dbzZhpMHYESbjR9tMiHaMi7QdFmIc4q7hZ6bQXYPT
XYnpx2UN1lRIMFHPsdIpsjEottTLN1FNM5ZPtJZN8+YWDtSbP86qeorD0lzH
qgK7imL7BbNdq+Z7UtM+bTeN8g5ra2s0M0fTTqGP9urVCz3q7u7etDURxzuI
EhxZWVneFRaMqqpqRUVFk1egUcnKyuL913PmzCEesrOz47Mn3jg4OKBHp0+f
LvjQr7/+ihzBxcVFXV09Pj6e5JrcunVr+PDhWlpaeE26du2akpLy559/EhW8
vLx4V/XKlSu8T0ct1rlzZ+JReXn5o0eP8v0L9F7iXUJoaCjJdYO03dDSOxr8
sPBm79699vb2Xbp0QTU7depkZWW1evVqwWrIX9CnVVNTE31s0WywCWvVyr2D
zAtE75Pu3btLSkqitmIwGGjUePjwIcnloxnImDFjVFRU8EZRUFBAg9Hr16/r
q79ixQr1uqC+vVEvpPV7B5mmzsnJ0dbWxm2lr69fUlJCfvlk3tLibEocGnuH
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
8y4EvKP9hN7eIeLDgs842rNnT76f/5KSklA5msIJLq09e4e5uTnfVxY4o0aN
khA4yow3xEl0eS+6ioK6brwvEBKTly9f4rmxrKxsLE9UVVVRoZmZGbrNe9k7
0WnT3rFx40ZcznfeqidPnuDyI0eO1LdMkm/pJm9KvtDYO+b+3GNdbf9FO/yS
5tpW7u2z/3rUxV8Kzt9JzC91LAxSL9Njl6kykxWlqs0Vn6bZX0i0eRzd+14/
98NG0mu1WDlyXddZcP4s93wVa3Gzp+pJd4UlxozhCpJmsoxZ5Q6Hrw/eeXZE
1a6+aQucgyfoOPTlJi+2W17jPWeXx4RiSw8feQtFpgsHGQdDg8XoK82cqCyf
oaORpMQhuVFaT0h6R/5c7/8wz7ugwnt6Za/Sij5z5wfPL+09d6rXrAT7khHm
M/sbzg3WXRZqtDXCbv9I14PDnPeHWW4L0Fztq7C0h/zKPmobwg23DjXeHKa9
MlBxToDs1CCFjEHamWOt8zI8Cgt8swu6J+Q4RCUZD5tkOCrZfGyK/bjJ9tHR
ZhH9NMKc5IP02f5chr8Mo68sO0JZPlaDO1FdiZr2abv5od5hYGCASgIDhVyw
BndQSEyIEsFpP+7cAgL4L8LSLN5x9+5d/BTUS9e3Aj/IO75///6lLvio+cLC
wi/CYmNjgx7Nzc3FdwVPU98079i8eTP+ldzb25t3NzMifN4xZMgQdFtDQwNf
nAutBr6AV4cOHdCLPX/+PF7a6tWreRcC3tF+QmPvEP1hwfuREhe1IbJ8+XL8
nQbf5O3v9u0daDYrIexrKHxMQX3DCsqDBw/wMi9dusT3kI6OjkTddbSJXktE
yH8P36a9o7a2Fpffu3ePt5w4TOb27dv1LZPkW7rJm5IvP8I7bt2+Q1y/A43U
6Dbi0+evFHvHlCqPo7dyj10bX7jMcUS6cdWuwM21/cvXepXGG73eN/r9nrRL
wwNXWWmsseG+Xx6xd43v7hS7D9MCL/XQ3GnCWaTS7ek403/v6vslx/vlaIfz
Hko/GTMncrtZs6Q0VdjJuTYLNvnkVjoOTzJw6KUYmWlWttN72/l+688Omr7J
Z9QUI3snWQ6HIclkWEgzE9QVEzWUyj3c8jSE7HfXykPSO0qWB5YsCyypDihc
4J1b5j51use0fM+SbPf5aa5Vk1yro52XD7VbE2axZZDlvtEuR8d7Hx/vXRPt
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
R3dY9DWtSeGo+VDVb91I+OlJze+/9T36Nu/yRfbgJutwP80VGhJoFMpIWeIy
z+l8E6EmTashW+frvT6HGTrpizBYCXFzfYXqbrP1u+2yu4z981c6BKuxs7RS
W42yWk3jSvWZ3GX6xrIq8hglzJxdrzyxvoTB9HBmWPWWRo8Op8T4OZzcVL4r
NrA2lJHsah5qT6JT/OtyfLs7PQvKfMsivOJ47sN7iveP5B7fm9Xbl7S9o6Cj
0j8119Wb6kJw9GORPAYyYtrSwhPiA0ryWVt6M2piPWuCzL1w5ACmS2FReF29
T1FlcFw+ixNHiSvwz8xkpZd5h2T5REWyKGyCLYVIDHq1pxzvISLzjhnllebR
fetM0QVrpnkr3oG8LgHq8Rq69CLvEB7oHTMN9A6RMWe84x1nLnnHu8wc9g5u
ho6+vtz8efOL/Iz//jL6wWn2X+eSHpY6jNqrJqmiLBXQOzfY/Hw/6P51xtXT
+O2b1mWlLjx9xv/Tz4J//rnvpx9bvrjit32bbWzMUq0lEoqymBXKmH3euveG
Qz89zPh8F+F2O3O7lWayGtpeGqUojlJRlcQ6qTi4qa4xl/VNW1U3gtt8kL1x
hNaylZBSa+bJWWpgJKskjxHNPX2DCOkdVX0B1CA6gehYmOD+2dbs8RrO2aHC
fVnB5YGUIpJzpB+9voDVuzFuU3fiQGtyRZFfTgp9Q2dy+wDnzMmm4fHajpLI
qqqwlBIOL8TV34NCYLjUhnnvqk/b2RzR18LrK0ipJ1lluVr60ByYDraedBw3
mBXOIbnTjJLTGbk1Mel5cYUF3NrKgJTY4OA8z8Bgcyvs6zdX3hPmmHfweLwD
Bw4cO3bsbadoKt66d8jLyx94xt27d2f6jOXl5cj7+gmTkk3NDz/8gKQQGQv5
et5x/vx5cARkBkjoHTMH9A6RAb1DNEDvEA1z2DvogYtXL5ZUQ6EcF8o8ORH+
9Jfyv65EPuyyPchYGKYsziVq/vEo/Ofvs/74qfz+de8zh7HrG5fv3ed24dOY
r7/O//Fx2Y1rgbt220UnLYmKXFaSp5MYvqSWpHYlg3BvPPrOjuATASbNq2UD
5FDaKJSaNGap/L//qSugl66Qrd+BO3I5/9QXjQfOZuw4FlHaaRFbYIAjqS/T
nLPrlZcVMQKdyG5EXz8W7fJgyifHSvYPph1sDW0P8iqgesdE+pzZEz06mjI6
Vri5ObmjIbI4P6ilPWVopHh8pGBsW2lXS2BbS2xKmm9yEqExj5Ycw0glUzZn
RBzuz9+1oXRzrndqGCWeQvJ3sKIQHYJppAAyzo1EpzJweaXsjq7y7j3VLa15
NRuyYqN9c4t4CTGs6NVc0eTP7GWOeQeCjIzM207RVLx17+BTXV0902c0MjJS
UlKaeuzn84DvpGA6X887sFis4EGgd8wQ0DtEBvQO0QC9QzTMYe9gOijlY5Xz
dGU9pObVuK95ciTwcY/96YhlbUQl56USecl6v/0Qffigw+ge4qO7MbfOOW/t
XpObrXXsqN93D7O/vZ9y/Vrg0LDN4C6bzz/zunjW48AeXDlv+Qas8jF/vTFf
g04DpQR1NEUeFW+h2EZSbXNQLsTKB1jI+LI0Dl6KPX6tqrDPMaPTqmMvvXmI
GJO3lsLU1F45+eDNdxkhvSPZl7KeQUz1wqdiCc1Rnle3po3W+NfF0orZjEia
XRSPen4oo73Jt6HQb/dg2mBTWHW5X1Ues7Upcefu9C1DyTt3xbc3JzZ3BzZ1
R++sTa5uTkxOp5R4E+tjGVUpvmVhzCSGbSzesiKM0JzkXcqjZiZREzOZkSn+
TZtqerbkBmbTeeWcstbw0rzItLjQkDBvGy2sSLJnFjM3vOPvv/82MzMz+T+c
nJzedoqm4i16R1tbm4kAW7Zsmekznjp16jVm7zl79qxgOvkLKb4SXC5X8CAz
2iH8fQZ6h8iA3iEaoHeIhjnsHe0mal814S+kWJRryQcqoZmLpEJ05QeStYbb
DKvyVne2mNy7E9Desi48WPPuzdivPqV2Va+2NZbmcgzu3Ez45g73yCHS1u22
X3+d/OOThocPsq58xt7aZZ7CUM9cK5uxRJqthLGTR+/P1n/YaHqeseRj10Vb
HFSyjGSSAxbtvRg6eDIgOGetnqVSQLrWhlH3zEpj75Blhrrv9MPYSRHSO9hO
trs3JmwsCC5geKeTCQkUlxi6UXY8u7GIU5bDbikO2d4VnZnKDGZgjxyM6esO
rm4Njw2xzMz12LMze2tv7ubmlPrcoJ3d3AOnSrp7C9a3xfa0BJVGk4oDKVnO
jARPvyB32lBF4EiW5/pEWrefW3EAPtcPH5tOq16fVdkYnpEdxaB5JRQzu7p5
+YXs+BK6jenERcQgE5gb3jG7ANXZ5s2bd+zY8bYTAoG8AaB3iAzoHaIBeodo
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
B0YO2DuUFewdGAymOWDvoAzsHdSAvYMasHdg5IC9Q1nB3oHBYJoD9g7KwN5B
Ddg7qEGJvePKKa/vj/kunWtx9GjYzTsjb/0vZe/e0GxnrXwec52ZYKG5Zm8e
qxObOUObN1xfvYuOYK2XW7q+5gA15npbo3Q3s/5mevMNtKboCCJ57DCm6upu
3Q8OGFAYHjlCVytaU+DOY+lzWIQqER9rfqeu76MbMderIw/v7DA3z+L22YgP
L1e8fpL6/s2iP57nPPlpRG1Fr93r/ApmOFOTpy2Igt6h8jW9rf2j5vx8vmDv
wGAwzQF7B2Vg76AG7B3UoMTe8fO16Nu14Xs3OU9KNtq8KeBURbeCDOdtXq7b
3WxKHI0LDASJAlYYmzHPUCvHWLfA2+3swP5pOurjNbibPWzGOOpNsDE+EB6W
oqHWmU0MNdRb27PHOA/bTHeHXE/v3gKuN4+tx2Zx2Cw+k9ndS3PGCPOMISah
HYU9QzR/u5/69OHUfds73vxh6LsX2Y//l1B9pveeLYHL5rhRk6ctCPYOZQV7
BwaDaQ7YOygDewc1YO+gBiX2jpdPZtyv73l8j8eQPkJbPXa4u8Z4F/2iUL9M
D9vvI0MLjTRH8ogoDpEtYBaHh16elLbK0yWWz4wXcFYY6axycTwaG1sUHAQa
0pXNGONgk+nfIcxaL9bFenlEVDSP48plCVlMWxZjGI8xWoOZqsfuJyDsVBmh
burvfk6rOReTOtLwyoXRf/226PGt+KrK3ts3+efnOlKTpy0I9g5lBXsHBoNp
Dtg7KAN7BzVg76AGJfaO979vvXe1187VDkN9eLE8YhCXSNDgzTQzmutgUzsk
rsBIM4FH+LKJGD6Rq6+eoS8cxGe5sZl2bGaGBnOzt/uuzv7ZOoIEITeQQwwy
1FnTr2+ys8VEd/tZ3t59+BxnNlOPYMy0Ndsf6DlXhzPfRD1FT607nxlqyLpb
HfP44firtT1/f738/esFT/83oray+6a1XpnpltTkaQuCvUNZwd6BwWCaA/YO
ysDeQQ3YO6hBib3jt8fj71yOWJloNkVfc4G+cIGBxigNTpaQV+ztdiak03JD
/hA+4cwmhGymjxoRyaX7CVnhnXSCQ3Wj7NTG6TBT+fQxGuwoHtOUIJy5RJaL
/aKgoDV9YlJsrEK4TBsW4a/GXubvOq+rR7q5Tpo2P81AmKjNCeHQi+a6NvyW
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
sh+n5G/wDumprSUkeKp0popqihm/erh33li7pN5GtRk9N7vrr/fWfHdsSMO1
lIaXOX/WDTs30mSjD/fXkpgdCz0P5Lv/tbHfw0ST436cSdoq7mx6shV3mR1n
sj6zF1fV7BuVQQnme76Pjp/s0DfN6nDdpLVlfZIXu4QPMtQ3YBEEo6+2YJGH
xQBn7Txvly3BQfJ3uA2CvUNZaVXvgPoRNVgiCIKMxmFz6PmztrY22S4ayM3N
pYkeEpKRM8QzqGqG+VGT1Pfv30Phhtrx0j7eOxpEH+aAlBkzZpAp0t5BfgNi
9+7d5D4bGBigRNI7UK8KKGYhGED7gDo7aGlpgaQoeNIQMr9dgj4OIr6rcGbQ
cz8IoZ88edIgGlIYTZo/fz7aPYilybZecP7hFIn3aFDcO549e/azCNTabcqU
KT/LAtVloBvoJ4qIIDZ4/g9bt25Fa66qqkIpZEunCRMm0ERj1JBhQ3l5OXpi
BtJXWVl569at62KIRzLS/TvQeWaxWOR3Et++fUt2I0KEhISgzEJg72gR2q13
oMExoIw6cuQImVhaWooGr46Pj2/4Jw7/8ssv4VK8evUqmgcuZvTIAigpKVF8
i23TOxS83xv+uUn19fVRrHvz5k30MCcwMJCcB6JW9HlZdAIRdXV16AECJKIK
AtTA1dWVJnohLueEtE/v2LdvH8oF1AgQMgj1RaL9u48M+tQsnG3xYZ8VySPF
Z5OPEntH5nav3VXDD14Ymb/Ss29XYZY1J1eXMZCrkm2qdnNpzIEVgXnR+rVj
ww+HWCZqqGZ20q1a2eX2rqjKKfYFYRrDnTn3tka8uz/y3eXY1zOD63rqbrAj
hgjpi10FFV2NyiJMizy05pirdeeqZmU7Lt/fafRcmykbfCtuzig6F5+81DU8
3tjYnEOwGMEa3FU+jmMtNTcF+x3sGaV4vrQRsHcoK639vXK4csiPjAsEAk1N
TfQ3VNbFxcXic0LwiSaZmZmRVxoalw8BxRqqj7755hv0RxO84969exAkiD9j
l/aOa9euofCeJvroLWrF/dVXX6EvpyPvePjwIWpYBSJDLlhTU4NecIvXmE3z
DgC1EmcymeJ9usleq2AlhoaGNjY2KB1qlpiYGDQJ9sHa2hq2i6wN1I+s+qnp
Vw6BKK1xyDF8LC0tUcqwYcMaRKaD3kY1Blw85CakvQNCMnI0Icg1JycnFP7R
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
3yIiekftVNPaKaa1QcY1AQZVvnoVXrqlHtpF7lr57lq5HlrZXjpZ3rpZvvpZ
/obZQcY5U8zyplkUTLMs5AXwIncaJWsqJWMyJTXQItnPPN7LlONuFOViEOGo
G2GvFWGrEWWjzmGrJ7I10mw0cuw0ipy1yjz0qgOM5gVbNM+mL4q1WZZivyLD
aXWuS0/BxJ4iEFxwyZ5xzNjxjiVLllhZWbm6ur425h9//GHFY/Xq1TgkbAxy
7969Y8eO/frrr9gW0XMPgXi7IO/ADeQd+IC8Ax/E2DsKk3WyQ1XnWRtX0Y1S
KBoHPCeu1FeKUyC6kAlesoRJMgR7HTLFVE5Hi0wmSoUlmm3tn3Liy9i+yzGr
N/skxBlYmcqoqcukljPnrXHPnmvvF6DN0iBTZYmmZKKqNFGeRKjQUepk6iSb
qy91sdvn47LCUKFOV56jTKKTpBzM5dctsDq3xfHQSpvWUtNpnkr1tbRT54Pw
OadvERG9o9xPv9xPD4QyX91Sb50iL+0CT608T60cL51sX90sf72sIIOsKUbZ
waY5IRZ5s6iFobTiUHoJLxSHWheGWufNss6eSUufQeNOoyYGUWL9TKO9jKLc
9SJdtCMdtaLtNTm2Ggk2GqlsjSwbjTw7zSJnnTJP/VfqMcOiKYLWHsdcnGyz
LM1+eaZDV7ZjV44TPvkzfhmRdxw4cKCnp+fkyZNDvnvo0CHw7v79+98sJcXF
xRISEkpKSq+NCbxDgseCBQuwjQ0NDfP+YuHChfwJBrx8+XLIXX3//fcwwuHD
h98s2W8XUN/1DM/OnTtBHNDA++CDD8DhFxUVYR8UPffeCqDUncfH+fPn4fab
N2+Cf9va2ob8FLjMwLvNzc1vPT0///zzpUuXnjx5IrD97t27/Oncvn374M+C
xJeXl8+aNSs7O/vbb78dHKG3t5d/J+CaeevpH9eIvXf88ssvly9ffivTyIOf
wNdff/2///3vzT4uNt4BshS06n/77bc3+/idO3dAzfV2k8SP2HjH8+fPwaUL
cnukH/zzzz+vX78Oys+3Em04xNg75AkEDWkCV10uV0O+mWX1n+iIChXpWEWi
PokgJ0eaEW1Q3cEqa2GExunZOiq0bvLvPRG5dG/gma8LN+8LLJxDneimGF9g
vf9K0pGrxSsOzU6uYtFslBTkSdLSRBBI0sR4NfIyE7VyTcWtAZ7/meG7g6W9
wEAhVJ7AlCGqEYnWcoRZhuTJ+mQDGYKbi3r/5+Hf3Cl5s3P0HhHRO/K9tfhD
ro9Wjo92tq9OVgDPOKYaZU03yZ5pnhtmmT/bqjDSuiSKURbFKueFsihmaRSz
KJKZH8HMDmemz6KnzKAlTKXEBpnG+BlFe+hFu+nEuGhxHDUT7DVSbDXSeOqR
a6dV6KxT6qlXFWhcN8O8YTa1OYbelsBamGzTkWLXwbXHJ3/GLyPyDhqNBhq3
oIU25Luenp7gXUdHxzdLyWi8A9sCkZOT408wYO3atUPuqrGxEUbw8fF5s2S/
XT755BOJ4aFSqSAOaDzDf+3s7LAPDpl7X331VW1t7YYNG956OktLS/kT1tLS
Arfv2LED/CstLT3kp3bt2gXelZSUHPJd4A6ghQ8OSlNTMz09XZRkgFoPfLWz
s/OECRNgSszMzM6dO4dFANc2fzqnTp0qsIdFixZ9+OGHWAQFBYVjx44JxHFx
ceHfCRAcUdL2z0GMvWPv3r1MJvOjjz4C5/3f//63lZXVmjVr4Fvg2tMUiq6u
Lrafq1evRkRE6OjowEvo448/zsvL+/3330eanjHuHUCpwC9XW1sbHP6tW7eG
jAOuk4kTJ4JCAOQDgUAAtcbNmzdF3D9ogcTFxampqcFsVFRUBJXRw4cPh4u/
evVqeC5A8TiiAxED7zh9+jSDwYB3qMD1BsrV/v5+UT7466+/gotTVlYWZrKG
hkZOTs7ga1XEaMIRY+8IViQEyUnNkCEUyUzY4uq42pGdrCTtJktQlZTyC9Hv
POrdc8JnxQGv/GZmZK7R2r6ZRc0Tkyvo574u2H9iWs1C1sxk3d7j4Z9eKz12
qfrYtdL69T7+UYb6hjKyZKI0iTCBQLCVJy00UKrXUW4yVG4zVm01UUlTlnaT
lvKQIaSoSC80VZijJ8NRIjpJTqgooN18UH72auGITs1YQETvyPLWfBV8tLJ8
tbL8tLP8gHHoZgXpZ001BMaRNcs8O5ySG2mVH21dxGGUxDLL4tiV8TZVvABe
lMfZlMXaFHNsCqLZ2ZGs9HBGyixa4gxK/FSz2ABjjrdBzCRdjqtWvLNmooNG
sq0Gl62RbqORbaeV76JT7KFXEWBUHWxWP8tyfgStMZrZxGE3x9rgkz/jFzHz
Djc3N1DxYbUM5h2+vkPPbEan08emd5ibmzsOIiUlZYDX4ElLSwsMDOQv+obM
ve7ubrDR2tr6racTegeRSEznceLECbj9jb0DtMowdwDMnj37tWkAxdG0adNg
/H/9618yMjLwNdjP0qVLYRxwecMUamlpDfYO0EyCX+rl5QXyytXVFbyePHmy
wBctXLgQ7GH69OnIO4ZEXL2jvr4eNtsA/HJaXl4+wPsZSggFNKrhfvbs2YNd
nCQSCdsVaAqCrBtRksasd4CyCLMqyJDPI8BvR1lZGUbA8gR4iigPL0AcS0tL
bP9AA7EW75D328FGrFWcnJw8osMZ794BSlp4mYFcAtoFikdY8Pb29gr/IKhJ
QUUDM01eXp5MJsPXoGJ99uzZSKO9lnfhHf+9defTTz/jD8AU8PeOdOkPMxQI
AdJSsXLEXDmpJHkpPzmiIYmgokBo6g3s2Bo6b53r1tPBdT3OqfOoq48GzV/v
sG5/yFd35m4/HFDZzkytNj/9TfHSrdNnJRoe/qJ0xeHIqBKqlZ2iDJmgrEoy
s1QwMZYN0ZLOV5POVyUXaMklqEr7yhA8ZYhJMpIN6uR1FPVOE+UMVWkvwoS2
Wvub31X0bB9/i0qI6B3pvpqvgp9Whr9OZqBu5mRgHAZZ042zZpplhVNyIqm5
0bT8WHpRHKMkgVWeyK5IsqlKsp3DC+BFZZJtRaJtWYJtSZxtIYedE83KiGSk
htOSZ1omBJvHBZnE+hrGeL5SjzhnzQQHjSRbjRTeWI9Me61cZ52iSfqlfkYV
k03nTLesnUWrD6PXhzHwyZ/xi5h5x4oVKwYnGDYbQFUisB/QUsJqsbHmHdeu
XRvRB4fMvebmZol36R2gpQH/PX/+fBaPgIAAWNllDQVwJQmeI8B/c3JywImD
ewBtMP5GiyjeASxMgncrr6GhAfaPunjxIvA1sPGjjz66c+cOf2QgnhKDvKO1
tVWCd9cU9nsBH5fgSROWKn5Onz4N04a8QwCx9I4DBw7A021jY3PhwgVwSdy8
eRNclkAczpw5A+MACzg0iK6uLvjBurq6AV7rF1yisGA8evTo77///ssvv8yZ
MwfGSUxMHFGqxqx37Nu3T+LvDKkSLBYLvAXUA/zWwL+nTp2CTVZv79fPPOng
4ABLcvCz/f7771++fLl161awq9DQUOCAg+PDn/w/0DtevHgBb7PQ6XRYDN67
dw/mHsjtwZ1R+WlpaYFFNOyrDC57cD3DCxiU+SON9lrehXdcvnxlx9/p7z+L
v3d84u5Uo6kQJitFI0k5kAlOJElLGYISiWBMUeg6Oj05zzmpiNV3vWhBr3NK
jUXnHu9z32T88GLd598U9e7zKmqySio3OXIlrW6Np0uA6pY+7s6z6YnzaAxP
ZfcpOkXNrPKFdom5lEkTlVzUSX5yBD9ZghOZYClNCJcjNdKtdgT4rrU2na+t
yFWRmSQ1oSzV6vTZzI7FbqKflzGCqN4RoJUeoJ0eqJM+WS9jqkHmdKOsENOs
MPPsCMucaFpeLL0gnlGUwCxNYpUnsytS2FUpNnO4tjBUwZBiW5lsW55oW5pg
UxjHzuWwsqIZ6RHW3FBq0nSLhMmmsX489XDTinXWjHfQSLDVSGZrpNpoZtpp
A/UomKRX5G1UEmBWNoVSMZVaMc0Kn/wZv+DmHaBpB4px0EAdrq+pcO8AtQy4
COGze1DLwBs4InoHkUiU4OsLJPCN8N3hvOO33347d+4caFMN2RbFAM0J0BwF
7RP+sd7DAUp+UGo9fvx48Ftv1zugHQj3DhEPEAIOEFwwIP8FvKOnp0fijcCy
C+zzfzzgEyhRvOPZs2f+/v6gpce/cd26dXDP2BgfyJDekZ6eLsH3gAO0J4Vc
gcg7hkMsvcPZ2Rmca9BOFhgaBppwwj/o5+cHP4gN4li7di24nn/++Wf+aCYm
JkIutuEYs94xwCvhAVgJNtg7QOkB39q9eze2ET6T/eCDD27fvi1k54cPH4af
3bhxI//2R48eDTlIBNofaAlTqdR/mnds2bIFZumVK1ewjaC0lJOTA9urqqqE
fBZm18yZM/k3go+AjbKyss+fPx9RtNfyLrzj3PkLwDXu3f/ux59+wQL+3rEt
eMpCa0qizAQnaSk1eZKHt9asaEOvIA2fEN22nS4Jc4zbt87o/6aqudcxMkM/
sdD81BfxV/+bs7svePEG14wyk4BZar3HZm7+NDqvk7nxVNT2/rikBlpkicXG
E1N39s9ac3Ray0aflAJLJ3tFdXmiComoQCJoShO4qvLttozFTuxPfDyazI1S
FEm+0lJBLOWrN3K/vC3svI9NRPWOKbqvwlS9jOmGmSEmWaHQOKxyY63z4hkF
CcziJFZpMrsshV3BZVemsqt4Yc5fL14Frs2rkGJTmWxTlsguTmAXxDFzYxiZ
kdZpodRkqB7+BkA9YnjqEfd/6qGZaqOdaa+T7ayT46qX62mU52Oa72ee72eB
T/6MX3DwDlA1hISEEAgEWHF8+OGH3t7e/EUiZDjvAK7h4eEBu1gD1NTUgFzA
vYnoHcHBwbAlwP8WaOjq6upi7w72jocPH06bNk1KSgrumUQicblcAa0ADtXa
2spkMrE+QiCdHA6Hv60C6mJwUDIyMg8ePNi+fTubzcZ6CIDjApnDv0NRvAPb
YWdn53C519zcDKQAdqIGXyfzF2fPnhX9ALEvAjFBxhoYGMCYYCcC3gFa7Ek8
vLy8YJWXNBTwXQD8FzQGBg+wFd07huTFixfwqHNzc/m3D+kd8+fPBxvhJGDg
wGE/K4HKFAN5x3CIn3ecOHECnuvNmzeP6IOgVSzB6+k3uHwToKSkBH7FiCRi
LHsHBBt9Ntg7MjIyJPgeL0LAscAiqLq6Wshu3d3dJf4a4PZa7ty5AztxgUIA
1DX/NO+oqKiQ4PXUFdheWFjIX2gPBhgcfGYh0B3r6dOn8BzB6lXEaKLwLrzj
9Ol+4B2Pv3/6Fl3jDbxjir7aMoZFsYaCm4xUUo714r2BrVsmVS9z5hSbt++a
tOE/Acev5u8/Fzd3ue2MMHUDPemoBNMN2yYtXeNYNMdi2gw1Q33pwnrW59+W
nbpecfrrvHWHg1IbrVfuDfrP1djzt0rP/nfBhpPR5UtcpkfpU8xk5MhEAomg
QZKqppqXmOuGmCmV25itc3XkKpEnyxHpZKmVKzzuPhLbceXpMwzSZxhmhBhl
hZpmz7bIiaLmcazzgXEkMguTWMXJ7NIUdhmXVZHKrExlVKUy5rwKdL7AmMNl
zuGyqrlsEKqAniSxSxNZRXHMfA4jm6ceSTMs4qeYcPyAeugA9eC8Ug/NBFut
ZLZOqo1Oup1OmqNOqrNeqqthqrsxCPjkz/jlXXvH+fPnVVRUYE0EGoTw4QJ8
LTAv1pDeAS48eXl5TFgweYGI6B1NTU0KCgrgxdWrV7G3wLdL8LpYg8b2YO8A
bUts9KK+vr6mpiZ8DY4Oe6YPakxtbW0sMSDlmFCA9jy2q99//x3bCB/TYNEA
QUF/m91OFO/Adsh/S18g92AVMxhszLUoB4h90bx587CO7uDEgXpHwDswRjOu
HDJK7wD6AOu+uXPn8m8f0jv27NkjwbspeuHCBRsbGwnezTqBDloYyDuGQ/y8
o66uToI3cECUh4AY4HcBf0f8E80NB7w5DGR/RF8xrr0DVhChoaEibscAJRK8
mbB48WJR0gBdAxRrL168cHNzk/iHeUdSUhI4ZGdnZ4Htu3fvluDdFBruoTw4
anjuBs/uyGazwXY4cFLEaKLwLryj7z+nQDV0/8Gjb278986dey9+/Pm9eIe/
vtp8HaUcBdIMe801J0MOXOH2f1P3SV90xgJ6bhtr+5mg9Sd8F25yScs1dLST
VZMnqhGlXClywW4qdtby2uokMkHKzEyhe+uk4xdCjp2a3Nnrkj3X8tz1OVtP
cKtW2G35T/aJa3PnrvOIL6Ta2CsoyROJJIImUXKZ+8TqiZZuNA2OhU6Xo328
ItlPlmhJkLI0kl+47A07wL9HRPSOzHDTzNmmWRHmOVGW+RxaQTy9OJFZnMIq
4bJLeaE8FUgHMA7r6lRaDRcEK16g/hXAa+saLr2Wy6zjMmu5rJoUVlUyqzyR
VRzHzIuhZ0bSuGHUxBnmcZONOH76PPXQ5jhrxTnoJNjqJLF1kmy0Em01E+y0
Eux1Eux1QcAnf8Yvb+AdXl5ep4fC1tZW4u/e8b///Y/BYMCmXWdnJyjuwJbN
mzeD2laCNx7thx9+wCIP9g64TgcsKkEzElx+YAvwBWx0oYjeAZrNsCguKfn/
yp+YmAi2LFq0iMPhSPzdO8DeYPkJtAIrXnp7e+FDjXXr1mExIyMjQeNk6dKl
Dx48GOBNWgj2I8Hr+Io1w7DWO8DQ0HDnzp0vX768e/cubGALdDB4W97x7Nkz
8BVwPAWFQrnLA5skVsQD5E852DPIq4cPH8LmxJj1DuxO9dGjR/m3D+kdoKGI
STFAT09PSEsDecdwiJ93wMIBFHQDvB/1tm3bWltb9+/fL7wX5YYNGyR4t0eG
nI1ZAHgDf+LEiSNK2Lj2Dlhu5+XlCWyPiYmR+Oux45CA0hXu89SpU+Bf8CPt
6Ojo6uoaciKs5cuXw3L1+PHj4F+Qw/8076ivrweHrK6uLqC02Bic69evD/lB
4Hfwpo2A32GjyMPDw0WPJgrvwjuOHTvOP7jj0OHD9x88xN870lSlC+UlAyd8
FB1F3dgftuAT99M3Gi7cbK7scgiI0p6ZYFC8wCKz2NDLW9HXRKbGgFyuKJkn
PyGcNMGOKKlBJMhLE8lSBEMDmfwC47nVpuFhmgFBmldu1Gw4muzkppJe6/Cf
r+vmbvDgFFNZTopKiiRpEkFGSrLC2rzB16XQxbjNkTGfYhYlT3IlE7RJBKKU
FFlaSsSTMnYQ0TtyYi1ByI23KkikFyczy7jsilSbyrRXoSKNXZnKqkqlA+Oo
5VLrky3nJlnOTQSBwgsWr0IS5dXGZKu5KbR5XPpcLqOeZx9VYFeJzMJ4Rg6H
nhZJSwqjxM8wjZ1iGOOvF+OlG+OmE+Osw3HQibXV4rA1YtjqMWw13t9XAZ/8
Gb+8gXcIh987gGvAje3t7fz7gR1QJf5+U3qwd6xcuRJGE+iS+vPPP8PtInoH
+Dior2HDEm4HDU5gPcCGvv/++7CwMIm/e8eqVatgzSVQtoDKC2x3cXHBtrx4
8UKg+3dfXx9MybJly+AWrPXu4ODAv/QDbIQDDhw4gG3EvAP4msPfqaioENih
EO+AzJw5U2Ko8R0iHiD2Rf/+979Bq5s/5pj1DtiVC+SDwHkZ0jt++eUXKMsA
IGICfd4OHTpUVlaGTY2FvGM4xM874A3z2NhYcAFgPTwleBN0g2t4uE85OTmB
ONOnT3/t/kEpAR99zp8/f0QJG9feAR86CzyIBOTm5oLtJiYmw+0Tlt4SvBvs
ZmZm/NVNcHAwKISxmLdv34YD1bOzs+GWf6B3wMe4AKzsGuBdctgEYgJj4viB
j33BucDGaIBaYNasWfCD4AofUbTX8i6846uvv+nvP3vv/nd37t779LPToEo6
cuQo/t6hSyTYq5NMVQjhafTtF7LCsylli9zP3qpvWOPmPVVDXpagokLS0SHR
VYmf59pe8TfZqELoVCXUKUnFy05wlZYEH1eRJUa4KrcFKxfbkdkKUjrKpJOn
ws7fKIpJNWvfML3/xvyatc7hhebWLgry8kRpkpSsAtFWgTifYtjjyFrmaJej
pTJZlmhMlFIhEUzJRCsyUcSTMnYQdf2OVHpBKr0wjVGSzipPt6nKsK3OtKvJ
tKsGL9LZNWnMulTruVxqQ5LlggRKUzwMFrxgDkNjgkVjIqUxybIx2aqBZx/1
XEY1l1mRzCxJYuTF0zM4NG4kNTHMPG6GCWcqUA/9GK9XS3tEOWtHOWhG2apH
sFUj2CoRLJUI5quAT/6MX97MOySHAnbF4feOiIgICd7sJQJjyf/8809YfYDW
NbZxcMs5OjpagjfdIn/NMjDy+awqKysH/hrICTt3bdu2DWuFDvaOyMhIiaHu
v8EpbtTU1IbLH9BwPXr0KEwJ9mxlSE0Y4E10A7cDvcI2Clm/A+veNnrvEPEA
sS+KiooSiDk2vQOOUQUsWbJE4K3B3gGaFvChDwTkhsBgE/huTEwM/Bd5x3CI
n3fwN27V1dVnzJgBijL4lBaUckNeAGAjjC/woG0wv/76K5x1TU9Pb6QLuo1r
74AVREdHh8B2OLuXkCH28EGSBG86pg8//NDFxQX8KrEfL1APLCa87QCyF8vY
f6B3gOoVlPkSvMfu4eHh8+bNA1kkJSWF9e8VcoliFZCBgUF5eXlBQQG8ViHY
4zkRo72Wd+Ed/OH5i5e7d+8BtdL3PzzD2TuCEgyy68yisgyT5tAOXCmZs9yn
coXrqa9KG1e6uk9UosgRHGWkrIiSGdqyLzsDHqQHfeHrdNBEZZM2uUlFKkFW
0ktact10jScVxlf8lXawyZUGUvbSEzKSTU9/E796/+T/fFG2+2zqnB7nkDxj
Mzs5fYpcWI5BVJ6+vauCpzqpQE22VksuUoFkRSKYkIg+ZGK0HClKcehKeSwj
oncU59iAUJpjW55tW5VtV5NtV5ttV5dlV59pOzedPS+N0cClNSVRWxMs2+Mp
C+Moi2IpHbEWvGAOwiIQ4szb48zbEixaEylNSZYNyVb1KbQaLr2KSy9Nphck
WWfH09I41ORISkK4WVyIKWeqcYy/YbSnXqSbdoSz5mwHtXBblXC2SjhLJZz5
KuCTP+OXdzq+A7Yhh5wjETRlJfgW+BsYquUMb6rwP1+AvJl31NTUSPw1cSVs
kIPCc2Ao74B9w0DbI/PvgOYH/Bb+qWlAIQ/2A+pBIyMjfk3AVr4bzjtA4wFu
578rhZXnoC4WWKz8woULQnY4Iu8Q8QCHS/nAmPSOr7/+Gt5QBcc7uM+8gHeA
CLCjC6iLoYUB8vPzsfhXr16FG/v6+uAW5B3DIX7eAWecgG1abLqka9euwXvp
4Gcy+CNwjgJRxmvAWdQAW7ZsGWnCxrV3wJ8naAYLbM/Ly5MQ+rwDe/ANChZs
WU9Q8MLns6B1DUfxL1u2TILXzw2b6HjgH+kdgOvXr8MppzDAJQ0nPQAIr+7r
6+v5RyDCghGulMR/A0rEaMJ5194BQl/ff0CtdPfb+zh7R+vBSRv6pi3d4ZXT
Su/Y67//Ssz529Vnv8qes4BdE6DZZCDdpE7MVZLqoijdLWCey7a+Fe97fbLj
EROZ9TqkcvmPN1iSf1/o/F2i5Zce6qccFZebEiIUJS3kCI0LWUeuzNrZH7ls
V2DBYtugVD1WoEpuJ2PVCdeWXU6pc6lObgqWSkQ7MjAOghaJEChDTFNVKNbT
ylEmi3hSxg4iekdFngMMVXn21bn2tbl29Tl287Ls5mfYLkhjNXEZrcm09kRq
R7zlkjjLZbGWnbGWy2MpIHTFWnTFmi+PNe+MNV8Wa7447pWAtMW/evYxL8my
Ntmqiksr5dIKk2m5SbTMeKtUoB5RlonhlPgQc85Uk2h/w0hP3dlummHO6qEO
qqG2KqFs1VCWaihTFZ/8Gb+8U++AS0QN2duzqKgIFlbYjanBLWc4SHNwLf9m
3nH79u0PPvhAXl7+yZMnRCJRUVERtigGewe2stVwYN28z549ixXvoMkB6ri0
tDT4OPu13vHy5Uu4fUjvGOX4Dshw3iHiAY4j73j06BH0PmCyQEAGRxDwDqwH
YFdX1wBfUxD+O/BXD39TU1NsD8g7hkP8vANOouvh4SHwCCwnJ0eC14Qb/JGg
oCCJoQbzCgCX1AFwudw3SNi49g4KhSLxd7uHwBF2Qm6SY5PoYuuTQkBJDnvB
ATF58OABtEJQAiTyoa6uDjZaWFiA13DBR1EY794xwHusdvDgwXIe4FjAv7D/
FZCF164qDtoDS5Ysyc3NBeUkHH4I7wEKZKCI0YTw1r3ju+8eX/78CjaW/Psf
nu7evRvUSk+f/YizdxQuczp2teL459yalezIItNlu/y29E1buN5lQbrJw32x
P+wpuBDh12OltdZa5YdV4XvXuu/OYzyp9bswSXunGXmp2oS7KeZ/7gp8Ue76
IJZ11kl5nSkxTWUCjSSlrSadW2G9eLNbRQc7IseI5akUVWLRtNN129nJvf0z
6ze7cQpNmDZyZDJBkkiwlCFmaCplaykvdHKo0hp/N+FF9I45hY7/FwocqvPt
63Lt5ubYNmTZNKWzW1NZ7SmMjiTrJQm0znirrjirFXFWq2KtVsdSQeiOteyO
payOtVgVZ77ilYCYLY01WxRn1hJn1hBvXpdImZNkWZ5CLeFaFSRb5SZZZSbQ
0mOtuFFWyeHU+BCLmKkmkf76sz21Q900Ql+ph1qorXq4jUY4WwOf/Bm/vFPv
gE1BP78hFsqEdQ1oAGNbBrecYT01eIbbN/MOAJzbBHZDxer9wd4Bkx0cHHxt
KL766isY7c6dO3BUMvgL2qtYY0BPT2+Me4eIByi6d4Dm2QsesEcE0LoXQwFv
uH388cfw3yHLkzfwDpCTcNlBUKXu379/yDgC3hEaGgr+1dLSgpN3AQOF62rB
lbCATsI+IWvWrMH2gLxjOMTPO2AH0cEr18OBUeAyE/ARcBUpKiqCt4CYCNnt
li1b4HXl6ur62rbfkIxr7wAeJzHUbSg4mma4agVw48YNuE/smS8GLGxBQxf7
eQpByCMVAcTAOwbT2NgoIXQe3eEA1yp8ViV8glwRo/Hz1r2jv/8MsIyDBw+d
P3/h9On+Xbt2gX/PnD33Fh+giOgdEdlWxUv9D39ZULmc7TZZ1YImP8lHw9lN
pZCqcH8p586FzGMl3qfTpiynK3/XPevL7qnHOt3/+C7/6Yapx93VttPIv20N
OrPZ5VgF80Wp10UXpU9o0kWakkwZKRkpKTNZqRksBR9HJT09MtVeqaXXa067
W+MW9yNfZ3fs989uY3gGa6gqE6WIUh5KcjUO1ARb3QITvWL1kS0VNBYYqXdU
F9rX5tvV59rMz2Y3ZbDa0hiLuIwlyfRlSfTlifQVCfRVCfTuBHpPAn1tIn1d
En19kvX6JNq6ROqaBMvuOItVsWZAPZbEmrbHmjTFms6LM6uNt5iTSClPsSzl
UotSaPlJ9NwEelYsPS2KBtQjdqZ51FSj2f56YV5APTRDnTXCHDRn22tF2Gnj
kz/jl3fqHXCLhobG4EoW7gqIALZlcMsZTscEykmB5Wjf2DtgswGCDZQe7B2w
k7CV1WsWnWxqaoKNEKyhDhlr3gEyQWAPIh6g6N4B2uevrfSHZPAEQSP1DrAH
bGHitra24aIJeAfsHA4uMCzCDz/8wGQy4X7g1M0C41+QdwyH+HkHaMeCE62p
qSnQaaq9vV2CN9myQHxQisJrg3+yOwEOHDgAJ4MFrd8h1wwVhXHtHWlpaRK8
uzT8uQqKQTg7upD17H777bcPP/xQYqhxW1D3QFEMTKFtKOA9Fmtra/BaYL0J
IYifd4A61NTUVOLvc7yLCLYYq/CiT8Ro/Lx173jx488XL13et38/nMxq586d
QECev3iJv3fEN1MqugMPf1E6d5W99zR1NRWivKQUaYJktpHC2Xj7mnTLlBl6
F4qm9bC1V9qr/nIgZuBa9sDTit+vxH2abLDaUfbHvaG9zbbb57L/WD3rXpLB
QReZfPUJbLJUhpnsQkuZYm3SdFlJo48mRCYab/ksmFNsNbPAbPeV/K7DIRmt
DP9IXW0daSKRMFNdscXGZDZdvcaescbLQ9TzPWYQ2TscQKgudKgtsKvPY8/P
YTVlMtrS6YtSrZek0DqTaV1JtJVJ1quSrLuT6WuSGeu4rPVprN4M1sZM1sYM
Zm8afQOXtjbJsjvBYmWc6bJYk0WxJi0ckwUc03mxZnXx5tVJlCoutZxLK0lh
FCUx8xKYWbGM1GhawmzLmBDTiCkG4f66QD3C3LXCJ2pFOOuAgEv2jGPeqXd0
dHTAgoh/6DRg//79cDv/xLaDW85wC2Dbtm38H8eGcI7UO8AFDAeH8vefGewd
WLI3bNggJDdgVxzQCOHXoidPnoBDkBgb3gEfKoFDFrg9K+IBiu4do1+vHEOI
dzx//px/3cMBXoMkICAA7gqb72tIBLwDLtqira3NP+0VOHdw5AsE/C7494C8
YzjEzzvArw8+mBDwCHixDZ6u59ixY/DawEYfCHD48GE49aiWlpbwhbmFM669
A/x44Vv86z7AZ6D/+te/+CfFffr06alTp/hLLVhKm5mZ8Re22A6FTND0zxzf
AbJO4F4fNodkf38///bz588LTPvMP3pxgHdjB96QEei3IGI04by78R0/PHn2
4LvHb9c4RuQdJevtNp+J39GfPHeJ7UxflTJzmWpNQoTshHJDuevtodsXu9cE
a19I99/tbZqkLFkyUfPMEs+bm4L6SqkdfsrxdJk7awN+uZv8y6Xw53VeV6Zp
rrIkxqhItTIVT/jqHQ4w3GCjNt9YboqsZFk5bdG2iakNFqWrnE5cr93wKSej
nenP0dc3liFKE7yUZZc60tJNVbu9XHZMCxKe4DGIqN6RbwtCTb5tfT6QDmZT
FqM9w7ojjbY01Wp5CrUrhbryVbBaxaV1p9LXpDPXZ7J7c2w35dltzrPfkme7
KYfdm8lYn2rVk0xZlWC2PM50cazJQo5JK8e0iWPWEGc+N8GiLplazbWu5DLL
UlhFSSygHhlx9ORoq9hw86gQ44gp+kA9wr21Z3toR7jrgIBL9oxj3ql3gPoR
9kQiEonYIErwdfBprLq6+rNnz7DI1dXVYCOBQMAKTNCegZU1iA+n4ADtTFBP
wX68EiP3joG/pnKqra3Ftgz2DtAWVVVVleBNpbV69WpsOyixExISsAEpLS0t
8EuxRY3BoYGmONyIs3cMzr2BvxauxZpP4C1YlYt4gKJ7B6h07vOAI0DBWbs/
FOC7JHhLusN/QeUOPw6ukx/+Aq7YEhISAv/FrpAHDx5AZ/T398eSN2XKFJjC
mJgYUHt+9XdA6wVLsIB3YPkcHByMTW4MGnXGxsaYdwCjbGxsxBKAvGM4xM87
AOAKlOCJPKj74BZsTNDgnwM24dKQmQBkBN7SB1dUX1/fjRs3+K/Swe1zIYxN
7wAugP1+165dC7PizJkzcAs2MH/grwIZ+D5s616/fh3epXF3d8fiAAGBy8ty
OBxs45UrV+DMw2AjLOJA6QEbuqAUEpIh/0DvAKcDVGogc+A6HaByXLNmDVyb
SWCOl5SUFFg7Yyvqnjt3Tk5Orrm5GctkV1dXeELBtYd9UMRorwWHceXvyzvy
u5xre51qV7BTUvS2B+s/KWRf8tfcbC7TpCN9PNfh6wWTL8ZNPDOd3UNVTFIl
WBCl1ImS+tKSWWGmJ7d7b1hisyvf7OXOqT+t8O63U2lVk0ogfLR4mu7tKuer
qT7Xi6acibbptVFNUZKqK7U+enHmZ1+ln75R+dmNyp6TM3KX2PjE6BqYy5Kk
ifpkYrKmMldNqZ1i3Gg8/jr/iOgd1bmsmlxWbS5rbg6zMYvRlkFfnG69LM2q
K5W6ItVy5atAXZlGXZlOW51J78lhrcu37S102FzsuOVVcNhcaLcxj70+i74m
lboq2WJ5gtnSV+phuohj1sYxb4m1aIynzE+i1qdYV3OZlVxWaQqrIJmVlcTg
xtPioy1jwk0jQwwjpurPDtSd7acT4aMNAj75M3551+uVgysHW2RcUVERNndh
03Tnzp38MQ8dOgTfMjIywq40OMUiBNRQsD4CDVf44g28486dO3v27OFfr3Cw
dwBApQlbuRI867G1tcVW9G5tbYVxgBrAp/8SvLVx4WDtf//737CXDs7eMWTu
gVYQrKwleDdawYkA1ib6AeI2rhzIjsQwgPyEU8SvX78e2wgbLdjUBMPBv6yV
gHcA/4J9+CV41S6oo+H4Uwne46GoqCjsogXHAvMTecdwiKV3gDYb7DD5wQcf
UCgUbGZde3v7wTNWYaPFHz58KPAWsFrshzYkoEgUPVVj0zvABSDkAPkXCgTp
h9NugJLT3NwcTogECnb+Fj4oD+EHwU+S/1vKysrgdlDA2tnZgR8mPDtCVlQZ
+Ed6B5CCjz/+GOaVrq4uzCgJ3lN+gRUDsUIPq4OCg4OxUhFUarD6AH9BRcz/
QRGjvRYx9g7PcE0nfw1re0UfK4XvuwJ/3zfz6Xyfy4EGK/VIXbbqX6TYHfEx
XEOVK1IjuJKl1KSJUhMmhE6nPHtU/PB+6vnPpm9oYqwMVN1EkW5Rk4qSlfQi
Sx4JNnu6IfZU7cQT5U53eyIPBRkVaRILwwzvPi54/Hz5te/a9l7idOzzTWqi
uYapq4HTTiTIyBCZ8tJhKrKZ6gpzdRVHdGrGAiJ6R22mdV2mdX0mvSGD0ZzB
WJTOWJZu3ZVOW5VOXZ1uuSrdcmUGdWWW1coc2uo8Rk+hzboSh95yp82VLltA
qHDeXOa4sdhufT6rJ5MGJKUz2WJZgvnSOIvFHMoiDqWdY9kSZ7kgkTov2bqO
y5jDZZWnsopTWblcZnoyPSneKi7GIma2SdRMo8hg/dlTdGdP1pkdpINL9oxj
RuQdsBdKZGTkkO/6+/tL/H3IBgSU3u7u7lgDGLxwcHD48ssvBaKBdjicDUOC
b/DFAG8SRVlZWeyzdDodvAtvdGMt5OG8Aya4rq5OyEHBVUKCggSfQoIUBgQE
YMmW4M0en5ubi92lH+D12ZaTk4PvgjoUOBdoz8PJkfi9A/bZEGi9//LLL7Da
5e+EBtvtgCGX4hWyw+FyD8TB6iAAqLtFP8DhUj4wvHdAswBNiyFTDidUAU16
ge1wPszhePLkyQCvJYBNEb9v3z6wJT4+XsinJIR6xwDvrmBxcTFsW0JABQ0i
3Lp1C7wL/oLrHCgSm82G8ZF3DIdYescAb5I0Hx8f7N4C+LUmJSUN2eavqqqS
4LWBByvJvXv3hF+lYuAd4Lcp5ACxkhACDgEupQSxtLS8fPkyfwRQhMJZqsAP
XOCLuru7+efiAz/e166WAu+GZWRkjPSIxq93DPCeXNNoNKxsB+VYSEgItsYf
BijuwLsTJkzAqpvffvstJycH61EgwSvkt2/fLvBBEaO9FjH2jqgcExNz2Y8/
nFDgb/ryWu7nu6f9ui3zepjVFjOZVDnJTGVChopUlLJUopXcZBsFM11pPQ3y
+dMpA793/vis6e6t1FOHAtvKKSE28lR5ojKRwFIhXY6deHaeb1GsQUG0/oP9
MUdnUou0iQHapG27p168nbT34uyuI0GVa51mlBpZ+ylau6p4hOi4+KtaWMpS
lKRd5aSnyIvt+h31XGo912peKq0xjd6WzliSzuhKZ6zKsO7JtOrJonZnU1fl
0FblWa8qoHeXsHrK7dZVOfXWTNxc57YFhFrXzdUuvZWO64ptu/OYKzJpnanU
zmTLZQnUZXHUJRzqIo5lW6xlc7zl/CSrV488UhkVaaySdFZeGiszjclNoScm
WsVxLDiRptFhRpEzDSJm6EfM0MMnf8YvI/KO0QAKvRMnToBqgr9v1WDOnTsH
ogn0HQVNxGvXroFW6+DbiZDhvGP0gGseNDj37t1748YNgeHtEKAPoKI8ePDg
4FIdf4bMPZCwvr6+w4cP8z/lwXjtAQ7JcN7xroGaMKKuKZAh1yuH3L17F1xa
4AIbfPhAebC2B/KO4RBX74CARv7x48dPnjz52uoPB8amd7wB33777YEDBx48
eDDku9evXwfl2HDFESipdu/eDf6+u+SNd++AgOILVEygeuLv6sYPqLxABP47
aRBQn165cgVUCuCnLWT/IkYTghh7R2qlJdNGkSQpuTp/0p1zmV3ltN8Ol95O
cdhJl89UkaIRpShasosq6Se3O65fTC1K0oiYpnn7Zt5PL1p/+3X9k++rr16O
3LJ2Ijda10RbmkggsFWlr+Z4X1zs31pisajS8v6+iGOzLEv1SC7SUg4MpZbV
9iv2uFeusompMfWI14issChexq5YZpc9nxGaYsSwkVdTJKmQxHa98nmJlvN4
i/01c60XpjGWZTBXZjK7sxhrc+jrcq3X5Fv3FNJ7Spg9Zaw1VbZraxzX10/s
nee+uWHS5gaPzfMnbax321DjsqbSYVWxzYo85vJM685UWmeydWei9ZI4WgeH
2s6hNMdRGhIs65OtqlOtKzIYJZnMgkxWTiYrI52ZmkZPTrZKiLOMjTaLiTCO
mm0UFW6IT/6MX3DzjnfKu/MOxJC8F++Aj0uAeojuRxhCvENEkHcMh3h7x5hC
bLxjjCMe3jH2EWPvSCmzZDAUJCdI1kfb/PlNxqMzkX9cKHg832P/JPUCdYKT
EnFHt+vLh3EPb8z66ozPtrW0imKdM2djPv8i/uXL9T/9uPTra9HbPnHLyjS0
MJBWlieZqJIOhls/2JX4+bFZX+70v7M8dJuzbqEGcZIsQVmKoKZOdvFW85iq
TnWQjyoxa9/ttfFI5JrdwUs3+xe12c9MMmSy5VUUSfic07eIiN4xP57SEE9p
TKS2pFh3pDGXZ7FW57DX5rLW5zN7i5gbSlnrytnrqmzX1divr3daP2/ihga3
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
BXJuVegdkJ4AvUM+QO+QD33YO0YWGltaMpUUlaYNtf3r+8wHx+L+PJX7cIZX
Uz9BrgBxZqPbVrq/uD/s/rWoK8f8tqwxKx6veux4wrkLyS9erPvl54VXLw/d
stljdJaWoSbOYWC6PGx3rPm9huHn9kddrA+8tSR6i4tanhDtR0M4FIQvIFx9
+V4DBCaOjPgC/bnbfdbvjVu9PWzhhsD8KodBqVpWNgwuC5PPPv2IyOgdQDpS
zRljlCkbki1et4x81Zr024HEB9M9d/cTzFbHpqthrSvc7t6OaW8Lv/Cdz+Y1
ZtVztE+eHnrvXs6P9/Lu3cu9ejkBVHVBvq6/M9NdHR/mzt2TZHSk3PXQDJdD
5S5HprpudlXJEaADGEggqjRUj5ofq5w8VNkrUZBcblS1xWfp5uBlm4Mqa73z
Km0jU7Ss7RgG+vC5ge+gj3kHCZ1O/6dLBJEG6R1i5syZ86k/0cbGhsvlSh+C
2hXw05As54d5h6urq+RGoHdAPhjoHfIBeod86MPeEZmkYaBBCBHEW5X+/PCo
179W/Hk5/eHXHnujVEfwKCOD1H5/POrFk+Lff6m4fy32+H7XZTU6jbsHnDmX
dfdu6c/Pyq+3JdXv8MzM1cxI155eYjxulGZVsPByYeC9lsz2rcmHE+0WGDAS
mYgRgghpmBbrzUuZjWrpMqq3+hy4VHr0ak3zycKtrWkzljuNnmLlE6ysrdb7
bv6R0Tsi3Dlp+vh4geJ0Q8bTLVF/nEx+dSju3jyX/ZGiDfbMncN1bt+KvfVD
TDt4XQ0DVf31Ar36hsAfbma1t2e238q8djVpZ5PXwsXWMytMy6caTx2rM2uI
Wkum1dEZbkfLPVoSrObrM4axkGAqEsJERhhSx9vRC2xoIyP4szd5r9oWtmpr
+Mqt4Su2hIKqTp9k4R+h4uYLx5W/g77hHX/99ZeDg4Pd33SaLRDyubF48WI7
Cb755ptP/YlHjx79gNE3J0+elCxnfn7+B3z0yJEjJTfySe9L/0eA3iE3oHfI
B+gd8qEPe0e0F7fUlVdizoigKlaGmzw/kPRsVb9jadqLg7j+WnhJnsVvTzP3
7/Vq2hn0+E7WzVP+G1aYTJ5o2Hpw6E8PJz66n3+tLWlTg/vGeveLF2LOnoxo
3ulTMUZnpSuvNcFiV7zVcitujjIaykLGOnEWBwsWe/GmurISnejxg0V7z48+
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
    "], {{0, 259.5}, {532., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{144., 144.},
    RasterInterpolation->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{532., 259.5},
  PlotRange->{{0, 532.}, {0, 259.5}}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.946837976098465*^9, 3.9468379811488934`*^9}, {
  3.946838968087618*^9, 3.94683897251694*^9}, {3.9561714107695427`*^9, 
  3.9561714162792263`*^9}},
 CellLabel->"Out[10]=",
 CellID->791685692,ExpressionUUID->"2a19565c-5443-42cd-a4d3-5ce37afd6aeb"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Source & Additional Information", "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Source & Additional Information"},
 CellTags->{"Source & Additional Information", "TemplateSection"},
 CellID->871630328,ExpressionUUID->"52a3a92c-6a84-4f1d-8896-014efb3578fc"],

Cell[CellGroupData[{

Cell[TextData[{
 "Creator",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Contributed By", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Enter the name of the person, people or organization that should be \
publicly credited with contributing this paclet.", "MoreInfoText"], 
        Background -> GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> 
        GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoContributedBy"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "0604679e-d34b-41ac-8060-1934a5d55ce1"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Contributed By"},
 DefaultNewCellStyle->"Text",
 CellTags->{
  "Contributed By", "ContributorInformation", "Creator", "TemplateCellGroup"},
 
 CellID->57534933,ExpressionUUID->"75768974-e956-43bc-82c8-5d1b9339d553"],

Cell["Faizon Zaman", "Text",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.946763457815236*^9, 3.9467634594228897`*^9}},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->855757352,ExpressionUUID->"176b1678-c659-4c57-8f56-187ab91a5136"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Source Control Repository",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"SourceControlURL", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "If this paclet has a corresponding source control repository (e.g. \
GitHub), you can provide the URL here.", "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoSourceControlURL"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "81149a86-8da2-40c0-976f-282a7e039b93"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "SourceControlURL"},
 DefaultNewCellStyle->"Text",
 CellTags->{
  "Source Control Repository", "SourceControlURL", "TemplateCellGroup"},
 CellID->221376991,ExpressionUUID->"77947494-fa07-4291-ae83-3ce65bdbd23a"],

Cell["https://github.com/dishmint/ImageFilterAnalysis", "Text",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.946763462200363*^9, 3.946763469390263*^9}},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->75689085,ExpressionUUID->"bcf8f111-b5cd-4c88-9246-f17c4febd3b0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "License",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"LicensingInformation", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "Choose a license to specify the terms and conditions regarding how \
your paclet can be used, modified, and distributed. If submitting to the \
Wolfram Resource System, this also includes the terms outlined by the ", 
           Cell[
            BoxData[
             TagBox[
              ButtonBox[
               StyleBox[
               "\"publisher agreement\"", "Text", ShowStringCharacters -> 
                False], BaseStyle -> "Hyperlink", ButtonData -> {
                 URL[
                 "https://resources.wolframcloud.com/publisher/publisher-\
agreement"], None}, ButtonNote -> 
               "https://resources.wolframcloud.com/publisher/publisher-\
agreement"], 
              MouseAppearanceTag["LinkHand"]]]], ".\n\nSee the ", 
           Cell[
            BoxData[
             TagBox[
              ButtonBox[
               StyleBox[
               "\"style guidelines\"", "Text", ShowStringCharacters -> False],
                BaseStyle -> "Hyperlink", ButtonFunction :> 
               Symbol["DefinitionNotebookClient`ViewStyleGuidelines"][
                "Tag" -> "ChoosingALicense"], Evaluator -> Automatic, Method -> 
               "Queued"], 
              MouseAppearanceTag["LinkHand"]]]], 
           " for additional information about choosing licenses."}], 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoLicensingInformation"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "0f8abb86-a784-491f-94c5-85a9768eaeec"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "LicensingInformation"},
 DefaultNewCellStyle->"Text",
 CellTags->{"License", "LicensingInformation", "TemplateCellGroup"},
 CellID->279656547,ExpressionUUID->"c4ba5188-1c22-49f2-ba44-67925a41462a"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TemplateBox[{
           RadioButtonBox[
            Dynamic[
             CurrentValue[
              EvaluationCell[], {TaggingRules, "RadioButtonValue"}]], {
            "MIT"}], "\" \"", 
           StyleBox[
            TemplateBox[{"\"MIT License\"", "\"\[ThinSpace]\"", 
              
              TemplateBox[{
               "\"\[RightGuillemet]\"", 
                "https://resources.wolframcloud.com/PacletRepository/licenses/\
MIT"}, "HyperlinkURL"]}, "RowDefault"], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           RadioButtonBox[
            Dynamic[
             CurrentValue[
              EvaluationCell[], {TaggingRules, "RadioButtonValue"}]], {
            "Apache-2.0"}], "\" \"", 
           StyleBox[
            TemplateBox[{"\"Apache License 2.0\"", "\"\[ThinSpace]\"", 
              
              TemplateBox[{
               "\"\[RightGuillemet]\"", 
                "https://resources.wolframcloud.com/PacletRepository/licenses/\
Apache-2.0"}, "HyperlinkURL"]}, "RowDefault"], FontSize -> 12, Editable -> 
            False, StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           RadioButtonBox[
            Dynamic[
             CurrentValue[
              EvaluationCell[], {TaggingRules, "RadioButtonValue"}]], {
            "CC0-1.0"}], "\" \"", 
           StyleBox[
            
            TemplateBox[{
             "\"Creative Commons Zero v1.0 Universal\"", "\"\[ThinSpace]\"", 
              
              TemplateBox[{
               "\"\[RightGuillemet]\"", 
                "https://resources.wolframcloud.com/PacletRepository/licenses/\
CC0-1.0"}, "HyperlinkURL"]}, "RowDefault"], FontSize -> 12, Editable -> False,
             StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           RadioButtonBox[
            Dynamic[
             CurrentValue[
              EvaluationCell[], {TaggingRules, "RadioButtonValue"}]], {
            "None"}], "\" \"", 
           StyleBox[
            
            TemplateBox[{
             "\"None\"", 
              "\"A license is not required for personal deployments\""}, 
             "PrettyTooltipTemplate"], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           RadioButtonBox[
            Dynamic[
             CurrentValue[
              EvaluationCell[], {TaggingRules, "RadioButtonValue"}]], {
            "Other"}], "\" \"", 
           StyleBox[
            InputFieldBox[
             Dynamic[
              CurrentValue[
               EvaluationCell[], {TaggingRules, "SpecifiedLicenseID"}, ""], (
              CurrentValue[
                 EvaluationCell[], {TaggingRules, "RadioButtonValue"}] = 
               "Other"; CurrentValue[
                 EvaluationCell[], {TaggingRules, "SpecifiedLicenseID"}] = 
               Replace[#, "" -> Null]; Null)& ], String, FieldHint -> 
             "Other License Name or ID", FieldHintStyle -> {FontSize -> 12}, 
             ContinuousAction -> True], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle", ShowStringCharacters -> False},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJylVE1PGzEQBfLBV4QAtVKPq6jXJLTqqSfCBkokCihOe+jN7M4SC6+99djA9tRrf1Nv/\
Sn9JR3vJpvQElUtl5V3bD+/efNm+\
q0OazCbS2DNC2czZztsPZxAdANxsoL1M4EUaQwtpJg0yv9kDesjJyFZxdpI3yW1Msy23w/\
HwZmIQCGw2s+v3+jg5mmegZFC3bC1H9/Z4cTaDN/2egZQOxMBdu+\
0TAxPI6ld3I102rvkkQQ7gkyjsNrkPVlCYo/wWY0+\
ywjs9zMeTWDGIXjdPVjC492TeJTPdDz81ny9jNXL0AC34haCUKepVhh8AqOD21fdg+\
CDorhBLpfwHDyJZxgedOgVKmi5WGC4MeJ3R/\
oekGLbY0gzyS1QwB8pWDfb51pBm71p94MpYCAwUNoGBj47YSAOEm0CYotacRnEkEmdp6AsttnzSwPW\
5mOtpRXZDJ/\
VPWbFooFbQ0WOOxEgY4quD3LFUxGRcq3QGUNQH7l0QD7cOb6lFamoVQhSzlhia8yvr4W69njI9lkGk\
UgExFMHDAdsxSd74lTk7xLyPhUh007Fx/cZiYo+uoY1Bt7W//fs7ojHQh85a7UqbrLGhZ2AeSruI+\
l4lajSkke+iHUmtQ1XZ4Iy6tdzJ+X022TWENZsFzcLnU+FsuxFwa/qk3OeQkC1LPDLwzvzw344+\
McWW58k1bQlvkDYqmK7IcWEctphv5Ab62NTqdFhG5dGk11szp6VLxO7oSITpYUSNHgusuLarHXmrx3\
HwvIrWjVOuESY5zQA8v5jOw+k/J3+o9KS6yqjkq5L5J+\
iDyDhTpYFLfWu9vaGdNb4RCrbLVqwKpsftFq6VKFf7wyVBUOWtIUYbLOvcuauEGj8bocOrU6LZpnmO\
Q/6yYxFYxHglNYfuewx0imyf03lwXj9h0xao+l8GtP4Ys1yJHVYvfhtLfQH/gK4wD9R", 
   "RadioButtonValue" -> "MIT", "SpecifiedLicenseID" -> Null},
 CellTags->{
  "LicensingInformation", "LicensingInformation-RadioButtons", 
   "RadioButtonsCell"},
 CellID->253890516,ExpressionUUID->"ce81c3b8-2c5d-4c42-955f-04a46ffc4110"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Keywords",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Keywords", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "List relevant terms (e.g. functional areas, algorithm names, related \
concepts) that should be used to include the paclet in search results.", 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoKeywords"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "71b72bdf-3e75-493a-bd50-1c06f2db263b"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Keywords"},
 DefaultNewCellStyle->"Item",
 CellTags->{"Keywords", "TemplateCellGroup"},
 CellID->913860664,ExpressionUUID->"3cc801c1-d0e1-4d9a-b44b-ac38a187474c"],

Cell["image", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.9468393040502367`*^9, 3.946839305094342*^9}},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->560424104,ExpressionUUID->"9f191312-9215-4a21-ad80-dc80f1592f36"],

Cell["image filters", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.9468393040502367`*^9, 3.946839310088101*^9}},
 CellID->1956264877,ExpressionUUID->"79594cc9-cb1e-48a2-a650-c8fc7c7a7398"],

Cell["image kernels", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.9468393040502367`*^9, 3.946839312202469*^9}},
 CellID->1206215830,ExpressionUUID->"c692b96f-fda8-461f-9bf1-ea4dc2ca7549"],

Cell["data analysis", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.9468393040502367`*^9, 3.946839328379427*^9}},
 CellID->762214064,ExpressionUUID->"9dcf2989-ce46-4fa5-b7c4-05d7c9f2c487"],

Cell["image analysis", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.9468393040502367`*^9, 3.946839330600142*^9}},
 CellID->1179500166,ExpressionUUID->"69d57119-e544-43d9-81ce-c3cdaff24b53"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Categories",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Categories", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Choose categories that best represent your paclet. These choices \
determine which pages your paclet will appear on when published to the \
repository.", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 
        20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCategories"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "3cf4a79a-a1a5-4a91-8cab-db39c291f98b"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Categories"},
 DefaultNewCellStyle->"Item",
 CellTags->{"Categories", "TemplateCellGroup"},
 CellID->651640710,ExpressionUUID->"58ea8049-83a5-4416-bb69-d6144d696d5d"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Cloud & Deployment"}], "\" \"", 
           StyleBox[
           "\"Cloud & Deployment\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[
           "Data Manipulation & Analysis", {
            False, "Data Manipulation & Analysis"}], "\" \"", 
           StyleBox[
           "\"Data Manipulation & Analysis\"", FontSize -> 12, Editable -> 
            False, StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "External Interfaces & Connections"}], 
           "\" \"", 
           StyleBox[
           "\"External Interfaces & Connections\"", FontSize -> 12, Editable -> 
            False, StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Geographic Data & Computation"}], 
           "\" \"", 
           StyleBox[
           "\"Geographic Data & Computation\"", FontSize -> 12, Editable -> 
            False, StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Graphs & Networks"}], "\" \"", 
           StyleBox[
           "\"Graphs & Networks\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox["Images", {False, "Images"}], "\" \"", 
           StyleBox[
           "\"Images\"", FontSize -> 12, Editable -> False, StripOnInput -> 
            False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Machine Learning"}], "\" \"", 
           StyleBox[
           "\"Machine Learning\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[
           False, {False, "Scientific and Medical Data & Computation"}], 
           "\" \"", 
           StyleBox[
           "\"Scientific and Medical Data & Computation\"", FontSize -> 12, 
            Editable -> False, StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Sound & Video"}], "\" \"", 
           StyleBox[
           "\"Sound & Video\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Symbolic & Numeric Computation"}], 
           "\" \"", 
           StyleBox[
           "\"Symbolic & Numeric Computation\"", FontSize -> 12, Editable -> 
            False, StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Time-Related Computation"}], "\" \"", 
           StyleBox[
           "\"Time-Related Computation\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Visualization & Graphics"}], "\" \"", 
           StyleBox[
           "\"Visualization & Graphics\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Core Language & Structure"}], "\" \"", 
           
           StyleBox[
           "\"Core Language & Structure\"", FontSize -> 12, Editable -> False,
             StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Engineering Data & Computation"}], 
           "\" \"", 
           StyleBox[
           "\"Engineering Data & Computation\"", FontSize -> 12, Editable -> 
            False, StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Financial Data & Computation"}], 
           "\" \"", 
           StyleBox[
           "\"Financial Data & Computation\"", FontSize -> 12, Editable -> 
            False, StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Geometry"}], "\" \"", 
           StyleBox[
           "\"Geometry\"", FontSize -> 12, Editable -> False, StripOnInput -> 
            False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Higher Mathematical Computation"}], 
           "\" \"", 
           StyleBox[
           "\"Higher Mathematical Computation\"", FontSize -> 12, Editable -> 
            False, StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[
           False, {False, "Knowledge Representation & Natural Language"}], 
           "\" \"", 
           StyleBox[
           "\"Knowledge Representation & Natural Language\"", FontSize -> 12, 
            Editable -> False, StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Notebook Documents & Presentation"}], 
           "\" \"", 
           StyleBox[
           "\"Notebook Documents & Presentation\"", FontSize -> 12, Editable -> 
            False, StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Social, Cultural & Linguistic Data"}], 
           "\" \"", 
           StyleBox[
           "\"Social, Cultural & Linguistic Data\"", FontSize -> 12, Editable -> 
            False, StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Strings & Text"}], "\" \"", 
           StyleBox[
           "\"Strings & Text\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "System Operation & Setup"}], "\" \"", 
           StyleBox[
           "\"System Operation & Setup\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "User Interface Construction"}], 
           "\" \"", 
           StyleBox[
           "\"User Interface Construction\"", FontSize -> 12, Editable -> 
            False, StripOnInput -> False]},
          "RowDefault"]},
        {"\<\"\"\>"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle", ShowStringCharacters -> False},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJxdj1sKwjAUREVaa63oSrqIEhAKYotxAzG9ajAvcm8+sntTEUR/\
D3OYma5peckpaeCrIZKP1PKKPUA+YbotsDgqzKTsCQxi3UVyRpCSLV+\
PwXkIlPiGCYK7Cwowu4Mn5exvtmJOR/MHd70lCD4AidngdWcTj1eE3NewiDnY27wHy4PQCF/\
4nlKcnM1sewZ0MUi4JJ8fjELq2d8zZ7IK06eYLV9301GV"},
 CellChangeTimes->{{3.946763484220731*^9, 3.946763505682291*^9}},
 CellTags->{"Categories", "Categories-Checkboxes", "CheckboxCell"},
 CellID->508531351,ExpressionUUID->"15379f58-1ce9-42c9-a5a3-2b4b1b50e5fb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Related Resource Objects",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Related Resource Objects", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "List the names of published resource objects from any Wolfram \
repository that are related to this paclet.", "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoRelatedResourceObjects"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "5e37a96a-d774-46cf-a79e-e0d49615223a"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Related Resource Objects"},
 DefaultNewCellStyle->"Item",
 CellTags->{"Related Resource Objects", "TemplateCellGroup"},
 CellID->280622473,ExpressionUUID->"c32f2877-ae93-45d1-8eaf-3a2d7559447a"],

Cell["Resource Name (resources from any Wolfram repository)", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->694609509,ExpressionUUID->"698e9446-b0f3-43af-99ad-803ba3b323ea"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Original Source References and Attributions",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Source/Reference Citation", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Give a bibliographic-style citation for the original source of the \
paclet and/or its components (e.g. a published paper, algorithm, or code \
repository).", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 
        20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoSourceReferenceCitation"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "5ce7641d-8790-4196-bc19-6748c60430b6"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Source/Reference Citation"},
 DefaultNewCellStyle->"Text",
 CellTags->{
  "Original Source References and Attributions", "Source/Reference Citation", 
   "TemplateCellGroup"},
 CellID->687116677,ExpressionUUID->"b9a2eacd-994a-41f6-9c00-d2984c8a21c8"],

Cell[TextData[ButtonBox["GitHub - dishmint/ArcanePropagation: Exploring image \
convolution and fragment shaders.",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["https://github.com/dishmint/ArcanePropagation"], None},
 ButtonNote->"https://github.com/dishmint/ArcanePropagation"]], "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{3.946839296946781*^9},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->702019342,ExpressionUUID->"72cd2a7b-02a0-4f9b-81f1-929eb5bb4845"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Links",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Links", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "List additional URLs or hyperlinks for external information related \
to the paclet.", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 
        20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoLinks"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "f3dd936a-6132-4176-86ff-3f75e6db42f3"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Links"},
 DefaultNewCellStyle->"Item",
 CellTags->{"Links", "TemplateCellGroup"},
 CellID->179193585,ExpressionUUID->"9053621a-f587-442a-bfbd-cc1740eea482"],

Cell[TextData[ButtonBox["GitHub - dishmint/ArcanePropagation: Exploring image \
convolution and fragment shaders.",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["https://github.com/dishmint/ArcanePropagation"], None},
 ButtonNote->"https://github.com/dishmint/ArcanePropagation"]], "Item",
 TaggingRules->{},
 CellID->534625382,ExpressionUUID->"25ffce44-3c23-43ff-a788-cfc6f879af37"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Compatibility",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Compatibility", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Specify any known compatibilities for your paclet to ensure it is \
discoverable on the correct platforms.", "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibility"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "d80f81c7-4b67-4ab9-9c6b-af89841b3410"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Compatibility"},
 CellTags->{"Compatibility", "TemplateCellGroup"},
 CellID->31633819,ExpressionUUID->"ac61a1bf-d4bb-4a8d-8060-55050ff4e00a"],

Cell[CellGroupData[{

Cell[TextData[{
 "Wolfram Language Version",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityWolframLanguageVersionRequired", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Enter required Wolfram Language Version (e.g. 12.1+).", 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {
       "SectionMoreInfoCompatibilityWolframLanguageVersionRequired"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "a0e544b0-ac57-4014-a4b0-97e3b0a5ccf6"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{
  "TemplateGroupName" -> "CompatibilityWolframLanguageVersionRequired"},
 DefaultNewCellStyle->"Text",
 FontSize->16,
 CellTags->{
  "CompatibilityWolframLanguageVersionRequired", "TemplateCellGroup", 
   "Wolfram Language Version"},
 CellID->267876551,ExpressionUUID->"205f7379-3104-4129-beac-157aa910c76e"],

Cell["14.2+", "Text",
 TaggingRules->{},
 CellID->668210332,ExpressionUUID->"89a8ff2c-5810-4e57-9279-8c0f3d8c6854"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Operating System",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityOperatingSystem", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Select all operating systems where your paclet is expected to \
function properly.", "MoreInfoText"], Background -> GrayLevel[0.95], 
        FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5,
         ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibilityOperatingSystem"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "b5b0970d-b45b-4896-badd-940a4c6235c2"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{"TemplateGroupName" -> "CompatibilityOperatingSystem"},
 DefaultNewCellStyle->"Item",
 FontSize->16,
 CellTags->{
  "CompatibilityOperatingSystem", "Operating System", "TemplateCellGroup"},
 CellID->54346056,ExpressionUUID->"dfdefd15-d7f9-4bdd-8ce6-9e7ae4377d5a"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox["Windows", {False, "Windows"}], "\" \"", 
           StyleBox[
           "\"Windows\"", FontSize -> 12, Editable -> False, StripOnInput -> 
            False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox["MacOSX", {False, "MacOSX"}], "\" \"", 
           StyleBox[
           "\"Mac\"", FontSize -> 12, Editable -> False, StripOnInput -> 
            False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox["Unix", {False, "Unix"}], "\" \"", 
           StyleBox[
           "\"Linux\"", FontSize -> 12, Editable -> False, StripOnInput -> 
            False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle", ShowStringCharacters -> False},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJxFUNFOwzAMlGi7MUB8Ab/Qj6gqIVUadJpB8JplHkSkThQ7Yvl73IeWN/t8d/\
a5u2uhASkeYTNmiVla2PbfaH/\
wfKm43jsW2H44Oodfhs2LsSN8Qv1O7qrCQXDihXa54fqY1WilL8U6qVS/\
mKxgs3eUr4vn7SGFiEkKPPVhikbcyXknZVRQG/\
qCwrpVrxyjuEDMuy5LmHRm59ODzxNxX7XwOJBgignFzETYdVQgnxg14n2fWUUDaWBuno1n/AfnUFy/\
BlLs4YgccrL4VqK+6GCsR/kDqQVqcg=="},
 CellTags->{
  "CheckboxCell", "CompatibilityOperatingSystem", 
   "CompatibilityOperatingSystem-Checkboxes"},
 CellID->729105876,ExpressionUUID->"9cf44dec-175e-420d-aeb4-5ba4a5d24a85"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Environments",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityEvaluationEnvironment", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "Select all evaluation environments where your paclet is expected \
to be compatible. See ", 
           Cell[
            BoxData[
             StyleBox[
              TagBox[
               ButtonBox[
                StyleBox[
                "$EvaluationEnvironment", "SymbolsRefLink", 
                 ShowStringCharacters -> True, FontFamily -> 
                 "Source Sans Pro"], BaseStyle -> Dynamic[
                  FEPrivate`If[
                   CurrentValue["MouseOver"], {
                   "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                   "Link"}]], ButtonData -> 
                "paclet:ref/$EvaluationEnvironment", ContentPadding -> False], 
               MouseAppearanceTag["LinkHand"]], ShowStringCharacters -> True, 
              FontFamily -> "Source Sans Pro"]]], " for more details."}], 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibilityEvaluationEnvironment"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "304e5744-e466-4d0f-80be-6d4b9e5b2e8c"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{"TemplateGroupName" -> "CompatibilityEvaluationEnvironment"},
 DefaultNewCellStyle->"Item",
 FontSize->16,
 CellTags->{
  "CompatibilityEvaluationEnvironment", "Environments", "TemplateCellGroup"},
 CellID->701114648,ExpressionUUID->"6b660505-b5be-4304-a030-9ee392b76cce"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox["Session", {False, "Session"}], "\" \"", 
           StyleBox[
            
            TemplateBox[{
             "\"Session\"", "\"Local or cloud interactive session\""}, 
             "PrettyTooltipTemplate"], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox["WebEvaluation", {False, "WebEvaluation"}], "\" \"", 
           StyleBox[
            
            TemplateBox[{
             "\"WebEvaluation\"", 
              "\"Cloud evaluation initiated by an HTTP request\""}, 
             "PrettyTooltipTemplate"], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox["BatchJob", {False, "BatchJob"}], "\" \"", 
           StyleBox[
            
            TemplateBox[{"\"BatchJob\"", "\"Remote batch job\""}, 
             "PrettyTooltipTemplate"], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox["Script", {False, "Script"}], "\" \"", 
           StyleBox[
            
            TemplateBox[{"\"Script\"", "\"Script run in batch mode\""}, 
             "PrettyTooltipTemplate"], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox["WebAPI", {False, "WebAPI"}], "\" \"", 
           StyleBox[
            
            TemplateBox[{
             "\"WebAPI\"", "\"API called through an HTTP request\""}, 
             "PrettyTooltipTemplate"], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {"\<\"\"\>"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox["Subkernel", {False, "Subkernel"}], "\" \"", 
           StyleBox[
            
            TemplateBox[{"\"Subkernel\"", "\"Parallel or grid subkernel\""}, 
             "PrettyTooltipTemplate"], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox["Scheduled", {False, "Scheduled"}], "\" \"", 
           StyleBox[
            
            TemplateBox[{"\"Scheduled\"", "\"Scheduled task\""}, 
             "PrettyTooltipTemplate"], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {"\<\"\"\>"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle", ShowStringCharacters -> False},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJxdUdtugzAMlTZaym4fsfd+BEOdxDStqJ60ZwiuiBqSKHYq8fcLGwS2p/hyfI6Pk9/\
tYQM8KITt0bP1vIe06FBcsD2nlLxLYkgBiaTRsAXhpGXIwDcXdBoVPH5hc7jWytf8gwhpXpUBITpsv\
cIWdi81i+7NNEGpZOxp5j3fUHIKkIV/DmJnFpzeWF8tsISx+2+nv+nCPa06vSvuuPoSxm50s/\
a1q5yx6HiA58L0Nug0UkkeFtWDvkpndI96PPDRjjWiLPds+gAQ49WN8r2m4nYPT6VmdNYh/\
zrIcj0Em4Rh+L7wFIZKHf6KNq+1IlyK43kp+TA61B5OSMY7gZ+DDW6rWijkb1lVrDw="},
 CellTags->{
  "CheckboxCell", "CompatibilityEvaluationEnvironment", 
   "CompatibilityEvaluationEnvironment-Checkboxes"},
 CellID->637301816,ExpressionUUID->"4d6536df-d993-4841-8ec4-f570858d95e2"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Cloud Support",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityCloudSupport", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Specify whether your paclet is expected to work in the public \
cloud.", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibilityCloudSupport"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "bcc250e6-60ce-4264-b4ae-cbf8bb923d71"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{"TemplateGroupName" -> "CompatibilityCloudSupport"},
 DefaultNewCellStyle->"Text",
 FontSize->16,
 CellTags->{"Cloud Support", "CompatibilityCloudSupport", "TemplateCellGroup"},
 CellID->677592290,ExpressionUUID->"8925dee9-c3f0-4ce8-a28d-86ae85b135ec"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[True, {False, True}], "\" \"", 
           StyleBox[
           "\"Supported in cloud\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle", ShowStringCharacters -> False},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJxFj0FqwzAQRXGxmzQNWWSXXS7gQ7iCgKEkIeMLKPKEisoaoZlZ+\
PaVoSHbz3vMm27TQgMyB4T3i0pSaWFlftD94viouP72LFwPWbFwveDEz/\
XxxvVNi7cHTYmy4Hj08egC6fg01tdMCbPMcDA0JSv+\
7oOX2SzQv1buXZJ4iswfnQpNhXJLBAWdIpuqhV0fBXPKKHYBYfVFFNDGFj6NclH6WMK5OdnA+\
BqXWq7PFMu2vSGTZofDnMqrV+sCyh/5oliM"},
 CellTags->{
  "CheckboxCell", "CompatibilityCloudSupport", 
   "CompatibilityCloudSupport-Checkboxes"},
 CellID->729759554,ExpressionUUID->"a2bd7d90-5547-41ff-9382-6bbac16ccf13"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Required Features",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityFeatures", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{"Choose any other features that are ", 
           Cell[
            BoxData[
             StyleBox[
              StyleBox["required", "TI"], ShowStringCharacters -> True, 
              FontFamily -> "Source Sans Pro"]]], 
           " in order to use your paclet."}], "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibilityFeatures"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "9f803ccc-2f1b-4b26-a8de-729213b4e40d"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{"TemplateGroupName" -> "CompatibilityFeatures"},
 DefaultNewCellStyle->"Item",
 FontSize->16,
 CellTags->{"CompatibilityFeatures", "Required Features", "TemplateCellGroup"},
 CellID->666988317,ExpressionUUID->"ded9c037-52ab-4258-951b-470b7c3b9273"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Notebooks"}], "\" \"", 
           StyleBox[
           "\"Notebooks\"", FontSize -> 12, Editable -> False, StripOnInput -> 
            False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Parallel Kernels"}], "\" \"", 
           StyleBox[
           "\"Parallel Kernels\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Cloud Access"}], "\" \"", 
           StyleBox[
           "\"Cloud Access\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle", ShowStringCharacters -> False},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJxlkMFqwzAMhsearM1Wxi679wXyEMFQCC1tqPcCjqswU8cylnTw289h0G3spv/\
Tp8Ov7rnVtebsQT+dhaNwq9fqE+wNrtMDVUdHhdQ9w0zT6jtPj1RdpFw0J2QYEW/\
0a7xv3waTjPfgdwdIATz9J3d3qzzKdddZC0R/U6s3Q8IIibN+\
VzhHw2503nHeg2FJUIz1ObLDQNR0wjgXwy410MscSK1a/doHhhQTsFlE3XQhaxkJSrkXJVSO+\
lDKU703nuAHLr2pOmEobHsBQkkWPnIs7xqM9cBfyEVv1Q=="},
 CellTags->{
  "CheckboxCell", "CompatibilityFeatures", "CompatibilityFeatures-Checkboxes"},
 CellID->960234497,ExpressionUUID->"78f488a9-1ec9-41cf-b1f8-792578ce98ac"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Disclosures",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Disclosures", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "Contributors to the Wolfram Language Paclet Repository can include \
a list of disclosures with their paclet. These disclosures tell users how to \
expect the paclet to interact with their environment.\n\nDisclosures should \
be selected if your paclet interacts with the environment in ways that are \
not otherwise obvious to the end user. For example, if your paclet needs to \
write information to local files somewhere to store persistent settings, you \
should choose the \"Local files\" disclosure so that users are not surprised \
to find files that they didn't expect.\n\nFor cases where the interaction is \
inherently part of the paclet behavior (and clearly documented as such), the \
disclosure is unnecessary. For example, an exporter function that's clearly \
meant to write files in a place specified by the user would not be necessary \
to disclose.\n\nFor each disclosure item, additional details can be added by \
starting a new cell under the cell containing the checkbox. Use this space to \
clarify how your paclet interacts with the environment for the corresponding \
item. For example:\n\n", 
           Cell[
            BoxData[
             FrameBox[
              StyleBox[
              "\"MyPublisherID/MyPaclet utilizes the local file system to \
cache data by writing files in the directory \
$UserBaseDirectory/ApplicationData/MyPublisherID/MyPaclet/Cache\"", "Text", 
               "DisclosureDetails", StripOnInput -> False, LineIndent -> 0], 
              Background -> GrayLevel[0.9], FrameStyle -> GrayLevel[0.8], 
              ImageSize -> {Full, Automatic}, StripOnInput -> False]]]}], 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoDisclosures"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "390aa8d0-c41b-4485-8aa7-5bf15071798b"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Disclosures"},
 DefaultNewCellStyle->{"Text", "DisclosureDetails"},
 CellTags->{"Disclosures", "TemplateCellGroup"},
 CellID->376414000,ExpressionUUID->"bcdb00c1-9120-4464-8b34-a8ecb2b446fd"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[False, {False, "LocalFiles"}], "\" \"", 
           StyleBox[
            TemplateBox[{"\"Local files\"", 
              TemplateBox[{"DisclosuresLocalFiles", 
                Cell[
                 BoxData[
                  FrameBox[
                   Cell[
                   "Choose this option if your paclet directly does any of \
the following during loading or normal usage:\n\[FilledSmallSquare] Creates, \
deletes or modifies local files\n\[FilledSmallSquare] Imports data from local \
files\nFile operations related to normal paclet installation and loading are \
excepted.", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 
                   20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, 
                   ImageSize -> {
                    Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> 
                 True, CellTags -> {"SectionMoreInfoDisclosuresLocalFiles"}, 
                 CellMargins -> {{66, 66}, {15, 15}}], 
                HoldComplete[
                 EvaluationCell[]], "Click for more information"}, 
               "InlineMoreInfoOpenerButtonTemplate"]}, "RowDefault"], 
            FontSize -> 12, Editable -> False, StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle", ShowStringCharacters -> False},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {5, Inherited}},
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJyNVE1uEzEUpiFpkyZqN8CClYVYEg7ABjXTFkZqaRXnAu7Mm8Sqx2/\
kn7bDlkNwGY4Al0AsEWfg2ZmZNFWRmM3Yz+/ne9/77KPxlA+4qxXw3QvvKu+mfC9ZQXYNefHE9s+\
kJcsgdVDaYme9L3q2P/cKaP90jrdhG8x8fIaZUKyQCoLvcC5uZ3hH654dL6CslHBAhqLf+D8/\
ljZTaL0BG0NPY+TA9hNQijLskfexcKLYtcNTI8oY3Vsf8y+\
9ZIVogbmVtAwrJ1EzWbAavWGVyBQ4lksDmVM1yxEsE7pmWJA/\
sAKVwluplyz3JvwUijz80TCNpqQ2vBVLeLf/8+\
s3lhgg6PYNy4GyUibyKjGXhaS12jQdndOyQuMsywk4KwyWWx6hRQILRgS8lhkIrOTMYVu3gS61dUKp\
6EbI8w6hMMDgLoOKwt7yyTkaSHWBC7jrBmP3ZyK7Xhr0OicaRx+MqM/\
gBpQp4vfnfec5ibyeC7OkgsmzTYZoj8LYzvDje/h+bzIczEMZQjYnfN4mg+\
5klJZEIZefoZUIpdrlRAbkTZ5f7+3oyDssqc/sH82MjgPr4oqW/YXx0B0Mgw4WYtkJk7/\
mNG4irM3zuMDa+HGIb1rvEDb/\
ZJbMuvVhckglJh9R5QmSjkkDdDcOTm6E8nFAUZAvEyWza5JWEAcNSRIAU8Zz/\
irVSmpocV1UoMHMvHOo25vB9zcQp3x4aYJKXL1t3ruIOrftHfqvXmgQegVGkmDuLbvuBg+\
Ma25PcrnmfHAqlIXHpvHgpBsHf3GP9+kW/ASVL7W9N/QpP0i1A1MZyhq5Gh3pmvsrC/\
TwjBNvyTHV9DA19TbG8CbZ/ifUZJvMwdLFz2BRV/SUXcZLNOWHYV6eGmsKJzt/ASlfxEI="},
 CellTags->{
  "CheckboxCell", "Disclosures-LocalFiles", "LocalFiles", 
   "LocalFiles-Checkboxes"},
 CellID->59412863,ExpressionUUID->"67db7948-a8b1-4a26-8b14-dcf575c5029f"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[False, {False, "WolframAccount"}], "\" \"", 
           StyleBox[
            TemplateBox[{"\"Wolfram account\"", 
              TemplateBox[{"DisclosuresWolframAccount", 
                Cell[
                 BoxData[
                  FrameBox[
                   Cell[
                   "Choose this option if your paclet directly does any of \
the following:\n\[FilledSmallSquare] Requires, uses, or records any \
information related to user\[CloseCurlyQuote]s Wolfram ID\n\
\[FilledSmallSquare] Interacts with the user\[CloseCurlyQuote]s Cloud account \
or Wolfram account\n\[FilledSmallSquare] Creates, deletes or modifies the \
user\[CloseCurlyQuote]s cloud objects\n\[FilledSmallSquare] Creates or \
executes cloud deployed scheduled tasks\n\[FilledSmallSquare] Uses cloud \
credits, service credits or Wolfram credits\n\[FilledSmallSquare] Makes \
WolframAlpha calls", "MoreInfoText"], Background -> GrayLevel[0.95], 
                   FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
                   RoundingRadius -> 5, ImageSize -> {
                    Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> 
                 True, CellTags -> {
                  "SectionMoreInfoDisclosuresWolframAccount"}, 
                 CellMargins -> {{66, 66}, {15, 15}}], 
                HoldComplete[
                 EvaluationCell[]], "Click for more information"}, 
               "InlineMoreInfoOpenerButtonTemplate"]}, "RowDefault"], 
            FontSize -> 12, Editable -> False, StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle", ShowStringCharacters -> False},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {5, Inherited}},
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJyNVM1SE0EQFkiAAJVcvMhpypMH8wJeqGQBTRUIlYnleZjtTcZMdtbpGWA9+RaWJ1/\
ER9CXoDxaPoM9k90lgFS5h2Smf77++\
bpnsNvnbe5KDXzzzLvCuz7fSmYg55BmT7B1opAk7ZGDBWZry3u2jq2x10D3jbG5Ctcg5r33RmdWLJi\
Q0vjckX57LK6G5hqQjHYnsCi0cECCrFX5PDtUKLVBbwEr90Hl3cZWAloTyhZ5HAonsk3cPiaLiLC+\
VPNvG8nMGATmZgqZKZwyOVMZK423rBBSg2OpsiCdLllqAJnIS2YysgeWGa3Nlcqnr3ZuvnxnY/\
joyRRfMo/h11hGjsamSyeVZ8YuRIxgIZSSMmeCrb35/BVZXf/\
oMKKNcgdWSIfsSrlZjNeYJtr4tG5UiHOvdxEgsUAxKI8UqArKnOwWJlWZovMdOBnhzMUHKhNXfYMLX\
IP04by0SqHQpqTUUc4gJR6pCIHzpds7bOykhVQ5ik5BLpWEWrCabSWKrqdiDk0PBrqYCSaF1sj3To2\
FEfVuAtfN8ODOUMj51FKxKVHceW1FeQKXoG0Wvz8HjeVe5PxU2KnKMXl6ixDlcXjvIvz8Eb7ftwjdc\
QhDNI9Fqjwm7UbTGS3EFLj6BPUYE9Qmp8QhrXB+HWBn4J0JxMtHiukcBobEBR1bE+\
uhUWyHGZ2IabM8/AUnjmiCapzHF6DG2A0YVflNltV/\
MkyGzbmX9CjM3huj08TQrtHM0A53jy6F9nFq48LsJ1rJOY1+\
GCYLq1PNn49yrXKoczsrIAc79M6ZvN5e3r2bZp9vn1tTgHXlQ9XWWdxHrPf9v2oiUvIZWEXrtXJsqm\
zfEy77fERzGPvfPhYa4V/M3NM01PD9FQ76D0pIjPaLHFeGoM+7cbcLS8ixb51BXnJ/\
gUAOu4lHMhzl9JhWMW+F4R3F1luTk2xvDEiPlIRJWdDzex7fqj7vBe5oX9MqcLL2F7qSDpU="},
 CellTags->{
  "CheckboxCell", "Disclosures-WolframAccount", "WolframAccount", 
   "WolframAccount-Checkboxes"},
 CellID->992770807,ExpressionUUID->"bd28d98f-2d5e-4216-a017-90e461999f66"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[False, {False, "ExternalServices"}], "\" \"", 
           StyleBox[
            TemplateBox[{"\"External services\"", 
              TemplateBox[{"DisclosuresExternalServices", 
                Cell[
                 BoxData[
                  FrameBox[
                   Cell[
                   "Choose this option if your paclet directly does any of \
the following:\n\[FilledSmallSquare] Makes requests to external services \
(http, ftp, ssh, etc)\n\[FilledSmallSquare] Creates or uses service \
connection\n\[FilledSmallSquare] Send emails", "MoreInfoText"], Background -> 
                   GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> 
                   GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
                    Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> 
                 True, CellTags -> {
                  "SectionMoreInfoDisclosuresExternalServices"}, 
                 CellMargins -> {{66, 66}, {15, 15}}], 
                HoldComplete[
                 EvaluationCell[]], "Click for more information"}, 
               "InlineMoreInfoOpenerButtonTemplate"]}, "RowDefault"], 
            FontSize -> 12, Editable -> False, StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle", ShowStringCharacters -> False},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {5, Inherited}},
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJyNVE1uEzEUJiVpkyZKQWIFLCxWgJoLsKkat4VIDa3iXMCdeZNY8diDn912uAh3QRwBLo\
FYIs7Am8nMpEQF4cWM/X6+9/M9+7g/Eh3hcw1i9yL4LPiR2ONLiFYQJw+\
wfa6QJJ2JhxST1vqc7GB7FjTQ+\
eHM3hTHQiwen956cEZqhuCuVQSFR3cmb8b2lvY72J9DmmnpgQRJu/\
J6dqIw0haDA6wBRO3fwTYHrQlnj3xOpJfJLnbPnExLjJ21Wnxu8aW1CMwvFTKbeWUNUwnLbXAsk5EG\
z2LlIPI6Z7EFZNLkzCZkDyyxWtsbZRZv9r9/+sKmckV6Bx8CoEfmLYPtstjLpffZIUuKD+\
LykIGPXpXe3AHVRzk4FpD+\
lQuLrDEUnvIqzQSYmEEqlUYxmFoHE5PYOQWqe4v7YxmtFs4GE1P1vbdO5udwDdol5fp11FgOynZMpV\
sog/zJBqGUl9z+ifDta7F+\
bhCGsyIMdWAmYxWQdxpNb5LKBQj1EWqWCWpXRFJDXOH8OMLecfA2lV5FfymmdwJEgbyibXvuAjSKbk\
HfXC6a2RKvxbpNNc6/pqNG6RcoVQOaPKs/H/Nxsz/\
gBxRo8M7qmFsaRfBAQz48vZY6yCJqOU1PuVbRiubCsZSyYIrScGmpFy8mRisDdXYXGRhw4+\
C9NfVwi0fbiY5E99LZDJzP71PuXZQDi/WV+K+6iBqzBKc8xHe2TaWdLeG626exWrPQOZMa4T5+\
tjQNQeL5HSZG9xTBrQ6pwTvDMBLDiSG7zBF22b3esclFuEKgN6XPA5LhxNCbU0XdCIvnBtvvrSHZYA\
ZI9ziCeZ7RK3VZXueROCgYDFReFZi3fgNdbbnI"},
 CellTags->{
  "CheckboxCell", "Disclosures-ExternalServices", "ExternalServices", 
   "ExternalServices-Checkboxes"},
 CellID->603047762,ExpressionUUID->"cfc0a203-588e-4065-a12c-b8557ddbcb6f"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[False, {False, "WLSystemConfiguration"}], "\" \"", 
           StyleBox[
            TemplateBox[{"\"Wolfram Language system configuration\"", 
              TemplateBox[{"DisclosuresWLSystemConfiguration", 
                Cell[
                 BoxData[
                  FrameBox[
                   Cell[
                    
                    TextData[{
                    "Choose this option if your paclet directly does any of \
the following:\n\[FilledSmallSquare] Creates persistent local scheduled tasks\
\n\[FilledSmallSquare] Modifies WL system or environment settings\n\
\[FilledSmallSquare] Modifies ", 
                    Cell[
                    BoxData[
                    StyleBox[
                    TagBox[
                    ButtonBox[
                    StyleBox[
                    "$Path", "SymbolsRefLink", ShowStringCharacters -> True, 
                    FontFamily -> "Source Sans Pro"], BaseStyle -> Dynamic[
                    FEPrivate`If[
                    CurrentValue["MouseOver"], {
                    "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                    "Link"}]], ButtonData -> "paclet:ref/$Path", 
                    ContentPadding -> False], 
                    MouseAppearanceTag["LinkHand"]], ShowStringCharacters -> 
                    True, FontFamily -> "Source Sans Pro"]]], ", ", 
                    Cell[
                    BoxData[
                    StyleBox[
                    TagBox[
                    ButtonBox[
                    StyleBox[
                    "Directory", "SymbolsRefLink", ShowStringCharacters -> 
                    True, FontFamily -> "Source Sans Pro"], BaseStyle -> 
                    Dynamic[
                    FEPrivate`If[
                    CurrentValue["MouseOver"], {
                    "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                    "Link"}]], ButtonData -> "paclet:ref/Directory", 
                    ContentPadding -> False], 
                    MouseAppearanceTag["LinkHand"]], ShowStringCharacters -> 
                    True, FontFamily -> "Source Sans Pro"]]], 
                    ", or similar\n\[FilledSmallSquare] Installs additional \
paclets or dependencies\n\[FilledSmallSquare] Creates or imports non-public ", 
                    Cell[
                    BoxData[
                    StyleBox[
                    TagBox[
                    ButtonBox[
                    StyleBox[
                    "ResourceObject", "SymbolsRefLink", ShowStringCharacters -> 
                    True, FontFamily -> "Source Sans Pro"], BaseStyle -> 
                    Dynamic[
                    FEPrivate`If[
                    CurrentValue["MouseOver"], {
                    "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                    "Link"}]], ButtonData -> "paclet:ref/ResourceObject", 
                    ContentPadding -> False], 
                    MouseAppearanceTag["LinkHand"]], ShowStringCharacters -> 
                    True, FontFamily -> "Source Sans Pro"]]], 
                    " content\n\[FilledSmallSquare] Makes FrontEnd \
modifications\n\[FilledSmallSquare] Internal handlers"}], "MoreInfoText"], 
                   Background -> GrayLevel[0.95], FrameMargins -> 20, 
                   FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, 
                   ImageSize -> {
                    Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> 
                 True, CellTags -> {
                  "SectionMoreInfoDisclosuresWLSystemConfiguration"}, 
                 CellMargins -> {{66, 66}, {15, 15}}], 
                HoldComplete[
                 EvaluationCell[]], "Click for more information"}, 
               "InlineMoreInfoOpenerButtonTemplate"]}, "RowDefault"], 
            FontSize -> 12, Editable -> False, StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle", ShowStringCharacters -> False},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {5, Inherited}},
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJztVs1uI0UQxlk7sZPIQSgrLZwaBIjDWnvbwx6w4km8a8khkTsiQhyWzkyN3bine9TV4+\
zsY3DhAZC4cOAFOHGGB+\
CKuPHzDFS3PRMn2ggOOexhfXFPd81XVd9XU10HOz3e4q5UwDdPCpcXrse3ohnEc0jSt7A5lkg7rZGD\
DNPG8jndwOakUEDP9ybm0j/\
6bf7RuVGpFRkbCz0txBQYlkgvstjoVE4LK5ykVQPbE3E5MC8A6dWdM8hyJRzQRtpcIbFDibEyWFjA8\
zEPKNE1kBY2I1CKwLboxUPhRLqJ7SF5D0Ab9XH7DF64cL61Av+\
xEc2MQWBuJpGZ3OMxmbLSFJblIlbgWCItxE6VLDGATOiSmZTsgaVGKXMp9fTJ9u/f/\
sQiCxQ6shwsEjZox5SJhWIYzyAhjhLmBM4xGB+bRKaSrM/HFTPGMtALaY3O/LsIzhH2DXPP+\
81k72E7qLZMdvNMTJf8dQaFc0YvH2oT3vrwVLgZ7/IyuzAKJ5COpZ5XQuI+\
n5lL7iz5jmbCithRPtg8swXUNttDo91QZFKVfI8TVzEwLjSyU2tqo85AIASvPtjDUpN9TMHuDo9OrV\
wQV1+NUjrajQprKePPhSqAd45NgXCyAFvXUvNafB3vOzLKWJ/45OkgrO3Lxz98ev7ln337ifj+7+\
df/Na3Dz7mre+++blfleoNnO0lO55B/vZS6icW0keBndqqS6XmpTwVSeLVaA2FQp/\
QOyHOgzwH4kjHQKzztnfwTOjkzsjkGw/vQvLOYahhY8s3sq/Jvr8me83QayP984e+\
JaCkU2FDFxhpdEIpakIUkW9V1FyWKaA3TSAHnYCOqVFc60h0JrPcWDLTRvfy4kLJ+\
C7qqjsBDFGfXHxN7L0prrXienetuK7T9NpUWN/fxj6A5R0j5lQrQ7p/\
3JFOWBaunDhcsbgqP3Lga25GUSjyxXePjYWRTo2/WNdYEPF8ak1BsTaw89SKcgwLUDYNv3/\
6teVuuKSPhZ1KjdH+WtR+v9J5DeHXX/zvryuE7sS7IQYmIpEFRq0rTUcZjR1cvoRKdILa5HQhQ7LC+\
aOPnYPCmYySjG9JpnMIpKK4oOV1Ztv+2yFh6lGIP+IkLrFV4fzn4FJB7XioFQt1sKv/\
aBAN6vVetOeL+5lRSWRoVAIHNJh1jxZU5gHSA/\
H3Ivq85zSeWBLRApMUi83COf9gpJXUUIV4Qh0D7LJqq+\
GL339ltD3eppqh4caVt1psnYQJCqvh7X9lSErpGVjpIFlb1jm3bmwuyT+iBhhEWX0zr5DrxkmtF39/\
TZjebZlQBygyjWsF0uPd8AXklhwEMjsHuuTFBU1qPb4TFUiGI01j88r11aafmLH5mdG0t1s1g7Myp0\
H7NHSJHt/zghaU48px1PgX5OsiJQ=="},
 CellTags->{
  "CheckboxCell", "Disclosures-WLSystemConfiguration", 
   "WLSystemConfiguration", "WLSystemConfiguration-Checkboxes"},
 CellID->481056919,ExpressionUUID->"e1096af1-f0c5-4585-bbc7-d416dd81f901"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[False, {False, "WLSystemSymbols"}], "\" \"", 
           StyleBox[
            TemplateBox[{"\"Wolfram Language built-in symbols\"", 
              TemplateBox[{"DisclosuresWLSystemSymbols", 
                Cell[
                 BoxData[
                  FrameBox[
                   Cell[
                   "Choose this option if your paclet directly modifies \
definitions of built-in symbols such as those in System` or other internal \
contexts.", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 
                   20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, 
                   ImageSize -> {
                    Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> 
                 True, CellTags -> {
                  "SectionMoreInfoDisclosuresWLSystemSymbols"}, 
                 CellMargins -> {{66, 66}, {15, 15}}], 
                HoldComplete[
                 EvaluationCell[]], "Click for more information"}, 
               "InlineMoreInfoOpenerButtonTemplate"]}, "RowDefault"], 
            FontSize -> 12, Editable -> False, StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle", ShowStringCharacters -> False},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {5, Inherited}},
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJyNVM1y0zAQpiVpE5JpLpzKRXDjYF6h06gFMpPSTpSZXlHsVaKpLHm0UlvzBDwcvAVHhm\
dg7dhuaQuDL17tSt/+\
fJ90PEpEX4TSgNg7j6GIIRH7fAPpFWTqGfbmGsnTnwXIUe1s12oXe4togNbPF+\
6mWlZu8frSGeVlzubSrqNcA1tFbUKiLcMyXzlTIQwW8mbqbgHp2GgJeWFkAHKoXoNyeKIxNQ6jB7yc\
ixIptWiO97HHwRiC2acjJzJItYeD95SzhtjdhsXXHb5xDoGFjUbmiqCdZVqx0kXPCpkaCCzTHtJgSp\
a7TCsNyDJQ2upqL51Rj2pnGNMNk0igFTQFtrV9Zs4zFzbgyRfAW2lY6si6DfhOjM+\
ch5lVbknrdnD4YirTq7V30WbUy/CDl+UcrsF4VX+/jrqd47q5M+nX2iJ/eYdQ+2vi/kT4/\
q36ft4hHCyqNNquFzLTEXm/iwxnOZEk9BdoKSSoPZFKA1mD8+\
MIh8cxuFwGnf6lmeEJ0EDlisze0kfoAoOKjKVcd8IRbwXNnAbc4vyD6hZkVIE0/XdlNn8+\
5dPOnvAJ5Rl/dCbjjmQFAUjAB6fX0kRZJa2lcciNTq+YIs5yKoIoIzOv4+\
LNzBptoS3uvAALfhpDcLYVqpg8qDMRgwvvCvChfCK2f15rD1tx/1dXxIslNekA2T2z67P/\
wLkd9WmmtxT030uD8BQ5DyIdO+\
LVPRqSxz1wZ2Ju8Z4QEnEwq6ReeIKuRzc8tqWIKwR6LEY8Im2cWXpMmqR3zuodwd4nZ8k3XgDSjUxh\
WRb0/FzUFzMRk4q+SN01ifnObyvfqbA="},
 CellTags->{
  "CheckboxCell", "Disclosures-WLSystemSymbols", "WLSystemSymbols", 
   "WLSystemSymbols-Checkboxes"},
 CellID->747051267,ExpressionUUID->"a88803d1-a6f2-4122-9b2e-f7bd325e4f91"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[False, {False, "PacletDependencies"}], "\" \"", 
           StyleBox[
            TemplateBox[{"\"Paclet dependencies\"", 
              TemplateBox[{"DisclosuresPacletDependencies", 
                Cell[
                 BoxData[
                  FrameBox[
                   Cell[
                   "Choose this option if your paclet directly installs or \
updates any additional paclets. Paclets that are included with the Wolfram \
system do not require a disclosure.", "MoreInfoText"], Background -> 
                   GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> 
                   GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
                    Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> 
                 True, CellTags -> {
                  "SectionMoreInfoDisclosuresPacletDependencies"}, 
                 CellMargins -> {{66, 66}, {15, 15}}], 
                HoldComplete[
                 EvaluationCell[]], "Click for more information"}, 
               "InlineMoreInfoOpenerButtonTemplate"]}, "RowDefault"], 
            FontSize -> 12, Editable -> False, StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle", ShowStringCharacters -> False},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {5, Inherited}},
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJyNVM1uEzEQpiVpExK1UuGEBLI4k75C1TgtRGpJFUfi7K5nE6tee/\
HYbZf34W3gLTginoHZze4mlILYy9oznm9+vs8+\
HYxEV4TCgNibxZDHMBL7fAXJDaj0CXYuNJKlOw2QYbqz3qe72JlHA7R/Ond35bY0i+\
dXMjEQmIIcrAKbaChjenN5N3b3tN7FwQKy3MgAZEg7ddyricbEOIwecA0x2UboYoeDMYS0T1ETGWS6\
h71zL7MKZXftFl92+\
Mo5BBZWGpnLg3aW6ZQVLnqW15VpD0kwBdMWgzSGznkWc0UFIZO2YFIpXQZKU4fgMVuXhIQrA5MeKDg\
xUYFidzqsyAzsozMp1cOwQBoUU45ZF5iHT5ESMkl5mwaPxfDSeZja1C3gvh0lPhvL5GbpXbSKGu2/\
87K4gFswPq2+nyftyWHV+aX0S2qCv9ggVPaKyt8Rvn0tvx8bhIN5mUbb5VwqHZF3W09/\
msklCP0ZGlIJak8k0oCqcb6fYP80BpfJoJO/NNOfAE1MXtOys/ARWkevZGohl62UxFtBhNDAG5x/\
S6HBGZQ49QjaSus/H/Nxuz7kh5Rq+N4ZxR0pDwKQqg/\
ObqWJssxbSeclNzq5YSmJIXMVwbTMKr94M7VGW2jqm1E14McxBGcbLYujP0sdid6Vdzn4UDzu3p9VC\
sXmFvxXb0SQXYHXAdTWsu22+\
8C4nvkZSbrionsuDcJjLD3wtDSJ11t8jB5tgzsTM4tbohiJg6kN4HNP6NUM+\
6e2EPEagZ6SAY9IB6eWnpo678ZYvjLY+eAs2YZzQLq6CSyKnB6ndfKROCx5jNRgnZjv/AIz17RW"},
 
 CellTags->{
  "CheckboxCell", "Disclosures-PacletDependencies", "PacletDependencies", 
   "PacletDependencies-Checkboxes"},
 CellID->873213451,ExpressionUUID->"c46e6027-1df4-44e4-bf74-ac709a51f06a"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[False, {False, "OSConfiguration"}], "\" \"", 
           StyleBox[
            TemplateBox[{"\"OS configuration\"", 
              TemplateBox[{"DisclosuresOSConfiguration", 
                Cell[
                 BoxData[
                  FrameBox[
                   Cell[
                    
                    TextData[{
                    "Choose this option if your paclet directly does any of \
the following:\n\[FilledSmallSquare] Modifies OS settings\n\
\[FilledSmallSquare] Makes any use of ", 
                    Cell[
                    BoxData[
                    StyleBox[
                    TagBox[
                    ButtonBox[
                    StyleBox[
                    "SystemCredential", "SymbolsRefLink", 
                    ShowStringCharacters -> True, FontFamily -> 
                    "Source Sans Pro"], BaseStyle -> Dynamic[
                    FEPrivate`If[
                    CurrentValue["MouseOver"], {
                    "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                    "Link"}]], ButtonData -> "paclet:ref/SystemCredential", 
                    ContentPadding -> False], 
                    MouseAppearanceTag["LinkHand"]], ShowStringCharacters -> 
                    True, FontFamily -> "Source Sans Pro"]]]}], 
                    "MoreInfoText"], Background -> GrayLevel[0.95], 
                   FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
                   RoundingRadius -> 5, ImageSize -> {
                    Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> 
                 True, 
                 CellTags -> {"SectionMoreInfoDisclosuresOSConfiguration"}, 
                 CellMargins -> {{66, 66}, {15, 15}}], 
                HoldComplete[
                 EvaluationCell[]], "Click for more information"}, 
               "InlineMoreInfoOpenerButtonTemplate"]}, "RowDefault"], 
            FontSize -> 12, Editable -> False, StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle", ShowStringCharacters -> False},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {5, Inherited}},
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJytVb1uG0cQjmxSIiWCNAwXgd0cXARJQaRL4SKEuBJtApIpcIgEQYpkdTdHLri3e9gfye\
fHSJMHCODGr5AqdfIAbg13+XkGz97xThTjBCnChrszszPffPNzx0dDaIMrJML+\
zLvcuyEcsBXGa0zSj2zrTFiStKcOM5vuVff0jm3NvUS6353r63ANYrg3gyjWKhVLb7gTdNqznTm/\
HusXaMnqaIFZLrlDEqStzaOHJ8LGUltv0M6A3Xreti2GUpKbA3pywh1P921nYnhWurjTqDsLfOFKfY\
3FsZXWFiO3EjbSeXAXiTQqtDdRzmOJLkqEwdjJIko02oirItIp2WOUain1tVDLJ4dvf/\
w5OteJSAWZUHoWnSOFrRR8vXnoKRI9DgTtAr5rOyW9FeD9BV9W2XfH3jmtqktjAvegsMQ1M5igcoJL\
6EORXWpp55ieCbWuybcPYKWvwRmCw1bc8Nihsba1MB4bm8OJVm7CMyELGADlHmMEXNnowujGqDvmFk\
sAAfdJocg+Jty9yemFEVdUr++\
nKal6zBtDoL7i0iN0zzVlPbtC03DeuoWvG2IzLbUJHMyfjsuzefnF6y+//vb3kfmUv/rzu2/\
ejMzHn0D7px9+GdXttePnsCIqkAmPqtI9MZh+\
vktU86BPTeRIdsGTJNSqPeHShtzul5CP8xyJLhUj1QI6IdYzrpL/\
jVfonWuDU5Xq0JRbafB4vTTaU6g9231qeHGGVyhNWv7+GjWWvbLBz7lZCmXZg62gQV4XasvDb7+\
G3x83HvrzEIYSmPNEeMvaN0WZZnyJIF5iXTVytQ8xl5hs/Lwb2e6xdzqjGYz/IZnuCVIZ+\
CUdbxPTCe1PvDa7Aj4DGjKavtrPv4x77eQoONnk38Dc/\
LMxGzfnARuEvnymZcI0rRZ0SDurf3pFHVq6DI7gIZMiXtNUmygjEJEgFCYr9fB4qqRQWIOb5ajQVA1\
XLysY7OAcQofKnKNxxQd0B7Ny2dh6wf2nrKguaoVGOEy2jk2e7R1hRfVpIqoSbBr8A8XZ0TTVgUdbZ\
Rj+PQcaVZ8pu9UIQ+\
hPaapMbsh1SV33WBXgL2kjDuGIeUuGU0Xfj03QG2H4dNjWc61I1pujLcdlUeT0xbkox3kIg1A+\
T9ltArO99yhXWLI="},
 CellTags->{
  "CheckboxCell", "Disclosures-OSConfiguration", "OSConfiguration", 
   "OSConfiguration-Checkboxes"},
 CellID->353371864,ExpressionUUID->"0d9bdf3a-1c45-4933-b4ca-e8378fa8a1c4"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[False, {False, "LocalSystemInteractions"}], "\" \"", 
           StyleBox[
            TemplateBox[{"\"Local system interactions\"", 
              TemplateBox[{"DisclosuresLocalSystemInteractions", 
                Cell[
                 BoxData[
                  FrameBox[
                   Cell[
                    
                    TextData[{
                    "Choose this option if your paclet directly does any of \
the following:\n\[FilledSmallSquare] Executes Shell or RUN commands\n\
\[FilledSmallSquare] Uses external evaluators via ", 
                    Cell[
                    BoxData[
                    StyleBox[
                    TagBox[
                    ButtonBox[
                    StyleBox[
                    "ExternalEvaluate", "SymbolsRefLink", 
                    ShowStringCharacters -> True, FontFamily -> 
                    "Source Sans Pro"], BaseStyle -> Dynamic[
                    FEPrivate`If[
                    CurrentValue["MouseOver"], {
                    "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                    "Link"}]], ButtonData -> "paclet:ref/ExternalEvaluate", 
                    ContentPadding -> False], 
                    MouseAppearanceTag["LinkHand"]], ShowStringCharacters -> 
                    True, FontFamily -> "Source Sans Pro"]]], 
                    "\n\[FilledSmallSquare] Interacts with external libraries\
\n\[FilledSmallSquare] Reads or writes to streams or sockets\n\
\[FilledSmallSquare] Launches parallel kernels, subkernels or GPUs"}], 
                    "MoreInfoText"], Background -> GrayLevel[0.95], 
                   FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
                   RoundingRadius -> 5, ImageSize -> {
                    Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> 
                 True, CellTags -> {
                  "SectionMoreInfoDisclosuresLocalSystemInteractions"}, 
                 CellMargins -> {{66, 66}, {15, 15}}], 
                HoldComplete[
                 EvaluationCell[]], "Click for more information"}, 
               "InlineMoreInfoOpenerButtonTemplate"]}, "RowDefault"], 
            FontSize -> 12, Editable -> False, StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle", ShowStringCharacters -> False},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {5, Inherited}},
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJytVc1uI0UQ3mzsxE4sB6GVdoFLa5EQByy0Fw57IIondtaSs7HcDghxgM5Mjd1yT/\
eoqyfO7JEjRy48ABIXXoETZ3gArogbP89A9cx44lhkxQFf3FNd/\
VXVV19Xnxz2eJO7XAHfu8hcmrke3w8WEC4hih9gYyyRLM2RgwTjnfI7foiNaaaAvnenZuU/vZm/\
NTahUAxzJG8mtQMrQieN9idbU7HqmxtAcj+cQZIq4YAMcaM6/\
fRUYqgMZhawAOIFzmgTpomNAJQiuH06eiqciPewNbQiKaAe1tutGdy4Yn+\
3gv96J1gYg8DcQiIzqQdkMma5ySxLRajAsUhaCJ3KWWQAmdA5MzH5A4uNUmYl9fz5wW/f/\
sgGNxBmjlz4gsIxY9n08iULTZIIHWHhcom0TTmA1UQJXAuVCWcssmspmCdyu45dbBVtKOvYm4l5SU6\
7nzlndPlRu/A3BhX2oIQG3uV5cmUUTiEeS71cNwkf8YVZcWcp+\
2AhPJVgERszm0HtczA02g1FIlXOjzgxEgLjQiObWFM7tfsCoUjA532aa/IPKe/OcDCx8ppy+\
HIU01YnyKwF7T6hxIC3z02GcHENttZJ405+bR87MMpYz8H0rF+s7auPfvj408//OLbvi+//+uKzX4/\
tk/d487tvfjpey3AL56AkypPJ3ykb+txC/OE2UfWBbkCBKc+\
JiCIiB5tDodDX9maR8kmaAtGlQ6Be8JaP9YLa+7/xyr/aKZSyFjiylXSLW80oeWWFlVDqaQoiQq+\
0lZVeec4wdBZEUhjR0H11pedYZDpckEtKSSkFii0JEBR+wDC7qtb+\
0NnkEnnn3FgY6dj4C7PBpQiXc2syqncH22dW5GO4BmXj4vf3ce3ZKS7fubBzqTF4tFG5t6/\
VsoHwy8/+9+ctQnfqwxCLUxHJDIPmrTJGiZgDl69gLR2C2uM0GiCqcH4/\
xvZJ5kwinAzvKaZ9CqQFcUXLu91p+TtIza0HG3/GoZg0a5z/MJLWYIcerOKhTrf6D/pBv14fBUf+\
krwwKgoMjUEgST7AbiVPwvRA/\
O1AyXBJg8eyhJKhaUrLpNjnT0daSQ3rJC9S0GBL9a8HK398T7493iLtpWBd/hqf/Yu0rK5xd+K/\
tkrql16Al2e0sazrbm4ZyxYMIlm2prp9/9K0rZ26a/zdjfb07q+F5kmWaNwQSo93C5/\
UUoiC0vaJznl2hUCP3WGQITmOND2GVfBbo38HsfHSaLJ1poDFnZ7lKT2fk2Lm9PiRbys9D1EVONj5B\
0BEqb0="},
 CellTags->{
  "CheckboxCell", "Disclosures-LocalSystemInteractions", 
   "LocalSystemInteractions", "LocalSystemInteractions-Checkboxes"},
 CellID->510770857,ExpressionUUID->"33967ceb-678e-4877-ac0b-a7dc97f243aa"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Other"}], "\" \"", 
           StyleBox[
            TemplateBox[{"\"Other\"", 
              TemplateBox[{"DisclosuresOther", 
                Cell[
                 BoxData[
                  FrameBox[
                   Cell[
                   "Add additional text as needed in a new cell below to \
document any additional disclosures that are not listed above.", 
                    "MoreInfoText"], Background -> GrayLevel[0.95], 
                   FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
                   RoundingRadius -> 5, ImageSize -> {
                    Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> 
                 True, CellTags -> {"SectionMoreInfoDisclosuresOther"}, 
                 CellMargins -> {{66, 66}, {15, 15}}], 
                HoldComplete[
                 EvaluationCell[]], "Click for more information"}, 
               "InlineMoreInfoOpenerButtonTemplate"]}, "RowDefault"], 
            FontSize -> 12, Editable -> False, StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle", ShowStringCharacters -> False},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {5, Inherited}},
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJyNVNuO0zAQZZekF1p1QeKJFyzeyy+s2nR3ibRLV3F/wI0nrVXHjnxpN3wj/\
AWPiG9gkiZpWUDCLxnP5czMmXFmoykNqSsl0N7Su8K7Ke1HW0h3wLMXNrgXFjVh7CC32cXxnl3aIPE\
S8P4y0YfqWqlpuHRbMKgdJOww109g0TRaQV5I5gAVWdB4vl4Im0ptvQF7DAptEIGUGNxHxwVzLOvZw\
a1heR14eTRTO+\
OcMM6FE1oxSRw8OcIsUQAcOBGKMJQPJEVnsgapD8RpwnXqc1DoqcrzaH6qgrgtQ7sBorQjEotEOLbW\
e/hIxw/aQKwyvcJsbfP21Zylu43RXnGsenhnWHkPe5Amq8/P685zXLfxwMxGKBu9PSHU+pr83xG+\
fa3OjxPCJKnSCLVJGBfeRmFnGcY52wAVX6AdA0L1aMok8Abn+7UdzrzTOXMi/\
UczwwVIcGyNYrAyHjrDoKJ9xTbd8Ol7CmnFX4vzxyjb0FEV2nTdFdd8o3k07+Sr6ArRx5+\
05JHGZQEHuHqTmz2TnlWp6tG/\
i6RIdyTThuSYGmeNYl7b6YdYSaGgLWlZgAIz985p1a5fs51TOng0ugDjyk7TXxYVim3X8786QOYVRg\
vckzOx6yl8pjySeYOrV5Mc3jJp4W/0P7N0/\
NM3Z0RP28ojLX2u7NmAp3QSKwemMAhYkzOcqZL6tQV8yKPIW3SMFT70JtVJWb1xG3zWCnXjBKz2JoV\
VWeCv4ZGlsoq/qgbksacmcXTxC1nIgX8="},
 CellTags->{"CheckboxCell", "Disclosures-Other", "Other", "Other-Checkboxes"},
 
 CellID->793947667,ExpressionUUID->"d57ddf26-cdf9-4d69-937b-940f0b477938"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Author Notes",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Author Notes", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "This section, when used, will appear near the bottom of the \
published resource. Content displayed in this section can include background, \
possible improvements, additional information and/or implementation details \
that are otherwise beyond the scope of the paclet documentation.", 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoAuthorNotes"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "db5e29a1-ffed-442f-b52a-390bae951101"]
}], "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Author Notes"},
 DefaultNewCellStyle->"Text",
 CellTags->{"Author Notes", "TemplateCellGroup"},
 CellID->951557313,ExpressionUUID->"4dfeff69-b12b-44e1-98ee-b22d37925773"],

Cell["See the Github repo for known issues / planned features.", "Text",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.9561707265355988`*^9, 3.956170744953171*^9}},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->908162033,ExpressionUUID->"591c8493-8b7f-4a78-a525-823e97e30353"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1440, 846},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
WindowTitle->"ImageFilterAnalysis | Definition Notebook",
DockedCells->{
  Cell[
   BoxData[
    TemplateBox[{}, "MainGridTemplate"]], "DockedCell", 
   CellMargins -> {{-10, -10}, {-8, -8}}, CellFrame -> 0, Background -> 
   RGBColor[0.33333, 0.33333, 0.33333], CellTags -> {"MainDockedCell"}, 
   CacheGraphics -> False], 
  Cell[
   BoxData[
    TemplateBox[{}, "ToolsGridTemplate"]], "DockedCell", 
   TaggingRules -> {"Tools" -> True}, CellTags -> {"ToolbarDockedCell"}, 
   CellFrameMargins -> {{0, 0}, {2, 2}}, CellFrame -> {{0, 0}, {1, 0}}, 
   CacheGraphics -> False, CellOpen -> Dynamic[
     CurrentValue[
      EvaluationNotebook[], {TaggingRules, "ToolsOpen"}, True]]], 
  Cell[
   BoxData[
    StyleBox[
     TagBox[
      GridBox[{{
         OverlayBox[{
           StyleBox[
            TagBox[
             DynamicModuleBox[{Typeset`var$$ = False}, 
              InterpretationBox[
               StyleBox[
                PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], 
                    StyleBox[
                    DynamicBox[
                    ToBoxes[
                    DateString[
                    TimeZoneConvert[
                    DateObject[
                    3.956171621115335`16.34985011245079*^9, TimeZone -> 0]], {
                    "MonthName", " ", "DayShort", ", ", "Year", " ", 
                    "Hour12Short", ":", "Minute", " ", "AMPMLowerCase"}], 
                    StandardForm], SingleEvaluation -> True, Evaluator -> 
                    "System"], FontSlant -> Italic, FontColor -> 
                    GrayLevel[0.5], FontSize -> 0.9 Inherited, StripOnInput -> 
                    False]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], 
                    StyleBox[
                    DynamicBox[
                    ToBoxes[
                    DateString[
                    TimeZoneConvert[
                    DateObject[
                    3.956171621115335`16.34985011245079*^9, TimeZone -> 0]], {
                    "MonthName", " ", "DayShort", ", ", "Year", " ", 
                    "Hour12Short", ":", "Minute", " ", "AMPMLowerCase"}], 
                    StandardForm], SingleEvaluation -> True, Evaluator -> 
                    "System"], FontSlant -> Italic, FontColor -> 
                    GrayLevel[0.5], FontSize -> 0.9 Inherited, StripOnInput -> 
                    False]}, {"", 
                    PaneBox["\"\"", ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}]}, 
                 Dynamic[
                  TrueQ[Typeset`var$$]], Alignment -> Automatic, ImageSize -> 
                 Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                 DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                 Baseline], Deployed -> False, StripOnInput -> False], 
               OpenerView[{
                 Style[
                  Dynamic[
                   DateString[
                    TimeZoneConvert[
                    DateObject[
                    3.956171621115335`16.34985011245079*^9, TimeZone -> 0]], {
                    "MonthName", " ", "DayShort", ", ", "Year", " ", 
                    "Hour12Short", ":", "Minute", " ", "AMPMLowerCase"}], 
                   SingleEvaluation -> True, Evaluator -> "System"], 
                  FontSlant -> Italic, FontColor -> GrayLevel[0.5], FontSize -> 
                  0.9 Inherited], ""}, False]], DynamicModuleValues -> 
              Automatic], Setting[#, {0}]& ], ShowContents -> False, 
            StripOnInput -> False], 
           StyleBox[
            DynamicBox[
             ToBoxes[
              DateString[
               TimeZoneConvert[
                DateObject[
                3.956171621115335`16.34985011245079*^9, TimeZone -> 0]], {
               "MonthName", " ", "DayShort", ", ", "Year", " ", "Hour12Short",
                 ":", "Minute", " ", "AMPMLowerCase"}], StandardForm], 
             SingleEvaluation -> True, Evaluator -> "System"], FontSlant -> 
            Italic, FontColor -> GrayLevel[0.5], FontSize -> 0.9 Inherited, 
            StripOnInput -> False]}, Alignment -> {Right, Baseline}], 
         "\"   \"", 
         ItemBox[
          StyleBox[
          "\"Found 2 potential issues and 5 suggestions\"", LineBreakWithin -> 
           Automatic, LineIndent -> 0, StripOnInput -> False], ItemSize -> 
          Fit, StripOnInput -> False], "", 
         TagBox[
          ButtonBox[
           TagBox[
            PaneSelectorBox[{False -> GraphicsBox[{
                 GrayLevel[
                  NCache[
                   Rational[64, 85], 0.7529411764705882]], 
                 
                 PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                  0.42426406871192845`}, {0.42426406871192845`, 
                  0.282842712474619}}], 
                 
                 PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                  0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                  0.42426406871192845`}}]}, ImageSize -> 18, PlotRangePadding -> 
                0, PlotRange -> 0.7, Background -> None], True -> GraphicsBox[{
                 GrayLevel[
                  NCache[
                   Rational[128, 255], 0.5019607843137255]], 
                 
                 PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                  0.42426406871192845`}, {0.42426406871192845`, 
                  0.282842712474619}}], 
                 
                 PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                  0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                  0.42426406871192845`}}]}, ImageSize -> 18, PlotRangePadding -> 
                0, PlotRange -> 0.7, Background -> None]}, 
             Dynamic[
              CurrentValue["MouseOver"]], ImageSize -> Automatic, 
             FrameMargins -> 0], 
            MouseAppearanceTag["LinkHand"]], ButtonFunction :> 
           With[{DefinitionNotebookClient`Stripes`PackagePrivate`nbo$ = 
              EvaluationNotebook[]}, 
             CurrentValue[
              DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
               DockedCells] = If[
               TrueQ[
                MemberQ[
                 CurrentValue["ModifierKeys"], "Control"]], 
               DeleteCases[
                Flatten[{
                  CurrentValue[
                  DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                   DockedCells]}], 
                Cell[
                 Blank[], "StripeCell", 
                 BlankNullSequence[]]], 
               DeleteCases[
                Flatten[{
                  CurrentValue[
                  DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                   DockedCells]}], 
                Condition[
                 Pattern[DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                  Blank[Cell]], 
                 Not[
                  FreeQ[
                  DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                   "e3cdcb05-05c0-4a6d-b93d-a4fb9f5e32df"]]]]]], Appearance -> 
           None, BoxID -> "e3cdcb05-05c0-4a6d-b93d-a4fb9f5e32df", Evaluator -> 
           Automatic, Method -> "Preemptive"], 
          MouseAppearanceTag["LinkHand"]]}}, 
       GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
       AutoDelete -> False, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
     "Text", FontSize -> 12, FontColor -> GrayLevel[0.25], StripOnInput -> 
     False]], "StripeCell", CellFrameMargins -> {{20, 5}, {2, 2}}, 
   CellFrame -> {{0, 0}, {1, 0}}, CellFrameColor -> GrayLevel[0.75]], 
  Cell[
   BoxData[
    StyleBox[
     TagBox[
      GridBox[{{
         OverlayBox[{
           StyleBox[
            TagBox[
             DynamicModuleBox[{Typeset`var$$ = False}, 
              InterpretationBox[
               StyleBox[
                PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], 
                    StyleBox[
                    DynamicBox[
                    ToBoxes[
                    DateString[
                    TimeZoneConvert[
                    DateObject[
                    3.956171694730252`16.349850120531972*^9, TimeZone -> 
                    0]], {"MonthName", " ", "DayShort", ", ", "Year", " ", 
                    "Hour12Short", ":", "Minute", " ", "AMPMLowerCase"}], 
                    StandardForm], SingleEvaluation -> True, Evaluator -> 
                    "System"], FontSlant -> Italic, FontColor -> 
                    GrayLevel[0.5], FontSize -> 0.9 Inherited, StripOnInput -> 
                    False]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], 
                    StyleBox[
                    DynamicBox[
                    ToBoxes[
                    DateString[
                    TimeZoneConvert[
                    DateObject[
                    3.956171694730252`16.349850120531972*^9, TimeZone -> 
                    0]], {"MonthName", " ", "DayShort", ", ", "Year", " ", 
                    "Hour12Short", ":", "Minute", " ", "AMPMLowerCase"}], 
                    StandardForm], SingleEvaluation -> True, Evaluator -> 
                    "System"], FontSlant -> Italic, FontColor -> 
                    GrayLevel[0.5], FontSize -> 0.9 Inherited, StripOnInput -> 
                    False]}, {"", 
                    PaneBox["\"\"", ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}]}, 
                 Dynamic[
                  TrueQ[Typeset`var$$]], Alignment -> Automatic, ImageSize -> 
                 Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                 DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                 Baseline], Deployed -> False, StripOnInput -> False], 
               OpenerView[{
                 Style[
                  Dynamic[
                   DateString[
                    TimeZoneConvert[
                    DateObject[
                    3.956171694730252`16.349850120531972*^9, TimeZone -> 
                    0]], {"MonthName", " ", "DayShort", ", ", "Year", " ", 
                    "Hour12Short", ":", "Minute", " ", "AMPMLowerCase"}], 
                   SingleEvaluation -> True, Evaluator -> "System"], 
                  FontSlant -> Italic, FontColor -> GrayLevel[0.5], FontSize -> 
                  0.9 Inherited], ""}, False]], DynamicModuleValues -> 
              Automatic], Setting[#, {0}]& ], ShowContents -> False, 
            StripOnInput -> False], 
           StyleBox[
            DynamicBox[
             ToBoxes[
              DateString[
               TimeZoneConvert[
                DateObject[
                3.956171694730252`16.349850120531972*^9, TimeZone -> 0]], {
               "MonthName", " ", "DayShort", ", ", "Year", " ", "Hour12Short",
                 ":", "Minute", " ", "AMPMLowerCase"}], StandardForm], 
             SingleEvaluation -> True, Evaluator -> "System"], FontSlant -> 
            Italic, FontColor -> GrayLevel[0.5], FontSize -> 0.9 Inherited, 
            StripOnInput -> False]}, Alignment -> {Right, Baseline}], 
         "\"   \"", 
         ItemBox[
          StyleBox[
          "\"Found 1 suggestion\"", LineBreakWithin -> Automatic, LineIndent -> 
           0, StripOnInput -> False], ItemSize -> Fit, StripOnInput -> False],
          "", 
         TagBox[
          ButtonBox[
           TagBox[
            PaneSelectorBox[{False -> GraphicsBox[{
                 GrayLevel[
                  NCache[
                   Rational[64, 85], 0.7529411764705882]], 
                 
                 PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                  0.42426406871192845`}, {0.42426406871192845`, 
                  0.282842712474619}}], 
                 
                 PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                  0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                  0.42426406871192845`}}]}, ImageSize -> 18, PlotRangePadding -> 
                0, PlotRange -> 0.7, Background -> None], True -> GraphicsBox[{
                 GrayLevel[
                  NCache[
                   Rational[128, 255], 0.5019607843137255]], 
                 
                 PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                  0.42426406871192845`}, {0.42426406871192845`, 
                  0.282842712474619}}], 
                 
                 PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                  0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                  0.42426406871192845`}}]}, ImageSize -> 18, PlotRangePadding -> 
                0, PlotRange -> 0.7, Background -> None]}, 
             Dynamic[
              CurrentValue["MouseOver"]], ImageSize -> Automatic, 
             FrameMargins -> 0], 
            MouseAppearanceTag["LinkHand"]], ButtonFunction :> 
           With[{DefinitionNotebookClient`Stripes`PackagePrivate`nbo$ = 
              EvaluationNotebook[]}, 
             CurrentValue[
              DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
               DockedCells] = If[
               TrueQ[
                MemberQ[
                 CurrentValue["ModifierKeys"], "Control"]], 
               DeleteCases[
                Flatten[{
                  CurrentValue[
                  DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                   DockedCells]}], 
                Cell[
                 Blank[], "StripeCell", 
                 BlankNullSequence[]]], 
               DeleteCases[
                Flatten[{
                  CurrentValue[
                  DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                   DockedCells]}], 
                Condition[
                 Pattern[DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                  Blank[Cell]], 
                 Not[
                  FreeQ[
                  DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                   "f7f7686f-37b2-4711-ba2c-5d21662ee38b"]]]]]], Appearance -> 
           None, BoxID -> "f7f7686f-37b2-4711-ba2c-5d21662ee38b", Evaluator -> 
           Automatic, Method -> "Preemptive"], 
          MouseAppearanceTag["LinkHand"]]}}, 
       GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
       AutoDelete -> False, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
     "Text", FontSize -> 12, FontColor -> GrayLevel[0.25], StripOnInput -> 
     False]], "StripeCell", CellFrameMargins -> {{20, 5}, {2, 2}}, 
   CellFrame -> {{0, 0}, {1, 0}}, CellFrameColor -> GrayLevel[0.75]], 
  Cell[
   BoxData[
    StyleBox[
     InterpretationBox[
      StyleBox[
       PaneSelectorBox[{False -> GridBox[{{
             OpenerBox[
              Dynamic[
               CurrentValue[
                EvaluationCell[], {TaggingRules, "StripeOpen"}, False]], 
              Appearance -> Automatic, Enabled -> Automatic, AutoAction -> 
              False, ContinuousAction -> False], 
             TagBox[
              GridBox[{{
                 StyleBox[
                  DynamicBox[
                   ToBoxes[
                    DateString[
                    TimeZoneConvert[
                    DateObject[
                    3.956171745298385`16.34985012608316*^9, TimeZone -> 0]], {
                    "MonthName", " ", "DayShort", ", ", "Year", " ", 
                    "Hour12Short", ":", "Minute", " ", "AMPMLowerCase"}], 
                    StandardForm], SingleEvaluation -> True, Evaluator -> 
                   "System"], FontSlant -> Italic, FontColor -> 
                  GrayLevel[0.5], FontSize -> 0.9 Inherited, StripOnInput -> 
                  False], "\"   \"", 
                 ItemBox[
                  StyleBox[
                   TagBox[
                    
                    GridBox[{{
                    "\"Paclet build completed successfully.\"", "\"\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"], 
                   LineBreakWithin -> Automatic, LineIndent -> 0, 
                   StripOnInput -> False], ItemSize -> Fit, StripOnInput -> 
                  False], 
                 ItemBox[
                  StyleBox[
                   TemplateBox[{
                    ButtonBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> 
                    "\"FaizonZaman__ImageFilterAnalysis-0.9.0.paclet\"", True -> 
                    StyleBox[
                    "\"FaizonZaman__ImageFilterAnalysis-0.9.0.paclet\"", 
                    "HyperlinkActive", StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                    MouseAppearanceTag["LinkHand"]], ButtonFunction :> 
                    SystemOpen[
                    File[
                    "/Users/faizonzaman/Developer/wolfram/ImageFilterAnalysis/\
build/"]], Appearance -> None, BaseStyle -> "Hyperlink", Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    "OEM6eJxtjk0LwjAQRIkUEfRX9G63V48VKQieGr0oIqtuSiAfJZta7a/\
XiEdvA2/eMErwrMFh7Z/ESvC08SmrjLOd5iizWhuS4qQmPN+\
T7QxGSlz8uMvhwBQYFOrRuxEtOtjQg4zvKMDgjQpoYWuxpc9UpFA5NC/WDNdemzvUX++\
YvMvlT21ZFquiLDq8GYq5XKQ/VWh7Sy5KcX4D4etDlQ=="}, "ClickToCopyTemplate"], 
                   LineBreakWithin -> Automatic, LineIndent -> 0, 
                   StripOnInput -> False], ItemSize -> Fit, StripOnInput -> 
                  False], "\"\"", 
                 TagBox[
                  ButtonBox[
                   TagBox[
                    PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[
                    NCache[
                    Rational[64, 85], 0.7529411764705882]], 
                    
                    PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                    0.42426406871192845`}, {0.42426406871192845`, 
                    0.282842712474619}}], 
                    
                    PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                    0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                    0.42426406871192845`}}]}, ImageSize -> 18, 
                    PlotRangePadding -> 0, PlotRange -> 0.7, Background -> 
                    None], True -> GraphicsBox[{
                    GrayLevel[
                    NCache[
                    Rational[128, 255], 0.5019607843137255]], 
                    
                    PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                    0.42426406871192845`}, {0.42426406871192845`, 
                    0.282842712474619}}], 
                    
                    PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                    0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                    0.42426406871192845`}}]}, ImageSize -> 18, 
                    PlotRangePadding -> 0, PlotRange -> 0.7, Background -> 
                    None]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                    MouseAppearanceTag["LinkHand"]], ButtonFunction :> 
                   With[{DefinitionNotebookClient`Stripes`PackagePrivate`nbo$ = 
                    EvaluationNotebook[]}, 
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells] = If[
                    TrueQ[
                    MemberQ[
                    CurrentValue["ModifierKeys"], "Control"]], 
                    DeleteCases[
                    Flatten[{
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                    Cell[
                    Blank[], "StripeCell", 
                    BlankNullSequence[]]], 
                    DeleteCases[
                    Flatten[{
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                    Condition[
                    Pattern[
                    DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    Blank[Cell]], 
                    Not[
                    FreeQ[
                    DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    "d99f0174-7c15-4e21-b2f9-2730a505e1bf"]]]]]], Appearance -> 
                   None, BoxID -> "d99f0174-7c15-4e21-b2f9-2730a505e1bf", 
                   Evaluator -> Automatic, Method -> "Preemptive"], 
                  MouseAppearanceTag["LinkHand"]]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
           AutoDelete -> False, 
           GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
           BaselinePosition -> {1, 1}], True -> GridBox[{{
             OpenerBox[
              Dynamic[
               CurrentValue[
                EvaluationCell[], {TaggingRules, "StripeOpen"}, False]], 
              Appearance -> Automatic, Enabled -> Automatic, AutoAction -> 
              False, ContinuousAction -> False], 
             TagBox[
              GridBox[{{
                 StyleBox[
                  DynamicBox[
                   ToBoxes[
                    DateString[
                    TimeZoneConvert[
                    DateObject[
                    3.956171745298385`16.34985012608316*^9, TimeZone -> 0]], {
                    "MonthName", " ", "DayShort", ", ", "Year", " ", 
                    "Hour12Short", ":", "Minute", " ", "AMPMLowerCase"}], 
                    StandardForm], SingleEvaluation -> True, Evaluator -> 
                   "System"], FontSlant -> Italic, FontColor -> 
                  GrayLevel[0.5], FontSize -> 0.9 Inherited, StripOnInput -> 
                  False], "\"   \"", 
                 ItemBox[
                  StyleBox[
                   TagBox[
                    
                    GridBox[{{
                    "\"Paclet build completed successfully.\"", "\"\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"], 
                   LineBreakWithin -> Automatic, LineIndent -> 0, 
                   StripOnInput -> False], ItemSize -> Fit, StripOnInput -> 
                  False], 
                 ItemBox[
                  StyleBox[
                   TemplateBox[{
                    ButtonBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> 
                    "\"FaizonZaman__ImageFilterAnalysis-0.9.0.paclet\"", True -> 
                    StyleBox[
                    "\"FaizonZaman__ImageFilterAnalysis-0.9.0.paclet\"", 
                    "HyperlinkActive", StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                    MouseAppearanceTag["LinkHand"]], ButtonFunction :> 
                    SystemOpen[
                    File[
                    "/Users/faizonzaman/Developer/wolfram/ImageFilterAnalysis/\
build/"]], Appearance -> None, BaseStyle -> "Hyperlink", Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    "OEM6eJxtjk0LwjAQRIkUEfRX9G63V48VKQieGr0oIqtuSiAfJZta7a/\
XiEdvA2/eMErwrMFh7Z/ESvC08SmrjLOd5iizWhuS4qQmPN+\
T7QxGSlz8uMvhwBQYFOrRuxEtOtjQg4zvKMDgjQpoYWuxpc9UpFA5NC/WDNdemzvUX++\
YvMvlT21ZFquiLDq8GYq5XKQ/VWh7Sy5KcX4D4etDlQ=="}, "ClickToCopyTemplate"], 
                   LineBreakWithin -> Automatic, LineIndent -> 0, 
                   StripOnInput -> False], ItemSize -> Fit, StripOnInput -> 
                  False], "\"\"", 
                 TagBox[
                  ButtonBox[
                   TagBox[
                    PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[
                    NCache[
                    Rational[64, 85], 0.7529411764705882]], 
                    
                    PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                    0.42426406871192845`}, {0.42426406871192845`, 
                    0.282842712474619}}], 
                    
                    PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                    0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                    0.42426406871192845`}}]}, ImageSize -> 18, 
                    PlotRangePadding -> 0, PlotRange -> 0.7, Background -> 
                    None], True -> GraphicsBox[{
                    GrayLevel[
                    NCache[
                    Rational[128, 255], 0.5019607843137255]], 
                    
                    PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                    0.42426406871192845`}, {0.42426406871192845`, 
                    0.282842712474619}}], 
                    
                    PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                    0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                    0.42426406871192845`}}]}, ImageSize -> 18, 
                    PlotRangePadding -> 0, PlotRange -> 0.7, Background -> 
                    None]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                    MouseAppearanceTag["LinkHand"]], ButtonFunction :> 
                   With[{DefinitionNotebookClient`Stripes`PackagePrivate`nbo$ = 
                    EvaluationNotebook[]}, 
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells] = If[
                    TrueQ[
                    MemberQ[
                    CurrentValue["ModifierKeys"], "Control"]], 
                    DeleteCases[
                    Flatten[{
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                    Cell[
                    Blank[], "StripeCell", 
                    BlankNullSequence[]]], 
                    DeleteCases[
                    Flatten[{
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                    Condition[
                    Pattern[
                    DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    Blank[Cell]], 
                    Not[
                    FreeQ[
                    DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    "d99f0174-7c15-4e21-b2f9-2730a505e1bf"]]]]]], Appearance -> 
                   None, BoxID -> "d99f0174-7c15-4e21-b2f9-2730a505e1bf", 
                   Evaluator -> Automatic, Method -> "Preemptive"], 
                  MouseAppearanceTag["LinkHand"]]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Grid"]}, {"", 
             PaneBox[
              TagBox[
               GridBox[{{"\"\"", 
                  StyleBox[
                   TagBox[
                    
                    GridBox[{{
                    "\"\[FilledVerySmallSquare]\"", "\"Build result: \"", 
                    TemplateBox[{
                    TagBox[
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"PacletArchive\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"/Users/faizonzaman/Developer/wolfram/\
ImageFilterAnalysis/build/FaizonZaman__ImageFilterAnalysis-0.9.0.paclet\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"4.756068`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"PacletArchive\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"/Users/faizonzaman/Developer/wolfram/\
ImageFilterAnalysis/build/FaizonZaman__ImageFilterAnalysis-0.9.0.paclet\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"4.756068`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"BuildPacletDirectory\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"File", "[", 
                    
                    TemplateBox[{
                    "\"/Users/faizonzaman/Developer/wolfram/\
ImageFilterAnalysis/build/FaizonZaman__ImageFilterAnalysis\""}, 
                    "FileArgument"], "]"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"PacletManifest\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    TagBox[
                    
                    DynamicModuleBox[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
                    "InitialData" -> <|"Files" -> {<|"File" -> 
                    File["Kernel/ImageFilterAnalysis.wl"], "Hash" -> 
                    
                    "70705e50dc17930e91e7f88ab9aeb0759345135b951ebc2559f6e2197\
dfc5a1f"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
ImageFilterAnalysisData.nb"], "Hash" -> 
                    "5c87cb47068af2518b36ec48da5be3fc041b225a75aab9985ed6902fb\
c8beb34"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
RunImageFilter.nb"], "Hash" -> 
                    "ecb6cdf84249e579b9dada83f92a87118cd8312c73518a52062f5093d\
5e15265"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
TestFilters.nb"], "Hash" -> 
                    "176461cde63ffebb2a94a76ca275fb02215bc6965f15aaa751c8cba3f\
bbeb020"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/$\
DefaultTestFilters.nb"], "Hash" -> 
                    "5da8b5231eaffc02fc1b79bace802105457c89db07f516222d56204b4\
e443c68"|>}|>, "AllowEmbedding" -> True, "InitialShape" -> 
                    TypeSystem`PackageScope`HeaderShape[<|{All, All, 
                    TypeSystem`PackageScope`KeyDummy[0]} -> 
                    1, {All, All, "File"} -> 1, {All, All, "Hash"} -> 1|>, 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`AtomShape[56.00000000000001], 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`Limited[
                    
                    TypeSystem`PackageScope`RowShape[<|"File" -> 
                    TypeSystem`PackageScope`AtomShape[60], "Hash" -> 
                    TypeSystem`PackageScope`AtomShape[560.]|>], 
                    DirectedInfinity[1], 2, {All, All}]], 5, 
                    DirectedInfinity[1], {All}]]], 1, 
                    DirectedInfinity[1], {}]], "InitialType" -> 
                    TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Vector[
                    TypeSystem`Struct[{"File", "Hash"}, {
                    TypeSystem`Atom[File], 
                    TypeSystem`Atom[String]}], 5], 1], "Meta" -> <||>, 
                    "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
                    TypeSystem`PackageScope`HeaderShape[<|{All, All, 
                    TypeSystem`PackageScope`KeyDummy[0]} -> 
                    1, {All, All, "File"} -> 1, {All, All, "Hash"} -> 1|>, 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`AtomShape[56.00000000000001], 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`Limited[
                    
                    TypeSystem`PackageScope`RowShape[<|"File" -> 
                    TypeSystem`PackageScope`AtomShape[60], "Hash" -> 
                    TypeSystem`PackageScope`AtomShape[560.]|>], 
                    DirectedInfinity[1], 2, {All, All}]], 5, 
                    DirectedInfinity[1], {All}]]], 1, 
                    DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Vector[
                    TypeSystem`Struct[{"File", "Hash"}, {
                    TypeSystem`Atom[File], 
                    TypeSystem`Atom[String]}], 5], 1], "Path" -> {}, 
                    "DisplayedRowCount" -> 1, "DisplayedColumnCount" -> 2, 
                    "DataRowCount" -> 1, "DataColumnCount" -> 2, 
                    "SortPaths" -> {}, "SortDirections" -> {}, 
                    "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
                    DynamicModule[{
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
                    Style[
                    Grid[{{
                    Item[
                    Pane[
                    Annotation[
                    Mouseover[
                    Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                    Scaled[-0.15]], 
                    Graphics[{
                    GrayLevel[0.6], 
                    
                    Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^Rational[-1, 2]}, {-2^Rational[-1, 
                    2], 2^Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                    Scaled[-0.15]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, Keys}, "KeyDummy", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, ImageMargins -> {{5, 
                    3}, {4, 5}}], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["File", 
                    Style[
                    "File", FontColor -> RGBColor[0.27450980392156865`, 
                    0.5372549019607843, 0.792156862745098]]], "LinkHand"], {
                    "MouseClicked", 1} :> If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, All, "File"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, "File"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, ImageMargins -> {{5, 
                    3}, {4, 5}}], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Hash", 
                    Style[
                    "Hash", FontColor -> RGBColor[0.27450980392156865`, 
                    0.5372549019607843, 0.792156862745098]]], "LinkHand"], {
                    "MouseClicked", 1} :> If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, All, "Hash"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, "Hash"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, ImageMargins -> {{5, 
                    3}, {4, 5}}], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Files", 
                    Style[
                    "Files", FontColor -> RGBColor[0.27450980392156865`, 
                    0.5372549019607843, 0.792156862745098]]], "LinkHand"], {
                    "MouseClicked", 1} :> If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Files"]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"]}, "RowHeader", False], "Mouse"], 
                    ImageSize -> {{56.00000000000001, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel/ImageFilterAnalysis.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 1, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "70705e50dc17930e91e7f88ab9aeb0759345135b951ebc2559f6e2197\
dfc5a1f", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 1, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
ImageFilterAnalysisData.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 2, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "5c87cb47068af2518b36ec48da5be3fc041b225a75aab9985ed6902fb\
c8beb34", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 2, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
RunImageFilter.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 3, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "ecb6cdf84249e579b9dada83f92a87118cd8312c73518a52062f5093d\
5e15265", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 3, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/TestFilters.\
nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 4, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "176461cde63ffebb2a94a76ca275fb02215bc6965f15aaa751c8cba3f\
bbeb020", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 4, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/$\
DefaultTestFilters.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 5, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "5da8b5231eaffc02fc1b79bace802105457c89db07f516222d56204b4\
e443c68", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 5, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}}, BaseStyle -> {ContextMenu -> 
                    Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem["Show " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem["Hide " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                    "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
                    Dividers -> All, FrameStyle -> GrayLevel[
                    0.7490196078431373], Spacings -> {0, 0}, Alignment -> 
                    Left, BaseStyle -> {FontFamily -> "Source Sans Pro", 
                    FontSize -> 14, FontWeight -> Plain}], LineBreakWithin -> 
                    False, ContextMenu -> {}, NumberMarks -> False, 
                    ShowAutoStyles -> False]], 
                    TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
                    Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
                    Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
                    
                    Module[{
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                    TypeSystem`NestedGrid`PackagePrivate`datasetData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                    Not[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
                    TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
                    TypeSystem`SparseGrid[
                    TypeSystem`H["(data no longer present)"]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
                    DynamicModuleValues :> {}], 
                    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
                    TypeSystem`PackageScope`SubViewPathbar[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
                    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = 
                    Dynamic[
                    Replace[
                    Replace[
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
                    Blank[]] -> "", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                    Blank[]], 
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                    Blank[]], 
                    Pattern[
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Blank[]]] :> (
                    Increment[
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                    TypeSystem`NestedGrid`PackagePrivate`path$; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
                    TypeSystem`NestedGrid`PackagePrivate`pathType$; 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader = TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
                    TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                    TypeSystem`NestedGrid`PackagePrivate`path$, 
                    TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
                    Null :> Spacer[10], Blank[] :> Spacer[10]}], 
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`bar, 
                    Except[
                    Alternatives[
                    Blank[Spacer], ""]]] :> 
                    TypeSystem`NestedGrid`PackagePrivate`makeFramedPathbar[
                    TypeSystem`NestedGrid`PackagePrivate`bar]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}, 
                    DynamicWrapperBox[
                    DynamicBox[
                    ToBoxes[
                    Dataset`DatasetContent[
                    2, "Path" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
                    "Grid" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
                    "State" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    "VPos" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
                    "HPos" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
                    "TopBar" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
                    "BottomBar" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
                    "OutputID" -> Hold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
                    StandardForm], TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
                    MouseAnnotation[]], Initialization :> (
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
                    CreateUUID[]), DynamicModuleValues :> {}, 
                    BaseStyle -> {LineBreakWithin -> False}, 
                    UnsavedVariables :> {
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$}], 
                    Deploy, DefaultBaseStyle -> "Deploy"], 
                    Dataset`InterpretDataset[1], Selectable -> False, 
                    Editable -> False, SelectWithContents -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"DocumentationBuildResults\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], ButtonFunction :> (
                    Typeset`open$$ = True), Appearance -> None, 
                    BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"Documentation build completed successfully.\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.301592`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], ButtonFunction :> (
                    Typeset`open$$ = False), Appearance -> None, 
                    BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"Documentation build completed successfully.\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.301592`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"MaximumFileTime\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    
                    TemplateBox[{"0.663669`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], ",", 
                    "\"/Users/faizonzaman/Developer/wolfram/\
ImageFilterAnalysis/Documentation/English/ReferencePages/Symbols/\
RunImageFilter.nb\""}], "}"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"ProcessedFiles\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"\[LeftAssociation]", 
                    RowBox[{
                    
                    RowBox[{
                    "\"/Users/faizonzaman/Developer/wolfram/\
ImageFilterAnalysis/Documentation/English/ReferencePages/Symbols/\
ImageFilterAnalysisData.nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"0.631025`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"0.631025`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/faizonzaman/Developer/wolfram/\
ImageFilterAnalysis/Documentation/English/ReferencePages/Symbols/\
RunImageFilter.nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"0.663669`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"0.663669`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/faizonzaman/Developer/wolfram/\
ImageFilterAnalysis/Documentation/English/ReferencePages/Symbols/TestFilters.\
nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"0.510795`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"0.510795`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/faizonzaman/Developer/wolfram/\
ImageFilterAnalysis/Documentation/English/ReferencePages/Symbols/$\
DefaultTestFilters.nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"0.478229`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"0.478229`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}]}], 
                    "\[RightAssociation]"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"FailedFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"PercentSucceeded\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"100.`", "\"%\"", "percent", "\"Percent\""}, 
                    "QuantityPostfix", SyntaxForm -> Mod], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"ProcessedFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["4", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"SuccessfulFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["4", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"SkippedFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"TargetWolframVersionNumber\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["14.2`", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"DocumentationBuild\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], "}"}],
                     "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"PacletBuild\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    Short[#, 0.75]& ], 
                    "OEM6eJztXU2QG0lWtlpS/7nttmc8w+\
7ABo3oJRYYtVUllX52J8aW1d1jM25PT2ePvT+\
xMc6qyuqu6FKVqCy13QNsLMReOcBucIEDwY3gwpnLxgYBRwhOcCJYFoIggmCCE9yGl1k/\
Kv20XSWpf2SnDi11Vf68zPfyvS9fvsw0MnRxDz+75zwn1MjTmw9sj7gdl3jYMx0bHhsZOr/\
nsARGjuYemtQz5uj8Pj6AJ2gBdTWNUIquom67jd2T+\
wTrKPMdI0tvbJ7YuG1qO47etQjLPhdlzyLi0ev7Jx1CiffU6RB7fZ3mt7FFSfj2VviWtFWiIyCHrK+\
j/B6UfwJpru6TdseChz6FfsFZurqLbYKIRTTPcfvrzO0BGWElebrwgWvq/\
ZnD7wVWCHs1T5fudT0v7IbloEV+ue9sb+\
265jGQ8HTbdWxvy9b3CHW6rkbQ0vbWPdNr4w5FN4KOgUwfQTuJy4hnpGwSC58QnV73q9ju2hrr8dN6\
J7fvdknUjOVmp0Owi23o/Nwjx+69WbqHKUHeiUWMKwNtX9o6xlYXQ8/\
QpWbXc9rAYi16O79DvENHR8u7LoG+\
9czjWKFNyzyw28T2wg6l8y3CJCX87iV90MYHBJmfEeixhaDHolx99eb3zTah7hX+\
WbkbPYGMK62u60LBj4Fggq5tQ/+2cOc+MQ8OGQn5XecZ1Jmht5oqdayuR+\
Lp6bUdfGCbhqlxGW59Aexe3HZxmzM1Sxd59zDxzRf+9U9+WIAClzZNF2SGtRne731wr+VYjuv+HP/\
84x33Tf752R33m/zzT3daX45avII81+x8ZD+wO12vJ8X+y+stIB0I28W6btoHg6+XOVmcngE+\
rvA3O9g9MG0aF2P23brSujL4+3Ra5nvCHpaTib7DsZ0dHNuDgyzIilYLu1iziNd0tUPorwLKFb6+\
VkDLUM4mMXDX8tBbgcw/8Ei7aduOr0tQ9vPf/9OY7rALtz+hIEG3DWx+5tif4Ta2b2+\
SY2KByLu3nzmWAV1wm8vTtmmBkDVtbJ1Qk95Wu6al397m+\
b7N8n366YhkxdJGY6O00eHkFiIVxaiapAOuFvahRRYT1bEbD7X1lR1oVrRU2agp1VK1/\
hRlC7SAFijRHFunaKmA/F8FtPhxF9ue6Z30pAid2B5+\
vu24bZoFfdvf1DDVjUAIhsZymAItgNR32zaN9Y4/bHMPidFLloPWDqcZoVKW2SPQc8Qjg4K/\
GhDDKOTKIjEtw/\
UkJyisFYFMsNGYuNbWXPrKYpo4N6CJb6FD5xkbqvZB6xDUuMY06WAXXX3UBdPnggo4Gnp3HUwPKBXQ\
WSZlKi7b4zIvmsuDr1YGs56xGGT3nc7lFYAbjCeWaZNdh5qBufUZnGllolS+\
rb0QjNCyHDo2Rhg0LgIkCJAwBkiYFyDhtQMJEzT17cI91tM+w/0h4rgn47d6aL6JcsAywmaVo+\
d9CJ+1kBTQCiOh6R50mX5Dme9OrfduBCNlB4MyItQbv9/yMbkJf82PmIYv9U/\
Di8yIoBMKZT99BAQQnemBp0DVEfRDaL7WqT8Db75RRFcf2GA7sbWJPdzMFFGe9Q1zHvBym3NFn2GsV\
zjjvvIhcW1ijer/\
jWcWpL6P6SG6WyvVSgpRSrom1RrlEmlIpGbU61htYKKWakqjXFGksqI2FImomqwoDaNKZKlR0w1NwZ\
IxXPEHm47GGcb76/\
aWfWCZ9PD2HjEI2AGN7AI99DY6aauORUeRx1q4YasRiYpWr2lqpQZjDxuyItXVcpVolbqOFZWUDa1U\
kVRZVnBNwUB2o64QvdooyYaq1VWilivDJL6fisS9rh2jMk4Z0dSqphv1ilxpEKXWUBs61nG9bDRkXK\
9JUl3T62VJ1mploBorcqkqG0qpUdYVIilyVRmm7BupKNsHyfGponGypFq1UpU0nVTLhkFUVcaNCq5V\
NSzXFEMtybKkqFq1UVUMCboM+k3S6pqKy4YK/VWSS8NktVKRtR4MoVPIU6CLVEUuSwQbwD3Z0CQV+\
g5rpF6SpZJSUWpavaGD9BmKVJVlWVeqcqmiVkilUtaq9SK63rQs59kW81Fx082hYxGtBEMEHeIOM9e\
/HBtkwchCGiinp8xfRlyerJkthmqDZqFY/gfavXZa3g/JySYohhOGXUdk9TvulFes/YB4c/\
QXTyv9odk2QRkAAacS7yP0sI1ffQGdPkTjCTP0l05L2ATYxxO5GQ73Ht6dIoGJSjq1r0Eb+\
0yKCeTL29F6LxC1ZK3mjf7+796F1Dd8Q0r0B7ZhgiwxJs9FCDliZCs/Om1vOsYSZU5JFGD/\
nkZnJDLXbYzUJqWOBvlX48+AYjrvz1+BppuxV4+\
59R94CCm7WoRLA3Pu90vPITVUQdjNp9XcyoNsoxzMSHDzShEtAYv2AQkTr3ULBqDP+\
uDBMhgpMRTFUJyBoZibxTG4i73DXhNubpq0wx0XwKqW04VpOSS6FT31RcF/\
ATxcYSgrnnKVPRhItIQc12PV0F4919mzYE7u2PEX901dJzaDy3QHd2DS3LUAZy5/\
0tEBxLKmtDK0lAz3Ol0PZskPNtfXQ8D8brKMHSAWMl3pR9sJMx/vOnR9nbuk0mQ7HC/\
bATwEUrP0Wt9kIeZQ4KVJiUoDFAZq1H/HJkSbpGM5JzA7yPsOpwWa469CL0PPp5bjcyn4Zr41+\
F7uzXWY92XH6VLiHBOXeV8+cHHn0NTosP8qci215l/g9gPCkIYtortl/vnrH/eV2hsSS/\
Ds5CGbSwYpf3aH+ax2HevkAMqJeXaDb9/txDXE4h4nHlutL/j/\
vueq9cWLUyUpKEHuRHVNr6BkTZuURfAwmRSuI8vUmGfsiLsANxJlshyo775j6WMohyHDTnNgbClaDK\
GBPzVAeS7Gozyhg+47NuMBvTXKDbvCc53m98v7ywH8dw7MUuQBugfkH7igUvV+wTb457/vvMiVy33/\
dDHk0kuH68rWMWS/j23d4o7fVd7unke6b0QHdnwu0BHRvwE13LPLfK19ftc//AP2+Yc7rsQ/\
P73jfot//vMOWnxo2kes7gFHemT+VnjVLZCRI7BHTF/OPTCgU2qJ+\
K4dEu2IB0pg5g4GC57Si2LMgfpLJmNdbrN4/EPKStIZqnSWKZ1BSmmHUg/\
XixngIaifKa0UAL9geuRPeYRmepFmCiByqJlCxCw0k9BMl1czBT6F2dJM3Cf7imumRFOddBoqWH6JV\
FT0v9BRQkddFh3VWyHNwoQokNHLraFGkszdzIFy8iMnkmunyJV6qZXU3AuVU7I13cvM1uwpkhj8Hzh\
Gue8wLYNb702bs4uD4XEjKzidX5Ovqs8yKzmgGI+V0QLABXA0hEbXUAfb267TbqrOcdKBOa2Yh9nj+\
9yrOoQnjTqZZVa+jkN4wpig2WN39lUduZNGZc0yK1/HkTtJzNzs8Tr3qg7bSaMWZ5mVr+\
OwnUZM6ezxPP+qDt9Jo3pnmZUzOnwj6k7fM3mVb5J67u0Qu9u/a+\
yNltPuMOfX1vOOSyjbEEnryXpW65W575oHB8DFeZp/\
cmhqbJFv4ROb4jb5mMrJSrMw9T4KeHUu0tALfsojTujYzabvJW9iazi3Mlbu6FCDERw0gqCzyegaXw\
yC6sdrGGPIPWDsUeRETlfcgeWo2EKa61jWrhONtLNcZWB1PDG9w8HtQQmFGNrPojPXE6ZfDzOE1SQb\
YWEulng9zagMM6WrzqQPwYT43v51+vV01T2IZU5X7SHP48ew8qjTJl+Km9/\
BnnaYShnFmr3SZEjFxmz7anwVo3/BFRKmp/HjtExPvd7n997tRLmwZfW6LmWWS9YS+\
yR1S8Is59WScqJcNB6ozUBMMr2s+XsG+qK80+qXTMqGxSPNU+\
cdjEhPpUMP8TFhzne28ph95DCMt7iNTavrko8TL67rUAAlXmyH5piMTQZGTBqGt0ZUg+\
nbdglJL4A8XpYB3N9wTDsWK8FiC+\
DvR25Qw5jdmXrQpe8CugD1HLINGVm6yHBAcP7Ksr9ZgrUL5dn5HGvGYg9l5rd+\
swtIfQwL6AN9dGWyQmK2IAs/Jyusz5qg+eAMDz+M5wpw4pq/brz1nGhdj/\
BIjmqKSI7Yxg4Rz3GB8RxpYSGad0nbiR0Wco0Nj5FHjfgDPjfJgE9qLRmvt9od7+\
SsreUY2tSHfakxzzgQM5HagrREqC2htl4vtZXFuv5ynUWXNonFN666kfrioze94ko3yesT4qFJXr9Q\
9zYijTH5TYmhelOwXB+Mi7nUxpk4oKUm1YitD6gqlGOwe/QoTUZwECYKpYjheXGDLcbdlw+\
5mM2ahmQtb5KRorWyR46JS8maELFXQcTibD5vGQvObotL1zyUJ+Rq9uVq4Fi+\
l0tUHDGEizj5yFT2BOSdltM5WQu3RK95zlrLMjuqg119WGgyCTGp5wQHIYblJpQcDWhh1SedxKWGP/\
GWv81bzp6/pNVJPdZRq8dwik29g0YKQh/jd0G2SI/zpr32iDxbaxF+Ds3UGJ+\
MQxrUyuk5H877Teesf2Gzz4XzU++hnlWJtm+wHVrbuG1aJ2gV8dNh1xC26dqu6/\
QW0VkifmbC9f6MT/h5pzS/a2HT7iXfNI9NtknFP7qolyM6SrR/p8j//S/7/\
Edvp8ji4BnJfUeI9vaR0L5DgeML+\
NmBBfyzaObqQ9Mm91yCj9japWkPnaEcX5QdPCrkhQcsMzct49ngIcopzkw0fSf8x9EydyxmIZnkUuJ\
1O49N8oz7nNIdPJM/ZVXd36rHZ3PpmsFnpyMPhklWjtfusMfrdGGdLWvw/YTpsofu/\
GT2PFgKGWcNJPuiiIR0rQ2wY2wtJ2V7xzp2JzF89LOxNwI+Tg8+ppTo+\
KAcT1J8URv7nKa0I5gfqDWmMvQ16ZmGsgwPubGOrnorlgmsoUtJ8GIl9uI++\
tLXmKZZs501y7EPiLvGFAZYxl8dp9bBg9/3Xcw2WQexp+\
cUCNRHwpt9Z4L5Z6cPnmqWcPXEczr3sMuriExhJqEpbOMjwsGLDkVAAb8SyxUk9c/\
wQ101tJgq8Cyd0RT7yi9Sb75M+jPppD/gaSqtuK46HgD1ITGFn3ukY2F++EL4M+\
G0q81Pb4gClNfXB2NbjblLG3AcqPorLJ4R20d80a7vTIhLHCs9x27p8NiCCP21xOvB61Fb4/\
mTEduJlmJGlTHOsktUzvxIRApTuAe25hI+\
EZs41jXtGniaTk0VANkXu5i674OqJgjXHItV6Vt4rqHiSaeczM7yrncBO6VhccLY5rD8LcuX2kGd7+\
sbdvZjBzSs21oeVDjRkHhBmtio+\
1oiqgApsPK2nmuk4w0upMIbv8qwQh4SkFD3R7AlBCTJCUpoDcc0QmMbrzl6M7CKT1zc6ZDgnsX+\
m48W9h3/Sskl+vamPxF/\
GnwHl93Er9QKIjVzXLbTWvegjACbpyojgDZhGXkO6KJCUgdOBpQ8ZiH7KSk5joLw/TLuj1HGYX8Z8/\
scbkelpAfpfjlL90JIFBU1FpbyS1uMab3cucV9rABnbR27Orv+\
Jukk62yAfSRz3FyMOwivhIeCxc8N629VEANsfha+ThHX27/\
JaLnlEnj6ySfAtXSzwyGncGbg1ekO3L5qbrCF12OiP8auiVWL9LRfelkIT6QOSbgR7OeMiERhigz9U\
qi7omtxQyXWuy1u2b9vlpM14EVe3NLNkS/e8POwNgfqkAbRZtO6V+\
jnC32bWvkVTXuEQjvpNK5mCuhAmd8SlwaLS4PFfYCv8n2Ac5EWGlsbLRV2YMADj8e/CbDYr9DW+\
M1taxpMitn1ovoa9ZWKAdOHk40ZuchP3iiXJKUhi9t+xW2/4rZfcduvuO1XWPfztu5XhXWfHes+\
QVNvFnbwc7PdbbMjYyZr8Mhp4DBJp/VLaaNaLVerjcn6JfMuOhn/3t/\
JjlgsoMzvTPMGYNdhwk10fprPNPmS/fwHP4w9XjiNSvR7mXPqy9NPnC0AtT/6M+\
FOEO4EATheZcAxBXfCYqHJBXV8vLHgX1o/\
PSQxXzgbEAHGsiyVZEW4CISLQLgIhItAuAiExT5vi53tH0fCYp+3xZ6glfkCvB+/19/\
sTU4fOR5RHeeoINCEQBMCTaRHEz3LNmioR9jBWPFoJRhvDGJYg1DgRRE4KPNdSB45SG4OjeXmXBHN+\
5oZ5bl+LaIcU4uQLVJSbvUv3n/yHenf7qCFQIPF1NY0Y18y747wTF2gk0/4o4Q/\
SqDbVx3dCn9USnQ7hcUbgSAFghQIUvijhMUWFlv4o2bOYgt/lEATAk3MOpqYWX/U1b//8G/+9r1/\
vxh/1PE5+aP6rxcUzijhjBLQ9tWHtsIZlQ7aKlKp1hDBUQI+\
CvgonFHCGSUstnBGvW4WWzijBJoQaGLW0cTMOqP+56++9xP7m/\
9yMc6o752TM2o9UIzCKSWcUgLivm4QVzil0kHcSq0uyyJCSsBIASOFU0o4pYTFFk6p181iC6eUQBMC\
Tcw6mphZp9St//rx3+388T+fuVMq+/kPfjQ1xfdGwb8XkJ+C1XK6tje+FsyUpkjWLgG0Z3ucKUQn+\
tQtUF4qlTaY9fkqWJ9OUNtSWG8BrYaMBSn1DPP52RuhtwYOJZuUHZWpUfZ2AUVnAV4y0t4soCMTAPt\
lk+BfAEThHhDvie8Ofgy2BSr0rcn4BOalyob89LLAnlsjzrsXuEfgHoF7ZhH3vDE8mJvLRbQUndbah\
3Z+8tP8zT835+5GaKeIVgcOO4316gviyNGzCzproIiu99vbZq6Ivp+56CM5pwFFhw6PKF5YL0+\
jOUMyU0TeRWwImEZbhpaui+i3L3I9+UxmPkV0Y3Ba0boCDwdBfV8pvq/\
yW6BRgmRF9OYIQNyCUXprFBxlL24OgUFW72pwVHYIgdCvpzj4uojeOR3JuQb/\
vHv3jOZ6UzzyeEKsd62wizXoHgHyBMgTIG9mQd7V2Chu5ovomv9/09UOzWOCrLFNEdeht7d5vm+\
zfJ9+OiJZsbTR2ChtdHilp2JLrPzRX1bn34xjy1ucYp9Yfz3JcdllcTmm6dGnZ002QEVe9Q62TYP4S\
5nBrXTNTBHlub0x8n6XM6PJ6Yro+8qHxAW+\
jaJg45kFqe9jeoju1kq1kkKUkq5JtUa5RBoSqRn1OlYbmKilmtIoVxSprKgNRSKqJitKw6gSWWrUdE\
NTsGQMV/zBlEBpRKKi1WuaWqmVqnVsyIpUV8tVolXqOlZUUja0UkVSZVnBNQUD2Y26QvRqoyQbqlZX\
iVquDJP4/qQoPqCMaGpV0416Ra40iFJrqA0d67heNhoyrtckqa7p9bIka7UyUI0VuVSVDaXUKOsKkR\
S5qgxT9o0JoGJEllSrVqqSppNq2TCIqsq4UcG1qoblmmKoJVmWFFWrNqqKIUGXQb9JWl1TcdlQob9K\
cmmYrNYUUF+Pn9BFqiKXJYIN4J5saJIKfYc1Ui/JUkmpKDWt3tBB+\
gxFqsqyrCtVuVRRK6RSKWvVOgsfjN0G2aTU0YDS1fgz0GF03rdFMMxvxl495uN44CGk7GqRzfAb75M\
bafARFYR9dFrNrXwr0wQs+OVTr2iMtLuYE4s5sZgTizmxmBNfxjnx/wNalOp2"}, 
                    "ClickToCopyTemplate"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {Automatic, Automatic, Fit}, 
                    "Rows" -> {{Automatic}}}], "Grid"], FontColor -> 
                   GrayLevel[0.5], FontSize -> 12, StripOnInput -> False]}}, 
                GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                False, GridBoxDividers -> {
                 "Columns" -> {{None}}, "RowsIndexed" -> {-1 -> GrayLevel[
                    Rational[239, 255]]}}, 
                GridBoxItemSize -> {
                 "Columns" -> {Automatic, Fit}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {1, {}, 1}, "Rows" -> {1, {}, 2}}], "Grid"], 
              ImageMargins -> 0]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
           BaselinePosition -> {1, 1}]}, 
        Dynamic[
         TrueQ[
          CurrentValue[
           EvaluationCell[], {TaggingRules, "StripeOpen"}, False]]], 
        Alignment -> Automatic, ImageSize -> Automatic, ImageMargins -> 0, 
        BaseStyle -> {}, DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
        Baseline], Deployed -> False, StripOnInput -> False], 
      OpenerView[{
        Grid[{{
           Style[
            Dynamic[
             DateString[
              TimeZoneConvert[
               DateObject[
               3.956171745298385`16.34985012608316*^9, TimeZone -> 0]], {
              "MonthName", " ", "DayShort", ", ", "Year", " ", "Hour12Short", 
               ":", "Minute", " ", "AMPMLowerCase"}], SingleEvaluation -> 
             True, Evaluator -> "System"], FontSlant -> Italic, FontColor -> 
            GrayLevel[0.5], FontSize -> 0.9 Inherited], "   ", 
           Item[
            Style[
             
             Grid[{{"Paclet build completed successfully.", ""}}, Spacings -> 
              0.25, Alignment -> {Automatic, Baseline}], LineBreakWithin -> 
             Automatic, LineIndent -> 0], ItemSize -> Fit], 
           Item[
            Style[
             RawBoxes[
              TemplateBox[{
                ButtonBox[
                 TagBox[
                  
                  PaneSelectorBox[{
                   False -> 
                    "\"FaizonZaman__ImageFilterAnalysis-0.9.0.paclet\"", True -> 
                    StyleBox[
                    "\"FaizonZaman__ImageFilterAnalysis-0.9.0.paclet\"", 
                    "HyperlinkActive", StripOnInput -> False]}, 
                   Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                   FrameMargins -> 0], 
                  MouseAppearanceTag["LinkHand"]], ButtonFunction :> 
                 SystemOpen[
                   File[
                   "/Users/faizonzaman/Developer/wolfram/ImageFilterAnalysis/\
build/"]], Appearance -> None, BaseStyle -> "Hyperlink", Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                "OEM6eJxtjk0LwjAQRIkUEfRX9G63V48VKQieGr0oIqtuSiAfJZta7a/\
XiEdvA2/eMErwrMFh7Z/ESvC08SmrjLOd5iizWhuS4qQmPN+\
T7QxGSlz8uMvhwBQYFOrRuxEtOtjQg4zvKMDgjQpoYWuxpc9UpFA5NC/WDNdemzvUX++\
YvMvlT21ZFquiLDq8GYq5XKQ/VWh7Sy5KcX4D4etDlQ=="}, "ClickToCopyTemplate"]], 
             LineBreakWithin -> Automatic, LineIndent -> 0], ItemSize -> Fit],
            "", 
           MouseAppearance[
            Button[
             MouseAppearance[
              Mouseover[
               Graphics[{
                 GrayLevel[
                  Rational[64, 85]], 
                 
                 Polygon[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                  0.42426406871192845`}, {0.42426406871192845`, 
                  0.282842712474619}}], 
                 
                 Polygon[{{0.42426406871192845`, -0.282842712474619}, {
                  0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                  0.42426406871192845`}}]}, ImageSize -> 18, PlotRangePadding -> 
                0, PlotRange -> 0.7, Background -> None], 
               Graphics[{
                 GrayLevel[
                  Rational[128, 255]], 
                 
                 Polygon[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                  0.42426406871192845`}, {0.42426406871192845`, 
                  0.282842712474619}}], 
                 
                 Polygon[{{0.42426406871192845`, -0.282842712474619}, {
                  0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                  0.42426406871192845`}}]}, ImageSize -> 18, PlotRangePadding -> 
                0, PlotRange -> 0.7, Background -> None]], "LinkHand"], 
             
             With[{DefinitionNotebookClient`Stripes`PackagePrivate`nbo$ = 
               EvaluationNotebook[]}, 
              CurrentValue[
               DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                DockedCells] = If[
                TrueQ[
                 MemberQ[
                  CurrentValue["ModifierKeys"], "Control"]], 
                DeleteCases[
                 Flatten[{
                   CurrentValue[
                   DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                 Cell[
                  Blank[], "StripeCell", 
                  BlankNullSequence[]]], 
                DeleteCases[
                 Flatten[{
                   CurrentValue[
                   DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                 Condition[
                  Pattern[
                  DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                   Blank[Cell]], 
                  Not[
                   FreeQ[
                   DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    "d99f0174-7c15-4e21-b2f9-2730a505e1bf"]]]]]], Appearance -> 
             None, BoxID -> "d99f0174-7c15-4e21-b2f9-2730a505e1bf"], 
            "LinkHand"]}}, Alignment -> {Left, Baseline}], 
        Grid[{{"", 
           Style[
            Grid[{{"\[FilledVerySmallSquare]", "Build result: ", 
               RawBoxes[
                TemplateBox[{
                  TagBox[
                   RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"PacletArchive\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"/Users/faizonzaman/Developer/wolfram/\
ImageFilterAnalysis/build/FaizonZaman__ImageFilterAnalysis-0.9.0.paclet\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"4.756068`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"PacletArchive\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"/Users/faizonzaman/Developer/wolfram/\
ImageFilterAnalysis/build/FaizonZaman__ImageFilterAnalysis-0.9.0.paclet\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"4.756068`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"BuildPacletDirectory\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"File", "[", 
                    
                    TemplateBox[{
                    "\"/Users/faizonzaman/Developer/wolfram/\
ImageFilterAnalysis/build/FaizonZaman__ImageFilterAnalysis\""}, 
                    "FileArgument"], "]"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"PacletManifest\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    TagBox[
                    
                    DynamicModuleBox[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
                    "InitialData" -> <|"Files" -> {<|
                    "File" -> File["Kernel/ImageFilterAnalysis.wl"], "Hash" -> 
                    "70705e50dc17930e91e7f88ab9aeb0759345135b951ebc2559f6e2197\
dfc5a1f"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
ImageFilterAnalysisData.nb"], "Hash" -> 
                    "5c87cb47068af2518b36ec48da5be3fc041b225a75aab9985ed6902fb\
c8beb34"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
RunImageFilter.nb"], "Hash" -> 
                    "ecb6cdf84249e579b9dada83f92a87118cd8312c73518a52062f5093d\
5e15265"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
TestFilters.nb"], "Hash" -> 
                    "176461cde63ffebb2a94a76ca275fb02215bc6965f15aaa751c8cba3f\
bbeb020"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/$\
DefaultTestFilters.nb"], "Hash" -> 
                    "5da8b5231eaffc02fc1b79bace802105457c89db07f516222d56204b4\
e443c68"|>}|>, "AllowEmbedding" -> True, "InitialShape" -> 
                    TypeSystem`PackageScope`HeaderShape[<|{All, All, 
                    TypeSystem`PackageScope`KeyDummy[0]} -> 
                    1, {All, All, "File"} -> 1, {All, All, "Hash"} -> 1|>, 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`AtomShape[56.00000000000001], 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`Limited[
                    
                    TypeSystem`PackageScope`RowShape[<|
                    "File" -> TypeSystem`PackageScope`AtomShape[60], "Hash" -> 
                    TypeSystem`PackageScope`AtomShape[560.]|>], 
                    DirectedInfinity[1], 2, {All, All}]], 5, 
                    DirectedInfinity[1], {All}]]], 1, 
                    DirectedInfinity[1], {}]], "InitialType" -> 
                    TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Vector[
                    TypeSystem`Struct[{"File", "Hash"}, {
                    TypeSystem`Atom[File], 
                    TypeSystem`Atom[String]}], 5], 1], "Meta" -> <||>, 
                    "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
                    TypeSystem`PackageScope`HeaderShape[<|{All, All, 
                    TypeSystem`PackageScope`KeyDummy[0]} -> 
                    1, {All, All, "File"} -> 1, {All, All, "Hash"} -> 1|>, 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`AtomShape[56.00000000000001], 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`RowShape[<|
                    "File" -> TypeSystem`PackageScope`AtomShape[60], "Hash" -> 
                    TypeSystem`PackageScope`AtomShape[560.]|>], 
                    DirectedInfinity[1], 2, {All, All}]], 5, 
                    DirectedInfinity[1], {All}]]], 1, 
                    DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Vector[
                    TypeSystem`Struct[{"File", "Hash"}, {
                    TypeSystem`Atom[File], 
                    TypeSystem`Atom[String]}], 5], 1], "Path" -> {}, 
                    "DisplayedRowCount" -> 1, "DisplayedColumnCount" -> 2, 
                    "DataRowCount" -> 1, "DataColumnCount" -> 2, 
                    "SortPaths" -> {}, "SortDirections" -> {}, 
                    "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
                    DynamicModule[{
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
                    Style[
                    Grid[{{
                    Item[
                    Pane[
                    Annotation[
                    Mouseover[
                    
                    Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                    Scaled[-0.15]], 
                    Graphics[{
                    GrayLevel[0.6], 
                    
                    Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^Rational[-1, 2]}, {-2^
                    Rational[-1, 2], 2^Rational[-1, 2]}, {-2^
                    Rational[-1, 2], -2^Rational[-1, 2]}}]}, ImageSize -> 6, 
                    BaselinePosition -> Scaled[-0.15]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, Keys}, "KeyDummy", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["File", 
                    Style[
                    "File", FontColor -> RGBColor[0.27450980392156865`, 
                    0.5372549019607843, 0.792156862745098]]], "LinkHand"], {
                    "MouseClicked", 1} :> If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, All, "File"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, "File"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Hash", 
                    Style[
                    "Hash", FontColor -> RGBColor[0.27450980392156865`, 
                    0.5372549019607843, 0.792156862745098]]], "LinkHand"], {
                    "MouseClicked", 1} :> If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, All, "Hash"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, "Hash"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Files", 
                    Style[
                    "Files", FontColor -> RGBColor[0.27450980392156865`, 
                    0.5372549019607843, 0.792156862745098]]], "LinkHand"], {
                    "MouseClicked", 1} :> If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Files"]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"]}, "RowHeader", False], "Mouse"], 
                    ImageSize -> {{56.00000000000001, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel/ImageFilterAnalysis.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 1, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "70705e50dc17930e91e7f88ab9aeb0759345135b951ebc2559f6e2197\
dfc5a1f", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 1, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
ImageFilterAnalysisData.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 2, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "5c87cb47068af2518b36ec48da5be3fc041b225a75aab9985ed6902fb\
c8beb34", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 2, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
RunImageFilter.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 3, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "ecb6cdf84249e579b9dada83f92a87118cd8312c73518a52062f5093d\
5e15265", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 3, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/TestFilters.\
nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 4, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "176461cde63ffebb2a94a76ca275fb02215bc6965f15aaa751c8cba3f\
bbeb020", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 4, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/$\
DefaultTestFilters.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 5, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "5da8b5231eaffc02fc1b79bace802105457c89db07f516222d56204b4\
e443c68", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 5, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}}, 
                    BaseStyle -> {ContextMenu -> Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem["Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem["Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                    "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
                    Dividers -> All, FrameStyle -> 
                    GrayLevel[0.7490196078431373], Spacings -> {0, 0}, 
                    Alignment -> Left, BaseStyle -> {
                    FontFamily -> "Source Sans Pro", FontSize -> 14, 
                    FontWeight -> Plain}], LineBreakWithin -> False, 
                    ContextMenu -> {}, NumberMarks -> False, ShowAutoStyles -> 
                    False]], TypeSystem`NestedGrid`PackagePrivate`initialQ = 
                    True}, 
                    Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
                    Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
                    
                    Module[{
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                    TypeSystem`NestedGrid`PackagePrivate`datasetData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                    Not[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
                    TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
                    TypeSystem`SparseGrid[
                    TypeSystem`H["(data no longer present)"]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
                    DynamicModuleValues :> {}], 
                    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
                    TypeSystem`PackageScope`SubViewPathbar[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
                    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = 
                    Dynamic[
                    Replace[
                    Replace[
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
                    Blank[]] -> "", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                    Blank[]], 
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                    Blank[]], 
                    Pattern[
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Blank[]]] :> (
                    Increment[
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                    TypeSystem`NestedGrid`PackagePrivate`path$; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
                    TypeSystem`NestedGrid`PackagePrivate`pathType$; 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader = TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
                    TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                    TypeSystem`NestedGrid`PackagePrivate`path$, 
                    TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
                    Null :> Spacer[10], Blank[] :> Spacer[10]}], 
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`bar, 
                    Except[
                    Alternatives[
                    Blank[Spacer], ""]]] :> 
                    TypeSystem`NestedGrid`PackagePrivate`makeFramedPathbar[
                    TypeSystem`NestedGrid`PackagePrivate`bar]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}, 
                    DynamicWrapperBox[
                    DynamicBox[
                    ToBoxes[
                    Dataset`DatasetContent[
                    2, "Path" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
                    "Grid" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
                    "State" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    "VPos" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
                    "HPos" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
                    "TopBar" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
                    "BottomBar" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
                    "OutputID" -> Hold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
                    StandardForm], TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
                    MouseAnnotation[]], 
                    Initialization :> (
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
                    CreateUUID[]), DynamicModuleValues :> {}, 
                    BaseStyle -> {LineBreakWithin -> False}, 
                    UnsavedVariables :> {
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$}], 
                    Deploy, DefaultBaseStyle -> "Deploy"], 
                    Dataset`InterpretDataset[1], Selectable -> False, 
                    Editable -> False, SelectWithContents -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"DocumentationBuildResults\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"Documentation build completed successfully.\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.301592`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"Documentation build completed successfully.\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{"2.301592`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"MaximumFileTime\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    
                    TemplateBox[{"0.663669`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], ",", 
                    "\"/Users/faizonzaman/Developer/wolfram/\
ImageFilterAnalysis/Documentation/English/ReferencePages/Symbols/\
RunImageFilter.nb\""}], "}"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"ProcessedFiles\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"\[LeftAssociation]", 
                    RowBox[{
                    
                    RowBox[{
                    "\"/Users/faizonzaman/Developer/wolfram/\
ImageFilterAnalysis/Documentation/English/ReferencePages/Symbols/\
ImageFilterAnalysisData.nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"0.631025`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"0.631025`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/faizonzaman/Developer/wolfram/\
ImageFilterAnalysis/Documentation/English/ReferencePages/Symbols/\
RunImageFilter.nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"0.663669`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"0.663669`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/faizonzaman/Developer/wolfram/\
ImageFilterAnalysis/Documentation/English/ReferencePages/Symbols/TestFilters.\
nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"0.510795`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"0.510795`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/faizonzaman/Developer/wolfram/\
ImageFilterAnalysis/Documentation/English/ReferencePages/Symbols/$\
DefaultTestFilters.nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"0.478229`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"0.478229`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}]}], 
                    "\[RightAssociation]"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"FailedFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"PercentSucceeded\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"100.`", "\"%\"", "percent", "\"Percent\""}, 
                    "QuantityPostfix", SyntaxForm -> Mod], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"ProcessedFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["4", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"SuccessfulFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["4", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"SkippedFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"TargetWolframVersionNumber\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["14.2`", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"DocumentationBuild\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], "}"}],
                     "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"PacletBuild\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                   Short[#, 0.75]& ], 
                  "OEM6eJztXU2QG0lWtlpS/7nttmc8w+\
7ABo3oJRYYtVUllX52J8aW1d1jM25PT2ePvT+\
xMc6qyuqu6FKVqCy13QNsLMReOcBucIEDwY3gwpnLxgYBRwhOcCJYFoIggmCCE9yGl1k/\
Kv20XSWpf2SnDi11Vf68zPfyvS9fvsw0MnRxDz+75zwn1MjTmw9sj7gdl3jYMx0bHhsZOr/\
nsARGjuYemtQz5uj8Pj6AJ2gBdTWNUIquom67jd2T+\
wTrKPMdI0tvbJ7YuG1qO47etQjLPhdlzyLi0ev7Jx1CiffU6RB7fZ3mt7FFSfj2VviWtFWiIyCHrK+\
j/B6UfwJpru6TdseChz6FfsFZurqLbYKIRTTPcfvrzO0BGWElebrwgWvq/\
ZnD7wVWCHs1T5fudT0v7IbloEV+ue9sb+\
265jGQ8HTbdWxvy9b3CHW6rkbQ0vbWPdNr4w5FN4KOgUwfQTuJy4hnpGwSC58QnV73q9ju2hrr8dN6\
J7fvdknUjOVmp0Owi23o/Nwjx+69WbqHKUHeiUWMKwNtX9o6xlYXQ8/\
QpWbXc9rAYi16O79DvENHR8u7LoG+\
9czjWKFNyzyw28T2wg6l8y3CJCX87iV90MYHBJmfEeixhaDHolx99eb3zTah7hX+\
WbkbPYGMK62u60LBj4Fggq5tQ/+2cOc+MQ8OGQn5XecZ1Jmht5oqdayuR+\
Lp6bUdfGCbhqlxGW59Aexe3HZxmzM1Sxd59zDxzRf+9U9+WIAClzZNF2SGtRne731wr+VYjuv+HP/\
84x33Tf752R33m/zzT3daX45avII81+x8ZD+wO12vJ8X+y+stIB0I28W6btoHg6+XOVmcngE+\
rvA3O9g9MG0aF2P23brSujL4+3Ra5nvCHpaTib7DsZ0dHNuDgyzIilYLu1iziNd0tUPorwLKFb6+\
VkDLUM4mMXDX8tBbgcw/8Ei7aduOr0tQ9vPf/9OY7rALtz+hIEG3DWx+5tif4Ta2b2+\
SY2KByLu3nzmWAV1wm8vTtmmBkDVtbJ1Qk95Wu6al397m+\
b7N8n366YhkxdJGY6O00eHkFiIVxaiapAOuFvahRRYT1bEbD7X1lR1oVrRU2agp1VK1/\
hRlC7SAFijRHFunaKmA/F8FtPhxF9ue6Z30pAid2B5+\
vu24bZoFfdvf1DDVjUAIhsZymAItgNR32zaN9Y4/bHMPidFLloPWDqcZoVKW2SPQc8Qjg4K/\
GhDDKOTKIjEtw/\
UkJyisFYFMsNGYuNbWXPrKYpo4N6CJb6FD5xkbqvZB6xDUuMY06WAXXX3UBdPnggo4Gnp3HUwPKBXQ\
WSZlKi7b4zIvmsuDr1YGs56xGGT3nc7lFYAbjCeWaZNdh5qBufUZnGllolS+\
rb0QjNCyHDo2Rhg0LgIkCJAwBkiYFyDhtQMJEzT17cI91tM+w/0h4rgn47d6aL6JcsAywmaVo+\
d9CJ+1kBTQCiOh6R50mX5Dme9OrfduBCNlB4MyItQbv9/yMbkJf82PmIYv9U/\
Di8yIoBMKZT99BAQQnemBp0DVEfRDaL7WqT8Db75RRFcf2GA7sbWJPdzMFFGe9Q1zHvBym3NFn2GsV\
zjjvvIhcW1ijer/\
jWcWpL6P6SG6WyvVSgpRSrom1RrlEmlIpGbU61htYKKWakqjXFGksqI2FImomqwoDaNKZKlR0w1NwZ\
IxXPEHm47GGcb76/\
aWfWCZ9PD2HjEI2AGN7AI99DY6aauORUeRx1q4YasRiYpWr2lqpQZjDxuyItXVcpVolbqOFZWUDa1U\
kVRZVnBNwUB2o64QvdooyYaq1VWilivDJL6fisS9rh2jMk4Z0dSqphv1ilxpEKXWUBs61nG9bDRkXK\
9JUl3T62VJ1mploBorcqkqG0qpUdYVIilyVRmm7BupKNsHyfGponGypFq1UpU0nVTLhkFUVcaNCq5V\
NSzXFEMtybKkqFq1UVUMCboM+k3S6pqKy4YK/VWSS8NktVKRtR4MoVPIU6CLVEUuSwQbwD3Z0CQV+\
g5rpF6SpZJSUWpavaGD9BmKVJVlWVeqcqmiVkilUtaq9SK63rQs59kW81Fx082hYxGtBEMEHeIOM9e\
/HBtkwchCGiinp8xfRlyerJkthmqDZqFY/gfavXZa3g/JySYohhOGXUdk9TvulFes/YB4c/\
QXTyv9odk2QRkAAacS7yP0sI1ffQGdPkTjCTP0l05L2ATYxxO5GQ73Ht6dIoGJSjq1r0Eb+\
0yKCeTL29F6LxC1ZK3mjf7+796F1Dd8Q0r0B7ZhgiwxJs9FCDliZCs/Om1vOsYSZU5JFGD/\
nkZnJDLXbYzUJqWOBvlX48+AYjrvz1+BppuxV4+\
59R94CCm7WoRLA3Pu90vPITVUQdjNp9XcyoNsoxzMSHDzShEtAYv2AQkTr3ULBqDP+\
uDBMhgpMRTFUJyBoZibxTG4i73DXhNubpq0wx0XwKqW04VpOSS6FT31RcF/\
ATxcYSgrnnKVPRhItIQc12PV0F4919mzYE7u2PEX901dJzaDy3QHd2DS3LUAZy5/\
0tEBxLKmtDK0lAz3Ol0PZskPNtfXQ8D8brKMHSAWMl3pR9sJMx/vOnR9nbuk0mQ7HC/\
bATwEUrP0Wt9kIeZQ4KVJiUoDFAZq1H/HJkSbpGM5JzA7yPsOpwWa469CL0PPp5bjcyn4Zr41+\
F7uzXWY92XH6VLiHBOXeV8+cHHn0NTosP8qci215l/g9gPCkIYtortl/vnrH/eV2hsSS/\
Ds5CGbSwYpf3aH+ax2HevkAMqJeXaDb9/txDXE4h4nHlutL/j/\
vueq9cWLUyUpKEHuRHVNr6BkTZuURfAwmRSuI8vUmGfsiLsANxJlshyo775j6WMohyHDTnNgbClaDK\
GBPzVAeS7Gozyhg+47NuMBvTXKDbvCc53m98v7ywH8dw7MUuQBugfkH7igUvV+wTb457/vvMiVy33/\
dDHk0kuH68rWMWS/j23d4o7fVd7unke6b0QHdnwu0BHRvwE13LPLfK19ftc//AP2+Yc7rsQ/\
P73jfot//vMOWnxo2kes7gFHemT+VnjVLZCRI7BHTF/OPTCgU2qJ+\
K4dEu2IB0pg5g4GC57Si2LMgfpLJmNdbrN4/EPKStIZqnSWKZ1BSmmHUg/\
XixngIaifKa0UAL9geuRPeYRmepFmCiByqJlCxCw0k9BMl1czBT6F2dJM3Cf7imumRFOddBoqWH6JV\
FT0v9BRQkddFh3VWyHNwoQokNHLraFGkszdzIFy8iMnkmunyJV6qZXU3AuVU7I13cvM1uwpkhj8Hzh\
Gue8wLYNb702bs4uD4XEjKzidX5Ovqs8yKzmgGI+V0QLABXA0hEbXUAfb267TbqrOcdKBOa2Yh9nj+\
9yrOoQnjTqZZVa+jkN4wpig2WN39lUduZNGZc0yK1/HkTtJzNzs8Tr3qg7bSaMWZ5mVr+\
OwnUZM6ezxPP+qDt9Jo3pnmZUzOnwj6k7fM3mVb5J67u0Qu9u/a+\
yNltPuMOfX1vOOSyjbEEnryXpW65W575oHB8DFeZp/\
cmhqbJFv4ROb4jb5mMrJSrMw9T4KeHUu0tALfsojTujYzabvJW9iazi3Mlbu6FCDERw0gqCzyegaXw\
yC6sdrGGPIPWDsUeRETlfcgeWo2EKa61jWrhONtLNcZWB1PDG9w8HtQQmFGNrPojPXE6ZfDzOE1SQb\
YWEulng9zagMM6WrzqQPwYT43v51+vV01T2IZU5X7SHP48ew8qjTJl+Km9/\
BnnaYShnFmr3SZEjFxmz7anwVo3/BFRKmp/HjtExPvd7n997tRLmwZfW6LmWWS9YS+\
yR1S8Is59WScqJcNB6ozUBMMr2s+XsG+qK80+qXTMqGxSPNU+\
cdjEhPpUMP8TFhzne28ph95DCMt7iNTavrko8TL67rUAAlXmyH5piMTQZGTBqGt0ZUg+\
nbdglJL4A8XpYB3N9wTDsWK8FiC+\
DvR25Qw5jdmXrQpe8CugD1HLINGVm6yHBAcP7Ksr9ZgrUL5dn5HGvGYg9l5rd+\
swtIfQwL6AN9dGWyQmK2IAs/Jyusz5qg+eAMDz+M5wpw4pq/brz1nGhdj/\
BIjmqKSI7Yxg4Rz3GB8RxpYSGad0nbiR0Wco0Nj5FHjfgDPjfJgE9qLRmvt9od7+\
SsreUY2tSHfakxzzgQM5HagrREqC2htl4vtZXFuv5ynUWXNonFN666kfrioze94ko3yesT4qFJXr9Q\
9zYijTH5TYmhelOwXB+Mi7nUxpk4oKUm1YitD6gqlGOwe/QoTUZwECYKpYjheXGDLcbdlw+\
5mM2ahmQtb5KRorWyR46JS8maELFXQcTibD5vGQvObotL1zyUJ+Rq9uVq4Fi+\
l0tUHDGEizj5yFT2BOSdltM5WQu3RK95zlrLMjuqg119WGgyCTGp5wQHIYblJpQcDWhh1SedxKWGP/\
GWv81bzp6/pNVJPdZRq8dwik29g0YKQh/jd0G2SI/zpr32iDxbaxF+Ds3UGJ+\
MQxrUyuk5H877Teesf2Gzz4XzU++hnlWJtm+wHVrbuG1aJ2gV8dNh1xC26dqu6/\
QW0VkifmbC9f6MT/h5pzS/a2HT7iXfNI9NtknFP7qolyM6SrR/p8j//S/7/\
Edvp8ji4BnJfUeI9vaR0L5DgeML+\
NmBBfyzaObqQ9Mm91yCj9japWkPnaEcX5QdPCrkhQcsMzct49ngIcopzkw0fSf8x9EydyxmIZnkUuJ\
1O49N8oz7nNIdPJM/ZVXd36rHZ3PpmsFnpyMPhklWjtfusMfrdGGdLWvw/YTpsofu/\
GT2PFgKGWcNJPuiiIR0rQ2wY2wtJ2V7xzp2JzF89LOxNwI+Tg8+ppTo+\
KAcT1J8URv7nKa0I5gfqDWmMvQ16ZmGsgwPubGOrnorlgmsoUtJ8GIl9uI++\
tLXmKZZs501y7EPiLvGFAZYxl8dp9bBg9/3Xcw2WQexp+\
cUCNRHwpt9Z4L5Z6cPnmqWcPXEczr3sMuriExhJqEpbOMjwsGLDkVAAb8SyxUk9c/\
wQ101tJgq8Cyd0RT7yi9Sb75M+jPppD/gaSqtuK46HgD1ITGFn3ukY2F++EL4M+\
G0q81Pb4gClNfXB2NbjblLG3AcqPorLJ4R20d80a7vTIhLHCs9x27p8NiCCP21xOvB61Fb4/\
mTEduJlmJGlTHOsktUzvxIRApTuAe25hI+\
EZs41jXtGniaTk0VANkXu5i674OqJgjXHItV6Vt4rqHiSaeczM7yrncBO6VhccLY5rD8LcuX2kGd7+\
sbdvZjBzSs21oeVDjRkHhBmtio+\
1oiqgApsPK2nmuk4w0upMIbv8qwQh4SkFD3R7AlBCTJCUpoDcc0QmMbrzl6M7CKT1zc6ZDgnsX+\
m48W9h3/Sskl+vamPxF/\
GnwHl93Er9QKIjVzXLbTWvegjACbpyojgDZhGXkO6KJCUgdOBpQ8ZiH7KSk5joLw/TLuj1HGYX8Z8/\
scbkelpAfpfjlL90JIFBU1FpbyS1uMab3cucV9rABnbR27Orv+\
Jukk62yAfSRz3FyMOwivhIeCxc8N629VEANsfha+ThHX27/\
JaLnlEnj6ySfAtXSzwyGncGbg1ekO3L5qbrCF12OiP8auiVWL9LRfelkIT6QOSbgR7OeMiERhigz9U\
qi7omtxQyXWuy1u2b9vlpM14EVe3NLNkS/e8POwNgfqkAbRZtO6V+\
jnC32bWvkVTXuEQjvpNK5mCuhAmd8SlwaLS4PFfYCv8n2Ac5EWGlsbLRV2YMADj8e/CbDYr9DW+\
M1taxpMitn1ovoa9ZWKAdOHk40ZuchP3iiXJKUhi9t+xW2/4rZfcduvuO1XWPfztu5XhXWfHes+\
QVNvFnbwc7PdbbMjYyZr8Mhp4DBJp/VLaaNaLVerjcn6JfMuOhn/3t/\
JjlgsoMzvTPMGYNdhwk10fprPNPmS/fwHP4w9XjiNSvR7mXPqy9NPnC0AtT/6M+\
FOEO4EATheZcAxBXfCYqHJBXV8vLHgX1o/\
PSQxXzgbEAHGsiyVZEW4CISLQLgIhItAuAiExT5vi53tH0fCYp+3xZ6glfkCvB+/19/\
sTU4fOR5RHeeoINCEQBMCTaRHEz3LNmioR9jBWPFoJRhvDGJYg1DgRRE4KPNdSB45SG4OjeXmXBHN+\
5oZ5bl+LaIcU4uQLVJSbvUv3n/yHenf7qCFQIPF1NY0Y18y747wTF2gk0/4o4Q/\
SqDbVx3dCn9USnQ7hcUbgSAFghQIUvijhMUWFlv4o2bOYgt/lEATAk3MOpqYWX/U1b//8G/+9r1/\
vxh/1PE5+aP6rxcUzijhjBLQ9tWHtsIZlQ7aKlKp1hDBUQI+\
CvgonFHCGSUstnBGvW4WWzijBJoQaGLW0cTMOqP+56++9xP7m/\
9yMc6o752TM2o9UIzCKSWcUgLivm4QVzil0kHcSq0uyyJCSsBIASOFU0o4pYTFFk6p181iC6eUQBMC\
Tcw6mphZp9St//rx3+388T+fuVMq+/kPfjQ1xfdGwb8XkJ+C1XK6tje+FsyUpkjWLgG0Z3ucKUQn+\
tQtUF4qlTaY9fkqWJ9OUNtSWG8BrYaMBSn1DPP52RuhtwYOJZuUHZWpUfZ2AUVnAV4y0t4soCMTAPt\
lk+BfAEThHhDvie8Ofgy2BSr0rcn4BOalyob89LLAnlsjzrsXuEfgHoF7ZhH3vDE8mJvLRbQUndbah\
3Z+8tP8zT835+5GaKeIVgcOO4316gviyNGzCzproIiu99vbZq6Ivp+56CM5pwFFhw6PKF5YL0+\
jOUMyU0TeRWwImEZbhpaui+i3L3I9+UxmPkV0Y3Ba0boCDwdBfV8pvq/\
yW6BRgmRF9OYIQNyCUXprFBxlL24OgUFW72pwVHYIgdCvpzj4uojeOR3JuQb/\
vHv3jOZ6UzzyeEKsd62wizXoHgHyBMgTIG9mQd7V2Chu5ovomv9/09UOzWOCrLFNEdeht7d5vm+\
zfJ9+OiJZsbTR2ChtdHilp2JLrPzRX1bn34xjy1ucYp9Yfz3JcdllcTmm6dGnZ002QEVe9Q62TYP4S\
5nBrXTNTBHlub0x8n6XM6PJ6Yro+8qHxAW+\
jaJg45kFqe9jeoju1kq1kkKUkq5JtUa5RBoSqRn1OlYbmKilmtIoVxSprKgNRSKqJitKw6gSWWrUdE\
NTsGQMV/zBlEBpRKKi1WuaWqmVqnVsyIpUV8tVolXqOlZUUja0UkVSZVnBNQUD2Y26QvRqoyQbqlZX\
iVquDJP4/qQoPqCMaGpV0416Ra40iFJrqA0d67heNhoyrtckqa7p9bIka7UyUI0VuVSVDaXUKOsKkR\
S5qgxT9o0JoGJEllSrVqqSppNq2TCIqsq4UcG1qoblmmKoJVmWFFWrNqqKIUGXQb9JWl1TcdlQob9K\
cmmYrNYUUF+Pn9BFqiKXJYIN4J5saJIKfYc1Ui/JUkmpKDWt3tBB+\
gxFqsqyrCtVuVRRK6RSKWvVOgsfjN0G2aTU0YDS1fgz0GF03rdFMMxvxl495uN44CGk7GqRzfAb75M\
bafARFYR9dFrNrXwr0wQs+OVTr2iMtLuYE4s5sZgTizmxmBNfxjnx/wNalOp2"}, 
                 "ClickToCopyTemplate"]]}}, Alignment -> Left, 
             ItemSize -> {{Automatic, Automatic, Fit}, Automatic}], FontColor -> 
            GrayLevel[0.5], FontSize -> 12]}}, 
         ItemSize -> {{Automatic, Fit}, Automatic}, Alignment -> Left, 
         Dividers -> {None, {-1 -> GrayLevel[
              Rational[239, 255]]}}, Spacings -> {{1, {}, 1}, {1, {}, 2}}]}, 
       Dynamic[
        CurrentValue[
         EvaluationCell[], {TaggingRules, "StripeOpen"}, False]]]], "Text", 
     FontSize -> 12, FontColor -> GrayLevel[0.25], StripOnInput -> False]], 
   "StripeCell", CellFrameMargins -> {{20, 5}, {2, 2}}, 
   CellFrame -> {{0, 0}, {1, 0}}, CellFrameColor -> GrayLevel[0.75]], 
  Cell[
   BoxData[
    StyleBox[
     InterpretationBox[
      StyleBox[
       PaneSelectorBox[{False -> GridBox[{{
             OpenerBox[
              Dynamic[
               CurrentValue[
                EvaluationCell[], {TaggingRules, "StripeOpen"}, False]], 
              Appearance -> Automatic, Enabled -> Automatic, AutoAction -> 
              False, ContinuousAction -> False], 
             TagBox[
              GridBox[{{
                 StyleBox[
                  DynamicBox[
                   ToBoxes[
                    DateString[
                    TimeZoneConvert[
                    DateObject[
                    3.956172003396139`16.349850154416213*^9, TimeZone -> 
                    0]], {"MonthName", " ", "DayShort", ", ", "Year", " ", 
                    "Hour12Short", ":", "Minute", " ", "AMPMLowerCase"}], 
                    StandardForm], SingleEvaluation -> True, Evaluator -> 
                   "System"], FontSlant -> Italic, FontColor -> 
                  GrayLevel[0.5], FontSize -> 0.9 Inherited, StripOnInput -> 
                  False], "\"   \"", 
                 ItemBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"\[Checkmark]\"", FontColor -> RGBColor[0, 
                    Rational[2, 3], 0], FontSize -> 16, FontWeight -> "Heavy",
                     StripOnInput -> False], "\"\"", 
                    "\"Your paclet resource is being published\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.25}}, "ColumnsIndexed" -> {2 -> 0.1}, 
                    "Rows" -> {{Automatic}}}], "Grid"], Annotation[#, 
                    
                    DefinitionNotebookClient`Stripes`PackagePrivate`$\
stripeText["Your paclet resource is being published"]]& ], "\"\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"], 
                   LineBreakWithin -> Automatic, LineIndent -> 0, 
                   StripOnInput -> False], ItemSize -> Fit, StripOnInput -> 
                  False], 
                 ItemBox[
                  StyleBox[
                  "\"\"", LineBreakWithin -> Automatic, LineIndent -> 0, 
                   StripOnInput -> False], ItemSize -> Fit, StripOnInput -> 
                  False], 
                 StyleBox[
                  ActionMenuBox[
                   FrameBox[
                    TemplateBox[{
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    TemplateBox[{
                    PaneBox[
                    TemplateBox[{
                    RGBColor[1., 0.4627450980392157, 0.]}, "HintPodIconHint"],
                     ImageSize -> {12, 12}, ImageSizeAction -> "ShrinkToFit", 
                    BaselinePosition -> Scaled[0.1]], 
                    TemplateBox[{1}, "Spacer1"], 
                    StyleBox[
                    "1", FontSize -> 14, FontWeight -> Plain, FontColor -> 
                    GrayLevel[0.25], FontFamily -> "Source Sans Pro", 
                    StripOnInput -> False]}, "RowDefault"], 
                    "\"Potential issues found\""}, "PrettyTooltipTemplate"]}},
                     AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], 
                    GraphicsBox[{
                    GrayLevel[0.4], 
                    AbsoluteThickness[2], 
                    CapForm["Round"], 
                    LineBox[{{-1, 0}, {0, -1}, {1, 0}}]}, {
                    ImageSize -> {13, 9}, BaselinePosition -> Scaled[0.2], 
                    ImagePadding -> {{3, 3}, {3, 3}}, AspectRatio -> Full}]}, 
                    "RowDefault"], DefaultBaseStyle -> "HighlightedInput", 
                    StripOnInput -> False, ImageSize -> {Automatic, 19}, 
                    BaselinePosition -> Baseline, Background -> GrayLevel[1], 
                    FrameStyle -> Dynamic[
                    If[
                    CurrentValue["MouseOver"], 
                    Hue[0.55, 0.82, 0.87], 
                    GrayLevel[0.8]]], FrameMargins -> {{4, 4}, {1, 1}}, 
                    Alignment -> {Center, Baseline}], {TemplateBox[{
                    PaneBox[
                    TemplateBox[{
                    RGBColor[1., 0.4627450980392157, 0.]}, "HintPodIconHint"],
                     ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                    BaselinePosition -> Scaled[0.1]], "\" \"", 
                    "\"New submissions should typically be version 1.0.0\""}, 
                    "RowDefault"] :> 
                    DefinitionNotebookClient`WithCurrentNotebook[
                    EvaluationNotebook[], 
                    DefinitionNotebookClient`LoadDefinitionNotebook[
                    "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                    DefinitionNotebookClient`PackageScope`setHint[
                    "Warning", "Paclet", 
                    DefinitionNotebookClient`$CurrentNotebook, 
                    "28ac90bb-cf76-49ce-9010-961c178e2caa", 1266818676, 
                    "InvalidFirstVersion", <|
                    "Current" -> "0.9.0", "Published" -> None, 
                    "Selection" -> ("Version" -> "0.9.0"), "PublisherID" -> 
                    "FaizonZaman", "PacletDirectory" -> 
                    File["/Users/faizonzaman/Developer/wolfram/\
ImageFilterAnalysis"], "ResourceName" -> "FaizonZaman/ImageFilterAnalysis"|>]; 
                    DefinitionNotebookClient`PackageScope`seekAfter[
                    1266818676]; Null]}, Appearance -> None], "BoxID" -> 
                  "WarningCountButton", StripOnInput -> False], 
                 TagBox[
                  ButtonBox[
                   TagBox[
                    PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[
                    NCache[
                    Rational[64, 85], 0.7529411764705882]], 
                    
                    PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                    0.42426406871192845`}, {0.42426406871192845`, 
                    0.282842712474619}}], 
                    
                    PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                    0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                    0.42426406871192845`}}]}, ImageSize -> 18, 
                    PlotRangePadding -> 0, PlotRange -> 0.7, Background -> 
                    None], True -> GraphicsBox[{
                    GrayLevel[
                    NCache[
                    Rational[128, 255], 0.5019607843137255]], 
                    
                    PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                    0.42426406871192845`}, {0.42426406871192845`, 
                    0.282842712474619}}], 
                    
                    PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                    0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                    0.42426406871192845`}}]}, ImageSize -> 18, 
                    PlotRangePadding -> 0, PlotRange -> 0.7, Background -> 
                    None]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                    MouseAppearanceTag["LinkHand"]], ButtonFunction :> 
                   With[{DefinitionNotebookClient`Stripes`PackagePrivate`nbo$ = 
                    EvaluationNotebook[]}, 
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells] = If[
                    TrueQ[
                    MemberQ[
                    CurrentValue["ModifierKeys"], "Control"]], 
                    DeleteCases[
                    Flatten[{
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                    Cell[
                    Blank[], "StripeCell", 
                    BlankNullSequence[]]], 
                    DeleteCases[
                    Flatten[{
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                    Condition[
                    Pattern[
                    DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    Blank[Cell]], 
                    Not[
                    FreeQ[
                    DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    "406311a3-7546-48c8-86d0-2017f7f6f644"]]]]]], Appearance -> 
                   None, BoxID -> "406311a3-7546-48c8-86d0-2017f7f6f644", 
                   Evaluator -> Automatic, Method -> "Preemptive"], 
                  MouseAppearanceTag["LinkHand"]]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
           AutoDelete -> False, 
           GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
           BaselinePosition -> {1, 1}], True -> GridBox[{{
             OpenerBox[
              Dynamic[
               CurrentValue[
                EvaluationCell[], {TaggingRules, "StripeOpen"}, False]], 
              Appearance -> Automatic, Enabled -> Automatic, AutoAction -> 
              False, ContinuousAction -> False], 
             TagBox[
              GridBox[{{
                 StyleBox[
                  DynamicBox[
                   ToBoxes[
                    DateString[
                    TimeZoneConvert[
                    DateObject[
                    3.956172003396139`16.349850154416213*^9, TimeZone -> 
                    0]], {"MonthName", " ", "DayShort", ", ", "Year", " ", 
                    "Hour12Short", ":", "Minute", " ", "AMPMLowerCase"}], 
                    StandardForm], SingleEvaluation -> True, Evaluator -> 
                   "System"], FontSlant -> Italic, FontColor -> 
                  GrayLevel[0.5], FontSize -> 0.9 Inherited, StripOnInput -> 
                  False], "\"   \"", 
                 ItemBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"\[Checkmark]\"", FontColor -> RGBColor[0, 
                    Rational[2, 3], 0], FontSize -> 16, FontWeight -> "Heavy",
                     StripOnInput -> False], "\"\"", 
                    "\"Your paclet resource is being published\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.25}}, "ColumnsIndexed" -> {2 -> 0.1}, 
                    "Rows" -> {{Automatic}}}], "Grid"], Annotation[#, 
                    
                    DefinitionNotebookClient`Stripes`PackagePrivate`$\
stripeText["Your paclet resource is being published"]]& ], "\"\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"], 
                   LineBreakWithin -> Automatic, LineIndent -> 0, 
                   StripOnInput -> False], ItemSize -> Fit, StripOnInput -> 
                  False], 
                 ItemBox[
                  StyleBox[
                  "\"\"", LineBreakWithin -> Automatic, LineIndent -> 0, 
                   StripOnInput -> False], ItemSize -> Fit, StripOnInput -> 
                  False], 
                 StyleBox[
                  ActionMenuBox[
                   FrameBox[
                    TemplateBox[{
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    TemplateBox[{
                    PaneBox[
                    TemplateBox[{
                    RGBColor[1., 0.4627450980392157, 0.]}, "HintPodIconHint"],
                     ImageSize -> {12, 12}, ImageSizeAction -> "ShrinkToFit", 
                    BaselinePosition -> Scaled[0.1]], 
                    TemplateBox[{1}, "Spacer1"], 
                    StyleBox["1", FontSize -> 14, FontWeight -> Plain, 
                    FontColor -> GrayLevel[0.25], FontFamily -> 
                    "Source Sans Pro", StripOnInput -> False]}, "RowDefault"],
                     "\"Potential issues found\""}, 
                    "PrettyTooltipTemplate"]}}, AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], 
                    GraphicsBox[{
                    GrayLevel[0.4], 
                    AbsoluteThickness[2], 
                    CapForm["Round"], 
                    LineBox[{{-1, 0}, {0, -1}, {1, 0}}]}, {
                    ImageSize -> {13, 9}, BaselinePosition -> Scaled[0.2], 
                    ImagePadding -> {{3, 3}, {3, 3}}, AspectRatio -> Full}]}, 
                    "RowDefault"], DefaultBaseStyle -> "HighlightedInput", 
                    StripOnInput -> False, ImageSize -> {Automatic, 19}, 
                    BaselinePosition -> Baseline, Background -> GrayLevel[1], 
                    FrameStyle -> Dynamic[
                    If[
                    CurrentValue["MouseOver"], 
                    Hue[0.55, 0.82, 0.87], 
                    GrayLevel[0.8]]], FrameMargins -> {{4, 4}, {1, 1}}, 
                    Alignment -> {Center, Baseline}], {TemplateBox[{
                    PaneBox[
                    TemplateBox[{
                    RGBColor[1., 0.4627450980392157, 0.]}, "HintPodIconHint"],
                     ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                    BaselinePosition -> Scaled[0.1]], "\" \"", 
                    "\"New submissions should typically be version 1.0.0\""}, 
                    "RowDefault"] :> 
                    DefinitionNotebookClient`WithCurrentNotebook[
                    EvaluationNotebook[], 
                    DefinitionNotebookClient`LoadDefinitionNotebook[
                    "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                    DefinitionNotebookClient`PackageScope`setHint[
                    "Warning", "Paclet", 
                    DefinitionNotebookClient`$CurrentNotebook, 
                    "28ac90bb-cf76-49ce-9010-961c178e2caa", 1266818676, 
                    "InvalidFirstVersion", <|
                    "Current" -> "0.9.0", "Published" -> None, 
                    "Selection" -> ("Version" -> "0.9.0"), "PublisherID" -> 
                    "FaizonZaman", "PacletDirectory" -> 
                    File["/Users/faizonzaman/Developer/wolfram/\
ImageFilterAnalysis"], "ResourceName" -> "FaizonZaman/ImageFilterAnalysis"|>]; 
                    DefinitionNotebookClient`PackageScope`seekAfter[
                    1266818676]; Null]}, Appearance -> None], "BoxID" -> 
                  "WarningCountButton", StripOnInput -> False], 
                 TagBox[
                  ButtonBox[
                   TagBox[
                    PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[
                    NCache[
                    Rational[64, 85], 0.7529411764705882]], 
                    
                    PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                    0.42426406871192845`}, {0.42426406871192845`, 
                    0.282842712474619}}], 
                    
                    PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                    0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                    0.42426406871192845`}}]}, ImageSize -> 18, 
                    PlotRangePadding -> 0, PlotRange -> 0.7, Background -> 
                    None], True -> GraphicsBox[{
                    GrayLevel[
                    NCache[
                    Rational[128, 255], 0.5019607843137255]], 
                    
                    PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                    0.42426406871192845`}, {0.42426406871192845`, 
                    0.282842712474619}}], 
                    
                    PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                    0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                    0.42426406871192845`}}]}, ImageSize -> 18, 
                    PlotRangePadding -> 0, PlotRange -> 0.7, Background -> 
                    None]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                    MouseAppearanceTag["LinkHand"]], ButtonFunction :> 
                   With[{DefinitionNotebookClient`Stripes`PackagePrivate`nbo$ = 
                    EvaluationNotebook[]}, 
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells] = If[
                    TrueQ[
                    MemberQ[
                    CurrentValue["ModifierKeys"], "Control"]], 
                    DeleteCases[
                    Flatten[{
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                    Cell[
                    Blank[], "StripeCell", 
                    BlankNullSequence[]]], 
                    DeleteCases[
                    Flatten[{
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                    Condition[
                    Pattern[
                    DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    Blank[Cell]], 
                    Not[
                    FreeQ[
                    DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    "406311a3-7546-48c8-86d0-2017f7f6f644"]]]]]], Appearance -> 
                   None, BoxID -> "406311a3-7546-48c8-86d0-2017f7f6f644", 
                   Evaluator -> Automatic, Method -> "Preemptive"], 
                  MouseAppearanceTag["LinkHand"]]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Grid"]}, {"", 
             PaneBox[
              TagBox[
               GridBox[{{"\"\"", 
                  StyleBox[
                   TagBox[
                    
                    GridBox[{{
                    "\"\[FilledVerySmallSquare]\"", "\"Submission result:\"", 
                    
                    TemplateBox[{
                    TagBox[
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"Your paclet resource is being published\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Name\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"FaizonZaman/ImageFilterAnalysis\"", "SummaryItem"]}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"Your paclet resource is being published\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Name\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"FaizonZaman/ImageFilterAnalysis\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"UUID\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"729e6235-efec-492d-8af6-d45d401e3951\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"ResourceType\"", "\": \""}, "RowDefault"],
                     "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Paclet\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Warnings\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", "}"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Version\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"0.9.0\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"SubmissionID\"", "\": \""}, "RowDefault"],
                     "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"5159\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"DirectCreation\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["True", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ResourceSubmission\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    Short[#, 0.75]& ], 
                    "OEM6eJztWNtuG0UYjuOz47qhDUJwg1lFIC5ckjQphJvgbOI2UpNaHrflI\
KSOvf/aI3ZnVzOzSV3EI3DFLRe8FVzDA/AI8M8ebGediuCYw4X3Zlfzn775z1o7I0sdenHovQRp5+\
UbJ1yB8AUoqpjH8djOyELH0wx2TuYeM6nsVVno0gGekCIJ+n2QkqyRwHWpGD0CapHMV3ZWrh+\
NOHVZ/9SzAge0+\
OpYPEtAyVp35IME9cLzgW9uynyLOhIS6kZCBbcHFkE4sLlJ8h3UP0KetS64voOHEcJIcVbeblMOBBz\
oK09ctpnrIIzESF4WHwpmXRZO3kWtRJMKsnwYKJW4oRLfKNL7Tuu4Ldg5QnjREh5Xx9zqgPQC0QdSb\
h0fMuVSX5L12DEo9ATvCUKD11COwKEjsGQtMtEKeF97/HXeyXVFAONrVJq+\
D1RQjs7PnXl8QikfUglEjRywV1J3Lx+fUyeg6BlZbgbKczHE/\
TG1cApq6Fmk0haAvlXsfEpp02ED7gJXiUNlwQSdKcl7wnri0gEQ9grQY8XYY2OpS3bzXeaCFCvhU/\
1sfIKCVTMQAhU/Q8BAbrXQvyb1HwEbDDWEfNu7QJsZudHsSc8JFEzzy1undMCZzfphDpt/\
YLhLLUHdMKhZWQrdo9M3b/z64w8GKiwfMYE5o++M9M7DQ9NzPCHeCp+fD8Td8PntQHwePr8cmG+\
Pb1wlSjD/CT/hfqAmWRwRayZCR2BtalmMD9LkSggrxJOKYzWknFIxYFxOp7F+\
myvmSvr79VgKk2RP9GTG76S2s+\
naThdZLErKxikWPMbYIDnj07pBKqjhCGwaOIq8GWf7iQK3ybkXdRGS/f37n6a6xofGF1gndZ/\
2HVB1EVdNncl6D9BJdT/oOUwOwTLGfUUrvAnqgnGG7pwf8ntGi7JXHv+SupR/FOZ4izmY+\
E1OnZFkMgU1Cch67PmZAko4SBFTLXC5nLpdVCu5x2BP2HIIeZbnijqu6CNsLqAgnW23YzAaYVih18Y\
ya+f6gBKrBOOtS+\
DaVs3Vv29sqv3lUu1vgwy9C10ffGAOsXf2dftKu2jtLMB5I7Duvpmh1bDfYyVjo2BS95XsJMqh6hFX\
9GVUy2nRfzgNsl3P//\
8mwLqOicM4tD3J4hkXBThjZsZc0YD7Twaz6Xhy7sGc7ujLybyczHNM5vJyMv87k/lGUJ8+PTmaH+\
r7xsc7+/Bg5/5eA2zoN3b3d6zGJ9R+0LB296zdrW24v7+3vTi8NSNpfLpnzY+\
7ZLTDhFgcsorxnAquy25uVFNmE62Zb0nmu4VhLBvPsIui4fkdVzS27u3f21pkREnQc5nUsG6SiQVjb\
3tvf3G41o2oTZsCQnvzIwvXgIXhyhtInx/MxriAJm5fLvrLRX+56M+x6E+\
WzvQOfcWKOqWeVON609u/k97S7176zRhtmcl+TTJfI/v4H+\
Wd2WJulhqkGG9N5INr7j4NktMrC3n3LxYP5NP7Atm8ztRvkOr0sCaFaOQ2SCmZlMmtEHE8mEg+\
HC8N7aHJVCA53dsbpHa5Jaf/IEZ/SWnPmUme0rHFriTciWSeMzWMl2cZaf0TvPOK0Q=="}, 
                    "ClickToCopyTemplate"]}, {
                    "\"\[FilledVerySmallSquare]\"", "\"Resource object:\"", 
                    TemplateBox[{
                    TagBox[
                    RowBox[{"ResourceObject", "[", 
                    ButtonBox[
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Thickness[0.0025], {
                    FaceForm[{
                    RGBColor[
                    0.9607843137254902, 0.5058823529411764, 
                    0.19607843137254902`], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{205., 22.660200119018555`}, {205., 
                    212.11320304870605`}, {246.01799774169922`, 
                    235.79520988464355`}, {369.0710144042969, 
                    306.8401927947998}, {369.0710144042969, 
                    117.38719749450684`}, {205., 22.660200119018555`}}, {{
                    30.928985595703125`, 306.8401927947998}, {
                    153.98200225830078`, 235.79520988464355`}, {195., 
                    212.11320304870605`}, {195., 22.660200119018555`}, {
                    30.928985595703125`, 117.38719749450684`}, {
                    30.928985595703125`, 306.8401927947998}}, {{200., 
                    410.22620964050293`}, {364.0710144042969, 
                    315.5001964569092}, {241.01799774169922`, 
                    244.45519828796387`}, {200., 220.77320671081543`}, {
                    158.98200225830078`, 244.45519828796387`}, {
                    35.928985595703125`, 315.5001964569092}, {200., 
                    410.22620964050293`}}, CompressedData["
1:eJxTTMoPSmViYGCQAWIQDQQPlDrLHYB0n8ffYgewSEAmhO9aBaJ/1cmB+XqT
gsF8tsaHGch8BoYNGcjqGS7lmqOYd/qhKYg+9+8dhH/prQmI9ptyBYV/jmEH
Cj+CeUEMMr9iq24MsnkV3Eeike2b8aQrGtk9DSrhyiA6e88JMD/BvUgJbG/S
EzBfQYpBCaKeIROZv2muNDK/YaqzeSayflj4wMyHhR/M/oDHC8uR3fdAaWM5
svthfJj/YHyY/2F8WPjAzIOFH0p8AQA7u3Ea
                    "]}]}, {
                    FaceForm[{
                    RGBColor[
                    0.5529411764705883, 0.6745098039215687, 
                    0.8117647058823529], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{43., 198.67381286621094`}, {107.71399688720703`, 
                    161.3118133544922}, {107.71399688720703`, 
                    86.58680725097656}, {43., 123.94882202148438`}, {43., 
                    198.67381286621094`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.3137254901960784, 0.4549019607843137, 
                    0.611764705882353], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{182.77679443359375`, 198.67381286621094`}, {
                    182.77679443359375`, 123.94882202148438`}, {
                    118.06279754638672`, 86.58680725097656}, {
                    118.06279754638672`, 161.3118133544922}, {
                    182.77679443359375`, 198.67381286621094`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.7803921568627451, 0.8627450980392157, 
                    0.9490196078431372], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{112.8884048461914, 244.9990997314453}, {
                    177.60240173339844`, 207.63610076904297`}, {
                    112.8884048461914, 170.27410888671875`}, {
                    48.174407958984375`, 207.63610076904297`}, {
                    112.8884048461914, 244.9990997314453}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6901960784313725, 0.5882352941176471, 
                    0.8117647058823529], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{130.02911376953125`, 350.11590576171875`}, {
                    194.80210876464844`, 312.7189064025879}, {
                    194.80210876464844`, 237.92591094970703`}, {
                    130.02911376953125`, 275.32291412353516`}, {
                    130.02911376953125`, 350.11590576171875`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.4627450980392157, 0.3607843137254902, 
                    0.611764705882353], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{269.9334716796875, 350.11590576171875`}, {
                    269.9334716796875, 275.32291412353516`}, {
                    205.1604766845703, 237.92591094970703`}, {
                    205.1604766845703, 312.7189064025879}, {269.9334716796875,
                     350.11590576171875`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.8862745098039215, 0.803921568627451, 
                    0.9529411764705882], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{199.98130798339844`, 396.48345947265625`}, {
                    264.7543029785156, 359.0864601135254}, {
                    199.98130798339844`, 321.69046783447266`}, {
                    135.20831298828125`, 359.0864601135254}, {
                    199.98130798339844`, 396.48345947265625`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6627450980392157, 0.803921568627451, 
                    0.5686274509803921], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{217.61199951171875`, 199.13890075683594`}, {
                    281.8990020751953, 162.0229034423828}, {281.8990020751953,
                     87.7908935546875}, {217.61199951171875`, 
                    124.90690612792969`}, {217.61199951171875`, 
                    199.13890075683594`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.43137254901960786`, 0.6039215686274509, 
                    0.34509803921568627`], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{356.46661376953125`, 199.13890075683594`}, {
                    356.46661376953125`, 124.90690612792969`}, {
                    292.1796112060547, 87.7908935546875}, {292.1796112060547, 
                    162.0229034423828}, {356.46661376953125`, 
                    199.13890075683594`}}}]}, {
                    FaceForm[{
                    RGBColor[0.8549019607843137, 0.9450980392156862, 0.8], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{287.039306640625, 245.15859985351562`}, {
                    351.32630920410156`, 208.0426025390625}, {
                    287.039306640625, 170.92660522460938`}, {
                    222.75230407714844`, 208.0426025390625}, {
                    287.039306640625, 245.15859985351562`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6627450980392157, 0.803921568627451, 
                    0.5686274509803921], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    356.46649169921875`, 215.76849365234375`}, {
                    296.2834930419922, 250.5924949645996}, {
                    356.46649169921875`, 285.26649475097656`}, {
                    356.46649169921875`, 215.76849365234375`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6627450980392157, 0.803921568627451, 
                    0.5686274509803921], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    217.61199951171875`, 114.06449890136719`}, {
                    277.7949981689453, 79.24049758911133}, {
                    217.61199951171875`, 44.566497802734375`}, {
                    217.61199951171875`, 114.06449890136719`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.5529411764705883, 0.6745098039215687, 
                    0.8117647058823529], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    122.17269897460938`, 78.36309814453125}, {
                    182.42269897460938`, 113.07109832763672`}, {
                    182.35969924926758`, 43.614097595214844`}, {
                    122.17269897460938`, 78.36309814453125}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.5529411764705883, 0.6745098039215687, 
                    0.8117647058823529], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    103.52159881591797`, 249.46669006347656`}, {
                    43.27159881591797, 214.7586898803711}, {
                    43.334598541259766`, 284.21569061279297`}, {
                    103.52159881591797`, 249.46669006347656`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6901960784313725, 0.5882352941176471, 
                    0.8117647058823529], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    120.86710357666016`, 350.61541748046875`}, {
                    120.80010357499123`, 281.0834197998047}, {
                    60.68010330200195, 315.86641693115234`}, {
                    120.86710357666016`, 350.61541748046875`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6901960784313725, 0.5882352941176471, 
                    0.8117647058823529], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    278.3727111816406, 281.2159118652344}, {
                    278.43971118330956`, 350.74790954589844`}, {
                    338.5597114562988, 315.9649124145508}, {278.3727111816406,
                     281.2159118652344}}}]}}, {
                    ImageSize -> 12, BaselinePosition -> Scaled[0.1], 
                    ImageSize -> {Automatic, 35}}], 
                    StyleBox[
                    "\"FaizonZaman/ImageFilterAnalysis\"", FontFamily -> 
                    Dynamic[
                    CurrentValue["PanelFontFamily"]], FontSize -> 
                    0.8 Inherited, ShowStringCharacters -> False, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.25}}, "Rows" -> {{0}}}], "Grid"], 
                    ButtonFunction :> {}, Evaluator -> None, Active -> False, 
                    Alignment -> Left, 
                    Appearance -> {
                    "Default" -> FrontEnd`FileName[{"Typeset", "SummaryBox"}, 
                    "Panel.9.png"]}, FrameMargins -> {{3, 3}, {3, 0}}, 
                    BaseStyle -> {Deployed -> False}, 
                    DefaultBaseStyle -> {Background -> None}, 
                    BaselinePosition -> Baseline, Method -> "Preemptive"], 
                    "]"}], Short[#, 0.75]& ], 
                    "OEM6eJztW31sHEcVv/\
Odvz9ip6aItsCxsVBBPdvxZxyJ3tlnnx2Rj5PHbtokbr3em7M33tvdzOzZviBFhlZIpSUEktBQaOoA\
QSV/oDQSUvrtUFBBFUUKASwC1G6aiqg0iVBb0qhQZmZ37vbWjnxOXKd/\
3JPl0Zt5897vvXkzs54nx9y4qFcc79AmII7l46oNqgGRjqAhGrKmku6YGxf0alQg5sXejTI2Ynm4oE\
8cJj2gohdiLYEkuGVoJ5QMUAoS8biIkj1QjAL39pgHV3YmVTEuS5u0aEKBVEteSosHQANX9CV1iKEx\
qOlQranB+WFRwZCPVvNRGB+\
CUUBQwZoakN9L9CeJTGkfjOsK6TSBmoo9eFVEVCGACoGkoUyb3l4CgxvJx4XdSI5mTuZtIVVChwpwc\
UfCMHg0SiyPTL23hbsiSB4jEAbDSFONLjXKYwKKw10dshEXdQwqrcCQSVuInxBR8BRKJ1TEJIziCtN\
EOKFKNPDXio63DyVgyo2Sdl2HIhJVCWLvZk1NjxR3iBgCI6nAmMvhe3HXmKgkRBIZXNyeMLQ4WWkpN\
VqwCRojWhSURBAksTXkMZvSdkUeVuNQNXhAcUEI0oThbVp0Q1wchkDeDUnECq2IpWZl2M3vk+\
MQIxejsmCqh0wsCyUQIorvIYAhKA+T+\
IZEvQfKwyMUQn5EGyc23bi6fQhrSsKAdnlcvkkcVuWYLLFUDn1E1rSIhcRcudJuJOojsoQpW2UFyY2\
L+0jfqAoxRl+r/kX33O5oIJU+ZK+\
ERQmGNRRP9RGlvd0dIU3REHrpRUoXA6ie0WwAfYbR7wI0Clt0UZKNpOXpZaq2IiwrCowS2GPQtsNOu\
fLyPa48l8ud/rlGX4Gzz+wup91uj4dwjt8ONmVyTV5BHgM2JQfJ79m8n7cEbfyOJx/cSVt9/\
7TKeJSMMzmhapy26i4/tvMzr9w7EHTqSxk5/c7d9kn7lIBkV+pyDY7YjXI+\
BcqanzJi10eMFJqeuJjlvYd/kjSRnRqj7Wuuk9j0xMc8+XDfXjVok7/jxUOjJqjXpYzxC++32+\
dn6CdG78hjRh5m7u/t+a8lFDGFerp20/bqns8xvvZ7gPEFX58bsfMu1/ERu7zrdLw1Q9+\
rc80MxP8uYsvzJtpuPnAmg0+BtPh7PVM77PzEL/077PomSn+93W7v0Jvf2m7HM1mzdQ1tR5//\
LeMHu5HA7A69yXjfbS7BHhTOn3jidjs/eTDUKtvn8/hw/Tx+3H7k3JFxO75Z4elxO37Oc/84z/\
3nPI8P18fjl7FeWe/zE09Tmgug7x+kdD6Arn5A6UKW+/yUy+P2ZmzcU2s87nwzaye7GLDv/\
MkM7Il3trGAXf1S1M4H9x7tD9rkJ5/58P6gc37WDlUzOhNAn2X09wA6sJ/\
SuRt3aPLsTMzuEOc54FnvQwN2hzjPHc6Yn7VDH1yh9M8A+tEPKb0dQPczunjjDk2dXcdSberKk+\
xcmA03MoCXt73LUpmPT/6mB7IVAbf2LDTO5mft0K2M3gqgP56m9MYyptzkxeAgBTT917kEc+\
jYfWylfjr5CLbzlUdeYKczl3/qy827gs75WTt0+AlKJNM+zegvy5lyl/\
6h2x3iPAc8JRyV7Q5xnjucMT9rh3Yw+lcAPfsMpQsBtIfRMqTcbOwjtgLB51+\
ZYICrHmUAa4Z2sSuNj99ZdrvBHDj21uBC42x+\
1g41Mzpvc6iB0RvLsEIHG9kdO7vLvD4iQ4fNlXkuGLXzrsP/ZocCl58uWf9A0Dk/a4fMs+\
BsAAFG5wLWrvrzjTsUHO8eszvEeQ74+OsdyO4Q57nDGfOzdmg7I3K43c2IfHg+/\
gNKy3EPHbnMViB4y1F2yu1b9x7bS64Bt/lJZo1P/\
2yAnXKzq2dGFxpn81c05Txph6g3XurN9JgZ3snHrjB09Q8/xMJ/8r1eLWgb3xc6syvolL/\
p6FPZ73uI3RyRkzsYykj0D8C+G1wP9oSDTvkV/ahZEH35I+aXyVceY2inv/l780J/\
tJN589Q3XmX89OOvmV8ydvmbjn5WnLuPovFdqjUz5eUfM5T13TMsk3xnjjF+Ar/M1iRDfkVv94XQT+\
1pZbGcnrlAd+/U+aZGxh/v/6553pZv3Uzbmb+9wG6+DPmbj/59yFAOGvtpe6iieJjx+n/\
eZmfRgXfvZG2P/pKJ3i4fK3S8e5S2Yx1KRi99DQi5U93e9gnyt37q1cl6WOkQpdFhpCXUqONhJT+\
MxLjztaWEdfbJ0ih2vsN8Et9BFgA3H1FoTUquPCRKI5A/\
lzhjVQYMJOtb1A2qnjD4YEH6Zc2TXgcrm/h7YnqEvycWCZtJINf7BPAp68FsgwHj7aqqme+\
RwHPp21NpeecLoKUQfEEIi/JuTd0mxkW1jnlJMs6AqF0VlSSWsQA8gk9wTrcQAq/wq+\
cEMDBiGDpeX1eHrPc8XDuuKTGy0pKiJaK1khavi4iSAo1eqGtYNjSUTMvWLYIAlPUkdYgUWR3t790I\
SkhIOmFMTCjpR1Tqui02eYLgHMomoPQBMeuAEnnTpUxTRGrvs1nZWyV0QiyRfKDKszdbJ3RN6OQogT\
4EdUiWI+oTdV2xUtanxXwyDaEvxmKIr4GOpWOllXfz3iq5BCgkp1YiruLUm6/\
Vkt8wlhbzEifnyyzwZFpCuzohiRp07o1VFhgG07bPFscy3072gLhVQE9edRhnbTWUt3Rjtpdmr+\
PErQYj2jg9HdTh0IiIRImunTNEpZsT8SGINolodN5YRYTMNSIISjKmR5cnvcpMdVI1xAlme97UjzkN\
PH2a/slNgEq6JuRogRF6LpnlBHOB3fabj9USbkoNJKRo+\
LprIM67OlcEyRVBckWQXBEkVwTJFUFyRZBcEeT6VihXBMkVQXJFkFwRJFcEyRVBckWQXBEkVwTJFUG\
WrwhSnCuC5IogK1IEWRRdmfBVmBzXUBQvJcWukWzW+\
QLcd5FkuksAhQLDKJAYOMDyjlGIVKiwjqhoiD4xlY2VlkS6p4o4sVU2RgDURcQea3E+\
GNFQZnoAV1Z+\
VwmdmpSgD7fiktblWhvkAeFj3RsrvPeuI6DVwhYkD8tEn68XKlDES9hi5cLaRt8mMelrqG9oFq5vOT\
eSBcGGr18nebSipkuFe0hKL2lvFwr1tW219ddlrkjo79/Qmb2tLwqtDW2wpaGx2Q9jUPI3tTVE/\
evEWIs/2tQcbapfCxvbmtcuBCVXQM0VUHMF1EULqOmPWGdtcoGvSpt6UGbtOFpVVWKO6uctGf8pZ36\
18rolcA8Qq47/tmsv8gMv/VQEn1/\
krCdy9AgBNdkcDH5Qxu1Q50CBecf4QaF16oF8dpb5QantMwf4l/Tx4ger05fWRs2UIi566F3Uyi++\
8fHx+VeeNrQzfcslMcmLOlGX69ZSRCUmVuI9/VOjNEQnWf+a2LWo0rZmsb6htbnN39LU0uZvamkU/\
UMNrW3++ljL2qEWKTZU3xbzA7ql6BqGyN8fcMIAPlvsBxeI/WA6y83/\
SBSHlHlZXtQVlRccWG3OoR9BzKBqYLNu/38bsQbx"}, "ClickToCopyTemplate"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {Automatic, Automatic, Fit}, 
                    "Rows" -> {{Automatic}}}], "Grid"], FontColor -> 
                   GrayLevel[0.5], FontSize -> 12, StripOnInput -> False]}}, 
                GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                False, GridBoxDividers -> {
                 "Columns" -> {{None}}, "RowsIndexed" -> {-1 -> GrayLevel[
                    Rational[239, 255]]}}, 
                GridBoxItemSize -> {
                 "Columns" -> {Automatic, Fit}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {1, {}, 1}, "Rows" -> {1, {}, 2}}], "Grid"], 
              ImageMargins -> 0]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
           BaselinePosition -> {1, 1}]}, 
        Dynamic[
         TrueQ[
          CurrentValue[
           EvaluationCell[], {TaggingRules, "StripeOpen"}, False]]], 
        Alignment -> Automatic, ImageSize -> Automatic, ImageMargins -> 0, 
        BaseStyle -> {}, DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
        Baseline], Deployed -> False, StripOnInput -> False], 
      OpenerView[{
        Grid[{{
           Style[
            Dynamic[
             DateString[
              TimeZoneConvert[
               DateObject[
               3.956172003396139`16.349850154416213*^9, TimeZone -> 0]], {
              "MonthName", " ", "DayShort", ", ", "Year", " ", "Hour12Short", 
               ":", "Minute", " ", "AMPMLowerCase"}], SingleEvaluation -> 
             True, Evaluator -> "System"], FontSlant -> Italic, FontColor -> 
            GrayLevel[0.5], FontSize -> 0.9 Inherited], "   ", 
           Item[
            Style[
             Grid[{{
                Annotation[
                 Grid[{{
                    Style["\[Checkmark]", FontColor -> RGBColor[0, 
                    Rational[2, 3], 0], FontSize -> 16, FontWeight -> 
                    "Heavy"], "", "Your paclet resource is being published"}},
                   Alignment -> {Left, Baseline}, 
                  Spacings -> {{0.25, 2 -> 0.1}, Automatic}], 
                 DefinitionNotebookClient`Stripes`PackagePrivate`$stripeText[
                 "Your paclet resource is being published"]], ""}}, Spacings -> 
              0.25, Alignment -> {Automatic, Baseline}], LineBreakWithin -> 
             Automatic, LineIndent -> 0], ItemSize -> Fit], 
           Item[
            Style["", LineBreakWithin -> Automatic, LineIndent -> 0], 
            ItemSize -> Fit], 
           Style[
            ActionMenu[
             Highlighted[
              Row[{
                Grid[{{
                   RawBoxes[
                    TemplateBox[{
                    TemplateBox[{
                    PaneBox[
                    TemplateBox[{
                    RGBColor[1., 0.4627450980392157, 0.]}, "HintPodIconHint"],
                     ImageSize -> {12, 12}, ImageSizeAction -> "ShrinkToFit", 
                    BaselinePosition -> Scaled[0.1]], 
                    TemplateBox[{1}, "Spacer1"], 
                    StyleBox[
                    "1", FontSize -> 14, FontWeight -> Plain, FontColor -> 
                    GrayLevel[0.25], FontFamily -> "Source Sans Pro", 
                    StripOnInput -> False]}, "RowDefault"], 
                    "\"Potential issues found\""}, 
                    "PrettyTooltipTemplate"]]}}], 
                Graphics[{
                  GrayLevel[0.4], 
                  AbsoluteThickness[2], 
                  CapForm["Round"], 
                  Line[{{-1, 0}, {0, -1}, {1, 0}}]}, {
                 ImageSize -> {13, 9}, BaselinePosition -> Scaled[0.2], 
                  ImagePadding -> {{3, 3}, {3, 3}}, AspectRatio -> Full}]}], 
              ImageSize -> {Automatic, 19}, BaselinePosition -> Baseline, 
              Background -> GrayLevel[1], Frame -> True, FrameStyle -> Dynamic[
                If[
                 CurrentValue["MouseOver"], 
                 Hue[0.55, 0.82, 0.87], 
                 GrayLevel[0.8]]], FrameMargins -> {{4, 4}, {1, 1}}, 
              Alignment -> {Center, Baseline}], {Row[{
                 Pane[
                  RawBoxes[
                   TemplateBox[{
                    RGBColor[1., 0.4627450980392157, 0.]}, 
                    "HintPodIconHint"]], ImageSize -> {10, 10}, 
                  ImageSizeAction -> "ShrinkToFit", BaselinePosition -> 
                  Scaled[0.1]], " ", 
                 "New submissions should typically be version 1.0.0"}] :> 
              DefinitionNotebookClient`WithCurrentNotebook[
                EvaluationNotebook[], 
                DefinitionNotebookClient`LoadDefinitionNotebook[
                 "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                DefinitionNotebookClient`PackageScope`setHint[
                 "Warning", "Paclet", 
                  DefinitionNotebookClient`$CurrentNotebook, 
                  "28ac90bb-cf76-49ce-9010-961c178e2caa", 1266818676, 
                  "InvalidFirstVersion", <|
                  "Current" -> "0.9.0", "Published" -> None, 
                   "Selection" -> ("Version" -> "0.9.0"), "PublisherID" -> 
                   "FaizonZaman", "PacletDirectory" -> 
                   File["/Users/faizonzaman/Developer/wolfram/\
ImageFilterAnalysis"], "ResourceName" -> "FaizonZaman/ImageFilterAnalysis"|>]; 
                DefinitionNotebookClient`PackageScope`seekAfter[1266818676]; 
                Null]}, Appearance -> None], "BoxID" -> "WarningCountButton"], 
           MouseAppearance[
            Button[
             MouseAppearance[
              Mouseover[
               Graphics[{
                 GrayLevel[
                  Rational[64, 85]], 
                 
                 Polygon[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                  0.42426406871192845`}, {0.42426406871192845`, 
                  0.282842712474619}}], 
                 
                 Polygon[{{0.42426406871192845`, -0.282842712474619}, {
                  0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                  0.42426406871192845`}}]}, ImageSize -> 18, PlotRangePadding -> 
                0, PlotRange -> 0.7, Background -> None], 
               Graphics[{
                 GrayLevel[
                  Rational[128, 255]], 
                 
                 Polygon[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                  0.42426406871192845`}, {0.42426406871192845`, 
                  0.282842712474619}}], 
                 
                 Polygon[{{0.42426406871192845`, -0.282842712474619}, {
                  0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                  0.42426406871192845`}}]}, ImageSize -> 18, PlotRangePadding -> 
                0, PlotRange -> 0.7, Background -> None]], "LinkHand"], 
             
             With[{DefinitionNotebookClient`Stripes`PackagePrivate`nbo$ = 
               EvaluationNotebook[]}, 
              CurrentValue[
               DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                DockedCells] = If[
                TrueQ[
                 MemberQ[
                  CurrentValue["ModifierKeys"], "Control"]], 
                DeleteCases[
                 Flatten[{
                   CurrentValue[
                   DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                 Cell[
                  Blank[], "StripeCell", 
                  BlankNullSequence[]]], 
                DeleteCases[
                 Flatten[{
                   CurrentValue[
                   DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                 Condition[
                  Pattern[
                  DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                   Blank[Cell]], 
                  Not[
                   FreeQ[
                   DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    "406311a3-7546-48c8-86d0-2017f7f6f644"]]]]]], Appearance -> 
             None, BoxID -> "406311a3-7546-48c8-86d0-2017f7f6f644"], 
            "LinkHand"]}}, Alignment -> {Left, Baseline}], 
        Grid[{{"", 
           Style[
            Grid[{{"\[FilledVerySmallSquare]", "Submission result:", 
               RawBoxes[
                TemplateBox[{
                  TagBox[
                   RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"Your paclet resource is being published\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Name\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"FaizonZaman/ImageFilterAnalysis\"", "SummaryItem"]}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"Your paclet resource is being published\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Name\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"FaizonZaman/ImageFilterAnalysis\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"UUID\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"729e6235-efec-492d-8af6-d45d401e3951\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"ResourceType\"", "\": \""}, "RowDefault"],
                     "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Paclet\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Warnings\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", "}"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Version\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"0.9.0\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"SubmissionID\"", "\": \""}, "RowDefault"],
                     "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"5159\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"DirectCreation\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["True", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ResourceSubmission\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                   Short[#, 0.75]& ], 
                  "OEM6eJztWNtuG0UYjuOz47qhDUJwg1lFIC5ckjQphJvgbOI2UpNaHrflIKS\
Ovf/aI3ZnVzOzSV3EI3DFLRe8FVzDA/AI8M8ebGediuCYw4X3Zlfzn775z1o7I0sdenHovQRp5+\
UbJ1yB8AUoqpjH8djOyELH0wx2TuYeM6nsVVno0gGekCIJ+n2QkqyRwHWpGD0CapHMV3ZWrh+\
NOHVZ/9SzAge0+\
OpYPEtAyVp35IME9cLzgW9uynyLOhIS6kZCBbcHFkE4sLlJ8h3UP0KetS64voOHEcJIcVbeblMOBBz\
oK09ctpnrIIzESF4WHwpmXRZO3kWtRJMKsnwYKJW4oRLfKNL7Tuu4Ldg5QnjREh5Xx9zqgPQC0QdSb\
h0fMuVSX5L12DEo9ATvCUKD11COwKEjsGQtMtEKeF97/HXeyXVFAONrVJq+\
D1RQjs7PnXl8QikfUglEjRywV1J3Lx+fUyeg6BlZbgbKczHE/\
TG1cApq6Fmk0haAvlXsfEpp02ED7gJXiUNlwQSdKcl7wnri0gEQ9grQY8XYY2OpS3bzXeaCFCvhU/\
1sfIKCVTMQAhU/Q8BAbrXQvyb1HwEbDDWEfNu7QJsZudHsSc8JFEzzy1undMCZzfphDpt/\
YLhLLUHdMKhZWQrdo9M3b/z64w8GKiwfMYE5o++M9M7DQ9NzPCHeCp+fD8Td8PntQHwePr8cmG+\
Pb1wlSjD/CT/hfqAmWRwRayZCR2BtalmMD9LkSggrxJOKYzWknFIxYFxOp7F+\
myvmSvr79VgKk2RP9GTG76S2s+\
naThdZLErKxikWPMbYIDnj07pBKqjhCGwaOIq8GWf7iQK3ybkXdRGS/f37n6a6xofGF1gndZ/\
2HVB1EVdNncl6D9BJdT/oOUwOwTLGfUUrvAnqgnGG7pwf8ntGi7JXHv+SupR/FOZ4izmY+\
E1OnZFkMgU1Cch67PmZAko4SBFTLXC5nLpdVCu5x2BP2HIIeZbnijqu6CNsLqAgnW23YzAaYVih18Y\
ya+f6gBKrBOOtS+\
DaVs3Vv29sqv3lUu1vgwy9C10ffGAOsXf2dftKu2jtLMB5I7Duvpmh1bDfYyVjo2BS95XsJMqh6hFX\
9GVUy2nRfzgNsl3P//\
8mwLqOicM4tD3J4hkXBThjZsZc0YD7Twaz6Xhy7sGc7ujLybyczHNM5vJyMv87k/lGUJ8+PTmaH+\
r7xsc7+/Bg5/5eA2zoN3b3d6zGJ9R+0LB296zdrW24v7+3vTi8NSNpfLpnzY+\
7ZLTDhFgcsorxnAquy25uVFNmE62Zb0nmu4VhLBvPsIui4fkdVzS27u3f21pkREnQc5nUsG6SiQVjb\
3tvf3G41o2oTZsCQnvzIwvXgIXhyhtInx/MxriAJm5fLvrLRX+56M+x6E+\
WzvQOfcWKOqWeVON609u/k97S7176zRhtmcl+TTJfI/v4H+\
Wd2WJulhqkGG9N5INr7j4NktMrC3n3LxYP5NP7Atm8ztRvkOr0sCaFaOQ2SCmZlMmtEHE8mEg+\
HC8N7aHJVCA53dsbpHa5Jaf/IEZ/SWnPmUme0rHFriTciWSeMzWMl2cZaf0TvPOK0Q=="}, 
                 "ClickToCopyTemplate"]]}, {
              "\[FilledVerySmallSquare]", "Resource object:", 
               RawBoxes[
                TemplateBox[{
                  TagBox[
                   RowBox[{"ResourceObject", "[", 
                    ButtonBox[
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Thickness[0.0025], {
                    FaceForm[{
                    RGBColor[
                    0.9607843137254902, 0.5058823529411764, 
                    0.19607843137254902`], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{205., 22.660200119018555`}, {205., 
                    212.11320304870605`}, {246.01799774169922`, 
                    235.79520988464355`}, {369.0710144042969, 
                    306.8401927947998}, {369.0710144042969, 
                    117.38719749450684`}, {205., 22.660200119018555`}}, {{
                    30.928985595703125`, 306.8401927947998}, {
                    153.98200225830078`, 235.79520988464355`}, {195., 
                    212.11320304870605`}, {195., 22.660200119018555`}, {
                    30.928985595703125`, 117.38719749450684`}, {
                    30.928985595703125`, 306.8401927947998}}, {{200., 
                    410.22620964050293`}, {364.0710144042969, 
                    315.5001964569092}, {241.01799774169922`, 
                    244.45519828796387`}, {200., 220.77320671081543`}, {
                    158.98200225830078`, 244.45519828796387`}, {
                    35.928985595703125`, 315.5001964569092}, {200., 
                    410.22620964050293`}}, CompressedData["
1:eJxTTMoPSmViYGCQAWIQDQQPlDrLHYB0n8ffYgewSEAmhO9aBaJ/1cmB+XqT
gsF8tsaHGch8BoYNGcjqGS7lmqOYd/qhKYg+9+8dhH/prQmI9ptyBYV/jmEH
Cj+CeUEMMr9iq24MsnkV3Eeike2b8aQrGtk9DSrhyiA6e88JMD/BvUgJbG/S
EzBfQYpBCaKeIROZv2muNDK/YaqzeSayflj4wMyHhR/M/oDHC8uR3fdAaWM5
svthfJj/YHyY/2F8WPjAzIOFH0p8AQA7u3Ea
                    "]}]}, {
                    FaceForm[{
                    RGBColor[
                    0.5529411764705883, 0.6745098039215687, 
                    0.8117647058823529], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{43., 198.67381286621094`}, {107.71399688720703`, 
                    161.3118133544922}, {107.71399688720703`, 
                    86.58680725097656}, {43., 123.94882202148438`}, {43., 
                    198.67381286621094`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.3137254901960784, 0.4549019607843137, 
                    0.611764705882353], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{182.77679443359375`, 198.67381286621094`}, {
                    182.77679443359375`, 123.94882202148438`}, {
                    118.06279754638672`, 86.58680725097656}, {
                    118.06279754638672`, 161.3118133544922}, {
                    182.77679443359375`, 198.67381286621094`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.7803921568627451, 0.8627450980392157, 
                    0.9490196078431372], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{112.8884048461914, 244.9990997314453}, {
                    177.60240173339844`, 207.63610076904297`}, {
                    112.8884048461914, 170.27410888671875`}, {
                    48.174407958984375`, 207.63610076904297`}, {
                    112.8884048461914, 244.9990997314453}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6901960784313725, 0.5882352941176471, 
                    0.8117647058823529], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{130.02911376953125`, 350.11590576171875`}, {
                    194.80210876464844`, 312.7189064025879}, {
                    194.80210876464844`, 237.92591094970703`}, {
                    130.02911376953125`, 275.32291412353516`}, {
                    130.02911376953125`, 350.11590576171875`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.4627450980392157, 0.3607843137254902, 
                    0.611764705882353], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{269.9334716796875, 350.11590576171875`}, {
                    269.9334716796875, 275.32291412353516`}, {
                    205.1604766845703, 237.92591094970703`}, {
                    205.1604766845703, 312.7189064025879}, {269.9334716796875,
                     350.11590576171875`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.8862745098039215, 0.803921568627451, 
                    0.9529411764705882], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{199.98130798339844`, 396.48345947265625`}, {
                    264.7543029785156, 359.0864601135254}, {
                    199.98130798339844`, 321.69046783447266`}, {
                    135.20831298828125`, 359.0864601135254}, {
                    199.98130798339844`, 396.48345947265625`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6627450980392157, 0.803921568627451, 
                    0.5686274509803921], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{217.61199951171875`, 199.13890075683594`}, {
                    281.8990020751953, 162.0229034423828}, {281.8990020751953,
                     87.7908935546875}, {217.61199951171875`, 
                    124.90690612792969`}, {217.61199951171875`, 
                    199.13890075683594`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.43137254901960786`, 0.6039215686274509, 
                    0.34509803921568627`], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{356.46661376953125`, 199.13890075683594`}, {
                    356.46661376953125`, 124.90690612792969`}, {
                    292.1796112060547, 87.7908935546875}, {292.1796112060547, 
                    162.0229034423828}, {356.46661376953125`, 
                    199.13890075683594`}}}]}, {
                    FaceForm[{
                    RGBColor[0.8549019607843137, 0.9450980392156862, 0.8], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{287.039306640625, 245.15859985351562`}, {
                    351.32630920410156`, 208.0426025390625}, {
                    287.039306640625, 170.92660522460938`}, {
                    222.75230407714844`, 208.0426025390625}, {
                    287.039306640625, 245.15859985351562`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6627450980392157, 0.803921568627451, 
                    0.5686274509803921], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    356.46649169921875`, 215.76849365234375`}, {
                    296.2834930419922, 250.5924949645996}, {
                    356.46649169921875`, 285.26649475097656`}, {
                    356.46649169921875`, 215.76849365234375`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6627450980392157, 0.803921568627451, 
                    0.5686274509803921], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    217.61199951171875`, 114.06449890136719`}, {
                    277.7949981689453, 79.24049758911133}, {
                    217.61199951171875`, 44.566497802734375`}, {
                    217.61199951171875`, 114.06449890136719`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.5529411764705883, 0.6745098039215687, 
                    0.8117647058823529], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    122.17269897460938`, 78.36309814453125}, {
                    182.42269897460938`, 113.07109832763672`}, {
                    182.35969924926758`, 43.614097595214844`}, {
                    122.17269897460938`, 78.36309814453125}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.5529411764705883, 0.6745098039215687, 
                    0.8117647058823529], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    103.52159881591797`, 249.46669006347656`}, {
                    43.27159881591797, 214.7586898803711}, {
                    43.334598541259766`, 284.21569061279297`}, {
                    103.52159881591797`, 249.46669006347656`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6901960784313725, 0.5882352941176471, 
                    0.8117647058823529], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    120.86710357666016`, 350.61541748046875`}, {
                    120.80010357499123`, 281.0834197998047}, {
                    60.68010330200195, 315.86641693115234`}, {
                    120.86710357666016`, 350.61541748046875`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6901960784313725, 0.5882352941176471, 
                    0.8117647058823529], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    278.3727111816406, 281.2159118652344}, {
                    278.43971118330956`, 350.74790954589844`}, {
                    338.5597114562988, 315.9649124145508}, {278.3727111816406,
                     281.2159118652344}}}]}}, {
                    ImageSize -> 12, BaselinePosition -> Scaled[0.1], 
                    ImageSize -> {Automatic, 35}}], 
                    StyleBox[
                    "\"FaizonZaman/ImageFilterAnalysis\"", FontFamily -> 
                    Dynamic[
                    CurrentValue["PanelFontFamily"]], FontSize -> 
                    0.8 Inherited, ShowStringCharacters -> False, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.25}}, "Rows" -> {{0}}}], "Grid"], 
                    ButtonFunction :> {}, Evaluator -> None, Active -> False, 
                    Alignment -> Left, 
                    Appearance -> {
                    "Default" -> 
                    FrontEnd`FileName[{"Typeset", "SummaryBox"}, 
                    "Panel.9.png"]}, FrameMargins -> {{3, 3}, {3, 0}}, 
                    BaseStyle -> {Deployed -> False}, 
                    DefaultBaseStyle -> {Background -> None}, 
                    BaselinePosition -> Baseline, Method -> "Preemptive"], 
                    "]"}], Short[#, 0.75]& ], 
                  "OEM6eJztW31sHEcVv/\
Odvz9ip6aItsCxsVBBPdvxZxyJ3tlnnx2Rj5PHbtokbr3em7M33tvdzOzZviBFhlZIpSUEktBQaOoA\
QSV/oDQSUvrtUFBBFUUKASwC1G6aiqg0iVBb0qhQZmZ37vbWjnxOXKd/\
3JPl0Zt5897vvXkzs54nx9y4qFcc79AmII7l46oNqgGRjqAhGrKmku6YGxf0alQg5sXejTI2Ynm4oE\
8cJj2gohdiLYEkuGVoJ5QMUAoS8biIkj1QjAL39pgHV3YmVTEuS5u0aEKBVEteSosHQANX9CV1iKEx\
qOlQranB+WFRwZCPVvNRGB+\
CUUBQwZoakN9L9CeJTGkfjOsK6TSBmoo9eFVEVCGACoGkoUyb3l4CgxvJx4XdSI5mTuZtIVVChwpwc\
UfCMHg0SiyPTL23hbsiSB4jEAbDSFONLjXKYwKKw10dshEXdQwqrcCQSVuInxBR8BRKJ1TEJIziCtN\
EOKFKNPDXio63DyVgyo2Sdl2HIhJVCWLvZk1NjxR3iBgCI6nAmMvhe3HXmKgkRBIZXNyeMLQ4WWkpN\
VqwCRojWhSURBAksTXkMZvSdkUeVuNQNXhAcUEI0oThbVp0Q1wchkDeDUnECq2IpWZl2M3vk+\
MQIxejsmCqh0wsCyUQIorvIYAhKA+T+\
IZEvQfKwyMUQn5EGyc23bi6fQhrSsKAdnlcvkkcVuWYLLFUDn1E1rSIhcRcudJuJOojsoQpW2UFyY2\
L+0jfqAoxRl+r/kX33O5oIJU+ZK+\
ERQmGNRRP9RGlvd0dIU3REHrpRUoXA6ie0WwAfYbR7wI0Clt0UZKNpOXpZaq2IiwrCowS2GPQtsNOu\
fLyPa48l8ud/rlGX4Gzz+wup91uj4dwjt8ONmVyTV5BHgM2JQfJ79m8n7cEbfyOJx/cSVt9/\
7TKeJSMMzmhapy26i4/tvMzr9w7EHTqSxk5/c7d9kn7lIBkV+pyDY7YjXI+\
BcqanzJi10eMFJqeuJjlvYd/kjSRnRqj7Wuuk9j0xMc8+XDfXjVok7/jxUOjJqjXpYzxC++32+\
dn6CdG78hjRh5m7u/t+a8lFDGFerp20/bqns8xvvZ7gPEFX58bsfMu1/ERu7zrdLw1Q9+\
rc80MxP8uYsvzJtpuPnAmg0+BtPh7PVM77PzEL/077PomSn+93W7v0Jvf2m7HM1mzdQ1tR5//\
LeMHu5HA7A69yXjfbS7BHhTOn3jidjs/eTDUKtvn8/hw/Tx+3H7k3JFxO75Z4elxO37Oc/84z/\
3nPI8P18fjl7FeWe/zE09Tmgug7x+kdD6Arn5A6UKW+/yUy+P2ZmzcU2s87nwzaye7GLDv/\
MkM7Il3trGAXf1S1M4H9x7tD9rkJ5/58P6gc37WDlUzOhNAn2X09wA6sJ/\
SuRt3aPLsTMzuEOc54FnvQwN2hzjPHc6Yn7VDH1yh9M8A+tEPKb0dQPczunjjDk2dXcdSberKk+\
xcmA03MoCXt73LUpmPT/6mB7IVAbf2LDTO5mft0K2M3gqgP56m9MYyptzkxeAgBTT917kEc+\
jYfWylfjr5CLbzlUdeYKczl3/qy827gs75WTt0+AlKJNM+zegvy5lyl/\
6h2x3iPAc8JRyV7Q5xnjucMT9rh3Yw+lcAPfsMpQsBtIfRMqTcbOwjtgLB51+\
ZYICrHmUAa4Z2sSuNj99ZdrvBHDj21uBC42x+\
1g41Mzpvc6iB0RvLsEIHG9kdO7vLvD4iQ4fNlXkuGLXzrsP/ZocCl58uWf9A0Dk/a4fMs+\
BsAAFG5wLWrvrzjTsUHO8eszvEeQ74+OsdyO4Q57nDGfOzdmg7I3K43c2IfHg+/\
gNKy3EPHbnMViB4y1F2yu1b9x7bS64Bt/lJZo1P/\
2yAnXKzq2dGFxpn81c05Txph6g3XurN9JgZ3snHrjB09Q8/xMJ/8r1eLWgb3xc6syvolL/\
p6FPZ73uI3RyRkzsYykj0D8C+G1wP9oSDTvkV/ahZEH35I+aXyVceY2inv/l780J/\
tJN589Q3XmX89OOvmV8ydvmbjn5WnLuPovFdqjUz5eUfM5T13TMsk3xnjjF+Ar/M1iRDfkVv94XQT+\
1pZbGcnrlAd+/U+aZGxh/v/6553pZv3Uzbmb+9wG6+DPmbj/59yFAOGvtpe6iieJjx+n/\
eZmfRgXfvZG2P/pKJ3i4fK3S8e5S2Yx1KRi99DQi5U93e9gnyt37q1cl6WOkQpdFhpCXUqONhJT+\
MxLjztaWEdfbJ0ih2vsN8Et9BFgA3H1FoTUquPCRKI5A/\
lzhjVQYMJOtb1A2qnjD4YEH6Zc2TXgcrm/h7YnqEvycWCZtJINf7BPAp68FsgwHj7aqqme+\
RwHPp21NpeecLoKUQfEEIi/JuTd0mxkW1jnlJMs6AqF0VlSSWsQA8gk9wTrcQAq/wq+\
cEMDBiGDpeX1eHrPc8XDuuKTGy0pKiJaK1khavi4iSAo1eqGtYNjSUTMvWLYIAlPUkdYgUWR3t790I\
SkhIOmFMTCjpR1Tqui02eYLgHMomoPQBMeuAEnnTpUxTRGrvs1nZWyV0QiyRfKDKszdbJ3RN6OQogT\
4EdUiWI+oTdV2xUtanxXwyDaEvxmKIr4GOpWOllXfz3iq5BCgkp1YiruLUm6/\
Vkt8wlhbzEifnyyzwZFpCuzohiRp07o1VFhgG07bPFscy3072gLhVQE9edRhnbTWUt3Rjtpdmr+\
PErQYj2jg9HdTh0IiIRImunTNEpZsT8SGINolodN5YRYTMNSIISjKmR5cnvcpMdVI1xAlme97UjzkN\
PH2a/slNgEq6JuRogRF6LpnlBHOB3fabj9USbkoNJKRo+\
LprIM67OlcEyRVBckWQXBEkVwTJFUFyRZBcEeT6VihXBMkVQXJFkFwRJFcEyRVBckWQXBEkVwTJFUG\
WrwhSnCuC5IogK1IEWRRdmfBVmBzXUBQvJcWukWzW+\
QLcd5FkuksAhQLDKJAYOMDyjlGIVKiwjqhoiD4xlY2VlkS6p4o4sVU2RgDURcQea3E+\
GNFQZnoAV1Z+\
VwmdmpSgD7fiktblWhvkAeFj3RsrvPeuI6DVwhYkD8tEn68XKlDES9hi5cLaRt8mMelrqG9oFq5vOT\
eSBcGGr18nebSipkuFe0hKL2lvFwr1tW219ddlrkjo79/Qmb2tLwqtDW2wpaGx2Q9jUPI3tTVE/\
evEWIs/2tQcbapfCxvbmtcuBCVXQM0VUHMF1EULqOmPWGdtcoGvSpt6UGbtOFpVVWKO6uctGf8pZ36\
18rolcA8Qq47/tmsv8gMv/VQEn1/\
krCdy9AgBNdkcDH5Qxu1Q50CBecf4QaF16oF8dpb5QantMwf4l/Tx4ger05fWRs2UIi566F3Uyi++\
8fHx+VeeNrQzfcslMcmLOlGX69ZSRCUmVuI9/VOjNEQnWf+a2LWo0rZmsb6htbnN39LU0uZvamkU/\
UMNrW3++ljL2qEWKTZU3xbzA7ql6BqGyN8fcMIAPlvsBxeI/WA6y83/\
SBSHlHlZXtQVlRccWG3OoR9BzKBqYLNu/38bsQbx"}, "ClickToCopyTemplate"]]}}, 
             Alignment -> Left, 
             ItemSize -> {{Automatic, Automatic, Fit}, Automatic}], FontColor -> 
            GrayLevel[0.5], FontSize -> 12]}}, 
         ItemSize -> {{Automatic, Fit}, Automatic}, Alignment -> Left, 
         Dividers -> {None, {-1 -> GrayLevel[
              Rational[239, 255]]}}, Spacings -> {{1, {}, 1}, {1, {}, 2}}]}, 
       Dynamic[
        CurrentValue[
         EvaluationCell[], {TaggingRules, "StripeOpen"}, False]]]], "Text", 
     FontSize -> 12, FontColor -> GrayLevel[0.25], StripOnInput -> False]], 
   "StripeCell", CellFrameMargins -> {{20, 5}, {2, 2}}, 
   CellFrame -> {{0, 0}, {1, 0}}, CellFrameColor -> GrayLevel[0.75]]},
TaggingRules->{
 "ResourceType" -> "Paclet", "ResourceCreateNotebook" -> True, 
  "TemplateVersion" -> "2023.03.03", "CreationTimestamp" -> 
  3.9467630640993`16.348816044351295*^9, "UpdatedTimestamp" -> 
  3.946763064099353`16.348816044351302*^9, "CompatibilityTest" -> HoldComplete[
    BinaryDeserialize[
     BaseDecode[
     "OEM6eJzVWFtv2zYUri+\
5IPEyNECB9a0PeciCbR2GAduaXerJSeohSZPQ6XNo6UgRTJMqSaXxv98hJTm2I7mS7WCdHxJapL7z8\
dz40X5N7TpiGImYe0f3kQSlQsH9mlq7jEPQfj13uq7qXR//\
Ntrcw39rRx9jytTO3geQZv48HvZBSt9+9t+aFYQO4RIHLSeWErj+QFkM/\
jO1e3SHI6rNW0JDX4gBrmqehkqrVo8GQciDq5iBIq0rUCKWLvRGEZBmh2qKNJvvuQuFLNf+\
ZsIdmGUJ4J4juIZ7fUH1rd8o2vk5gKfIfmaPjJSGocNCpH3TAT/\
k4STdm4dXXhlS2Wt5S1XzPGYMif3weDI1cAUBUgWJTP0wiKV1zXi7f5UldQWRUKEWcpQAJjgqBWrY+\
NXU5jENWSwxMjX11QV1GeguV5oyRr4pYuivL+Lshdza6ompyGwRLTEf/hGhsdc4o5HdQ8xd86a/\
llgmLwuda8lRZdJ6O8EiEQu1eUyY0E6N1G5I/c0fEw/qh1uWPOavIt+WJX/\
gNwu81CBg7G11xCdui0Cp38qiZoP3scYwgmcKagsjzagLbcyrFcJum6LrAKMj8BB3+\
51gHgYSE5OrP8sCX8jwDgFv7pK2cCIBv0m1cc1V2g5yvNGpik6jCLh3zW8p9xh4DjCm5jpmVRbm+\
Ai/VvaSi7DY8VIE8rwHQ9yABmPuRIo4Wh4Ua7fVZmaE7eAOE/\
qFg4sCIUNQ3zu34A764h4f7zw8NtZJK5uz33bQHo2ZtvXNdQ5T8nX2iEBSm7mhLt3NxoFQg564jjwc\
p32/OMorAJ8KcAMfbGQlsHnCRJ+\
ym1tzpE16VP1S1uwJ6Heh5wFPGlH5cj2m3B05tyJ0oRNSJoJJYq2UmNR4SuL5ik2Z8kEedYqzz+\
2sOZMIfIwBd012Uw8wLzN4icfFeL/\
TBibAsiNlrSdjW9pLdokqh102yJIulSHqp6oUeL9KjaVSZtbqlIcyf57Dp7E/\
c32cFIg6q0p5L1ZwCgF1R92AC5l0pyzWqmmikV98h2Ut5eDOFN68MlzSzLweW1frp/\
imbYzHVf0WgM7a2LTFlZUSlsQ2Mgfsi1SBegq6hdWIEtqq5nWzutsxdWn5qY0u9uwAM3Wzy62x0Wec\
3BizLth4Cly672U7UuOT4RFs/8HbY/MTNmvqqPIxSLngoUvZhRQRoLesnluU8wTR/\
EtEPW2GrbZSwg2t9r5U7cq1HaVsyQjpj4YmhzbbVoz0xGrgbJqQHWKBzkBTz9wP0hsY2XRCnVxAXiY\
rXl+BD9Jk96ts6qG7rCYqE0ZnaCW3p/EdKrmCNk/R54+uns/s5+\
At3gmWuazMuUlU0PcHhSjVBH01nHkK/udCJLwEDmgAxMWAVNPt14WYyWmXlweJsYWF/JOZnK/\
sS3qvjJ5fCOoLU/EXy0ehgqx/CmuL6Pz9Qh6zwr64bP8nSn6hboEAP362X81KZ2fp4FoF/\
7oQ5ikkezHpKfcsLNS/K8RfTplXxS0rxX8v54//VoAvRfILkt2/\
Fu6DuJJG2H9mK2QZ3X1Y8rjKVdsLU11Qbnfn/Mae/TiO1RZHs2bny+6Vwq5Sfi8TnHKi+1+K4NOh"]\
]], "DefinitionNotebookFramework" -> "DefinitionNotebookClient", 
  "RuntimeConfiguration" -> {
   "Contexts" -> {"PacletResource`", "PacletResource`DefinitionNotebook`"}, 
    "DefaultContentMethod" -> "Tagged", "HintPods" -> True, "LoadingMethod" -> 
    "Paclet", "PacletName" -> "PacletResource", "SourceID" -> 
    "8f99c2b0ee5e9f24d331c183562e905b4bbb1a6f"}, "ToolsOpen" -> True, 
  "StatusMessage" -> "", "SubmissionReviewData" -> {"Review" -> False}, 
  "AutoUpdate" -> True, 
  "PacletBuildData" -> {
   "LastBuiltArchive" -> 
    "/Users/faizonzaman/Developer/wolfram/ImageFilterAnalysis/build/\
FaizonZaman__ImageFilterAnalysis-0.9.0.paclet", "FileHashes" -> 
    ByteArray[CompressedData["
1:eJwBTAKz/SFib1JiAQAAAD8CAAA4Qzp4nHMU0Q1WcslPLs1NzStJLMnMz9N3
zUvPySzO0PfMS0mt0I830EtOK3Zk0g1mC84vLUpOLWbxy89LBXJDEovSU0t8
nlhGnfbj4q3VDVbDZ05xajpIqjjeGI9Zs/LF8y5M/ZykG6xBjFl66al5eEx7
q1EnoPv0iblusDt204JS01KLUvOSUwMS01OL9YMrc5Pyc4r1PXOBXLfMnJLU
Ise8xJzK4sxil8SSRL28JCTLfEKjDJ8mxTD4Iew7tX6LinrBhALdYDuS7Asq
zUOyEs2ar10pfKHXr9cirLG4OPFuxhTGet1ga5KsCUktLoFYUYxmR/m9BV4n
Y1YnIezoZ2+36trtqKIb7EySHSouqWmJpTkluO2aF3Bz9hP7HSYIu+5axN3X
C1Vl1g3Wwm5XcGpiUXIGJOpNIQkyFU+0L1r8rPLtuhZGUszDl8BTeFuYlKO3
G+sGaxJpXnEmHuOK7XQMf+d5W+kG6xJjXFpmak5KsV55Dh4jdSd++33fpJJP
N9iEGCMzQbRvakliCihV4zVZIua/4E3LDGBs6RFjMjyTG+Exsz7j69THsnVW
RJpZXpRZkqqXk5+cjcfMi9aTnlzwa2fVDVbHYWZBak4OkSWaSmDC5rIIO2AG
0yZoGFHFWq6Eh6Rc4qRq3FGOaSDRZZusd2pRXmoOtlILNW59bJt923ZpHy5B
mIIQ4Q1ITM5JLfHMS8tH05VtWWaoa1zBhtCFEBGE6PJNzMtMA+Z4/GnJ5/r3
lzLZCyUAdQFUHzyDGe4=
      "]]}},
CreateCellID->True,
DynamicEvaluationTimeout->60,
FrontEndVersion->"14.2 for Mac OS X ARM (64-bit) (March 16, 2025)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    StyleData[All, "Working"], WindowToolbars -> {}, DockedCells -> {
      Cell[
       BoxData[
        TemplateBox[{}, "MainGridTemplate"]], "DockedCell", 
       CellMargins -> {{-10, -10}, {-8, -8}}, CellFrame -> 0, Background -> 
       RGBColor[0.33333, 0.33333, 0.33333], CellTags -> {"MainDockedCell"}, 
       CacheGraphics -> False], 
      Cell[
       BoxData[
        TemplateBox[{}, "ToolsGridTemplate"]], "DockedCell", 
       TaggingRules -> {"Tools" -> True}, CellTags -> {"ToolbarDockedCell"}, 
       CellFrameMargins -> {{0, 0}, {2, 2}}, CellFrame -> {{0, 0}, {1, 0}}, 
       CacheGraphics -> False, CellOpen -> Dynamic[
         CurrentValue[
          EvaluationNotebook[], {TaggingRules, "ToolsOpen"}, True]]]}, 
    PrivateNotebookOptions -> {
     "FileOutlineCache" -> False, "SafeFileOpen" -> "IgnoreCache"}, 
    CellLabelAutoDelete -> False, 
    CodeAssistOptions -> {"AutoDetectHyperlinks" -> False}, 
    AutoQuoteCharacters -> {}, PasteAutoQuoteCharacters -> {}], 
   Cell[
    StyleData["MoreInfoText", StyleDefinitions -> StyleData["Text"]], 
    FontSize -> 14, FontColor -> GrayLevel[0.25]], 
   Cell[
    StyleData["ErrorText", StyleDefinitions -> StyleData["Text"]], 
    ShowCellBracket -> False, CellMargins -> {{66, Inherited}, {10, 10}}, 
    CellElementSpacings -> {"CellMinHeight" -> 0, "ClosedCellHeight" -> 0}, 
    FontWeight -> Bold, FontColor -> RGBColor[1, 0, 0]], 
   Cell[
    StyleData["WarningText", StyleDefinitions -> StyleData["Text"]], 
    ShowCellBracket -> False, CellMargins -> {{66, 35}, {0, 0}}, FontSize -> 
    14, GridBoxOptions -> {BaseStyle -> {}}], 
   Cell[
    StyleData["MoreInfoOpenerIconTemplate"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (PaneSelectorBox[{False -> GraphicsBox[{
            Thickness[0.090909], 
            StyleBox[{
              
              JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4oSnF5RuVyo58OlumvteXcIBxj//Pfjx0tky
Dp8u+SYJzFB0kGQJ49MtUnBYIKV/V4UNRis5GHKskYl6AlOnDNUHM0cFaq4I
nD/niMKGogx+OB+oO8X6Phtcf/+hrxox/Qxw80HKftZ9sYfZ/7BKZJ37w1f2
MPfB+DD3w/h+SQIRlluE4foh9vDBzYfQHHD7izMmvq2xZ4K7r9CW6/rigr/2
MPfD+DD/wfgw/8P0w8IHZj4s/GD2w8IX5j708AcA2Xetpg==
               "], CurveClosed -> {1}]}, {
              JoinForm[{"Miter", 3.25}], 
              Thickness[0.045818], 
              RGBColor[0.62744, 0.62744, 0.62744, 1.]}, StripOnInput -> 
             False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1,
                 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBGIQ3b48/JRRi4jD3qBpin2m8g5n6j32194VhvNZnvdo
vPUVdoh2sntxM0feQfiT4/m0q0IOQNnSwtvyDmxCIvbHYoQcMhnyG1lUFRyk
eR/oTlAAym/iKVyTjeAf2aiXt/gggt+odqhtubgiXP+k00CLYxXh5mdrf5t+
d7Ii3P5LDPeYOE8pwt33vfTBHMGnig4w98P4j5fOPqJgIArn539oPRlyUBSu
/9OGgOxZ5mJw88sKgS5aKwa3XzOm/9DXF2Jw98H4MPfD+DD/wfTD/A8zHxY+
MPth4QdzHyx80cMfAIsMpwk=
                "], CompressedData["
1:eJxTTMoPSmViYGCQB2IQXTFnkfJOGwmHsNp125Lq+R1g/G8aMf2HvvI4KP39
VvrgjgAGH6b+c19wicp0IQeBKrPVduICcL6EWjDr4ksCqPLTBeH8211/U7+n
CMH5S+7v45tjLAznX773gHvySwS/qdhtyrc2ETj/04aA7FnfReH8RxHi2y8e
EIPzNUHOzRCH8x8vnX1E4QOCP+/98mPe5RJw/o9goAoWSTj/6vMs7W/TJR0O
X9ZOlVwk4PB2no3OlVsI/jKgcRs+STlonhY4vstCzCFoh1zr64syDkBXssXP
EHO4WvFSzbADwa9JNAo1yJKA82H+gfFh/oXxA29JA7Ug+GY2e4OmJQrB+f83
VX/aMEEQzrerjFhhelYAzofFB3r8AgApYdcE
                "]}]}, {
              FaceForm[
               RGBColor[0.62744, 0.62744, 0.62744, 1.]]}, StripOnInput -> 
             False]}, ImageSize -> {11., 11.}, 
           PlotRange -> {{0., 11.}, {0., 11.}}, AspectRatio -> Automatic], 
         True -> GraphicsBox[{
            Thickness[0.090909], 
            StyleBox[{
              
              JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4oSnF5RuVyo58OlumvteXcIBxj//Pfjx0tky
Dp8u+SYJzFB0kGQJ49MtUnBYIKV/V4UNRis5GHKskYl6AlOnDNUHM0cFaq4I
nD/niMKGogx+OB+oO8X6Phtcf/+hrxox/Qxw80HKftZ9sYfZ/7BKZJ37w1f2
MPfB+DD3w/h+SQIRlluE4foh9vDBzYfQHHD7izMmvq2xZ4K7r9CW6/rigr/2
MPfD+DD/wfgw/8P0w8IHZj4s/GD2w8IX5j708AcA2Xetpg==
               "], CurveClosed -> {1}]}, {
              JoinForm[{"Miter", 3.25}], 
              Thickness[0.045818], 
              RGBColor[0.5, 0.5, 0.5, 1.]}, StripOnInput -> False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4oSnF5RuVyo58OlumvteXcIBxj//Pfjx0tky
Dp8u+SYJzFB0kGQJ49MtUnBYIKV/V4UNRis5GHKskYl6AlOnDNUHM0cFaq4I
nD/niMKGogx+OB+oO8X6Phtcf/+hrxox/Qxw80HKftZ9sYfZ/7BKZJ37w1f2
MPfB+DD3w/h+SQIRlluE4foh9vDBzYfQHHD7izMmvq2xZ4K7r9CW6/rigr/2
MPfD+DD/wfgw/8P0w8IHZj4s/GD2w8IX5j708AcA2Xetpg==
               "]]}, {
              FaceForm[
               RGBColor[0.5, 0.5, 0.5, 1.]]}, StripOnInput -> False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1,
                 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBGIQ3b48/JRRi4jD3qBpin2m8g5n6j32194VhvNZnvdo
vPUVdoh2sntxM0feQfiT4/m0q0IOQNnSwtvyDmxCIvbHYoQcMhnyG1lUFRyk
eR/oTlAAym/iKVyTjeAf2aiXt/gggt+odqhtubgiXP+k00CLYxXh5mdrf5t+
d7Ii3P5LDPeYOE8pwt33vfTBHMGnig4w98P4j5fOPqJgIArn539oPRlyUBSu
/9OGgOxZ5mJw88sKgS5aKwa3XzOm/9DXF2Jw98H4MPfD+DD/wfTD/A8zHxY+
MPth4QdzHyx80cMfAIsMpwk=
                "], CompressedData["
1:eJxTTMoPSmViYGCQB2IQXTFnkfJOGwmHsNp125Lq+R1g/G8aMf2HvvI4KP39
VvrgjgAGH6b+c19wicp0IQeBKrPVduICcL6EWjDr4ksCqPLTBeH8211/U7+n
CMH5S+7v45tjLAznX773gHvySwS/qdhtyrc2ETj/04aA7FnfReH8RxHi2y8e
EIPzNUHOzRCH8x8vnX1E4QOCP+/98mPe5RJw/o9goAoWSTj/6vMs7W/TJR0O
X9ZOlVwk4PB2no3OlVsI/jKgcRs+STlonhY4vstCzCFoh1zr64syDkBXssXP
EHO4WvFSzbADwa9JNAo1yJKA82H+gfFh/oXxA29JA7Ug+GY2e4OmJQrB+f83
VX/aMEEQzrerjFhhelYAzofFB3r8AgApYdcE
                "]}]}, {
              FaceForm[
               RGBColor[0.99998, 0.99998, 0.99998, 1.]]}, StripOnInput -> 
             False]}, ImageSize -> {11., 11.}, 
           PlotRange -> {{0., 11.}, {0., 11.}}, AspectRatio -> Automatic]}, 
        Dynamic[
         CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
        0]& )}], 
   Cell[
    StyleData["MoreInfoOpenerButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (AdjustmentBox[
        DynamicModuleBox[{
         RSNB`mPosRegion$$, RSNB`attachPos$$, RSNB`offsetPos$$, 
          RSNB`horizontalRegion$$, RSNB`verticalRegion$$, 
          RSNB`chooseAttachLocation$$}, 
         TagBox[
          TemplateBox[{
            TemplateBox[{}, "MoreInfoOpenerIconTemplate"], 
            "\"Click for more information\""}, "PrettyTooltipTemplate"], 
          EventHandlerTag[{"MouseDown" :> AttachCell[
              ParentBox[
               EvaluationBox[]], #2, 
              RSNB`chooseAttachLocation$$[], 
              RemovalConditions -> {"EvaluatorQuit", "MouseClickOutside"}], 
            Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
            True}]], 
         DynamicModuleValues :> {{DownValues[RSNB`mPosRegion$$] = {HoldPattern[
                RSNB`mPosRegion$$[]] :> RSNB`mPosRegion$$[
                Ceiling[MousePosition["WindowScaled"] 3]], HoldPattern[
                RSNB`mPosRegion$$[
                 Pattern[RSNB`reg, {
                   Blank[Integer], 
                   Blank[Integer]}]]] :> RSNB`reg, HoldPattern[
                RSNB`mPosRegion$$[
                 BlankNullSequence[]]] :> None}}, {
           DownValues[RSNB`attachPos$$] = {HoldPattern[
                RSNB`attachPos$$[{
                  Pattern[RSNB`h$, 
                   Blank[Integer]], 
                  Pattern[RSNB`v$, 
                   Blank[Integer]]}]] :> {
                RSNB`horizontalRegion$$[RSNB`h$], 
                RSNB`verticalRegion$$[RSNB`v$]}}}, {
           DownValues[RSNB`offsetPos$$] = {HoldPattern[
                RSNB`offsetPos$$[{
                  Pattern[RSNB`h$, 
                   Blank[Integer]], 
                  Pattern[RSNB`v$, 
                   Blank[Integer]]}]] :> {
                RSNB`horizontalRegion$$[4 - RSNB`h$], 
                RSNB`verticalRegion$$[4 - RSNB`v$]}}}, {
           DownValues[RSNB`horizontalRegion$$] = {HoldPattern[
                RSNB`horizontalRegion$$[1]] :> Left, HoldPattern[
                RSNB`horizontalRegion$$[2]] :> Center, HoldPattern[
                RSNB`horizontalRegion$$[3]] :> Right}}, {
           DownValues[RSNB`verticalRegion$$] = {HoldPattern[
                RSNB`verticalRegion$$[1]] :> Top, HoldPattern[
                RSNB`verticalRegion$$[2]] :> Top, HoldPattern[
                RSNB`verticalRegion$$[3]] :> Top}}, {
           DownValues[RSNB`chooseAttachLocation$$] = {HoldPattern[
                RSNB`chooseAttachLocation$$[]] :> 
              With[{RSNB`p$ = RSNB`mPosRegion$$[]}, 
                Apply[Sequence, {
                  RSNB`offsetPos$$[RSNB`p$], {-30, 30}, 
                  RSNB`attachPos$$[RSNB`p$]}]]}}}], BoxBaselineShift -> -0.5, 
        BoxMargins -> 0.2]& )}], 
   Cell[
    StyleData["InlineMoreInfoOpenerButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (AdjustmentBox[
        DynamicModuleBox[{
         RSNB`mPosRegion$$, RSNB`attachPos$$, RSNB`offsetPos$$, 
          RSNB`horizontalRegion$$, RSNB`verticalRegion$$, 
          RSNB`chooseAttachLocation$$}, 
         TagBox[
          TemplateBox[{
            TemplateBox[{}, "MoreInfoOpenerIconTemplate"], #4}, 
           "PrettyTooltipTemplate"], 
          EventHandlerTag[{"MouseDown" :> AttachCell[
              ParentBox[
               EvaluationBox[]], #2, 
              RSNB`chooseAttachLocation$$[], 
              RemovalConditions -> {"EvaluatorQuit", "MouseClickOutside"}], 
            Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
            True}]], 
         DynamicModuleValues :> {{DownValues[RSNB`mPosRegion$$] = {HoldPattern[
                RSNB`mPosRegion$$[]] :> RSNB`mPosRegion$$[
                Ceiling[MousePosition["WindowScaled"] 3]], HoldPattern[
                RSNB`mPosRegion$$[
                 Pattern[RSNB`reg, {
                   Blank[Integer], 
                   Blank[Integer]}]]] :> RSNB`reg, HoldPattern[
                RSNB`mPosRegion$$[
                 BlankNullSequence[]]] :> None}}, {
           DownValues[RSNB`attachPos$$] = {HoldPattern[
                RSNB`attachPos$$[{
                  Pattern[RSNB`h$, 
                   Blank[Integer]], 
                  Pattern[RSNB`v$, 
                   Blank[Integer]]}]] :> {
                RSNB`horizontalRegion$$[RSNB`h$], 
                RSNB`verticalRegion$$[RSNB`v$]}}}, {
           DownValues[RSNB`offsetPos$$] = {HoldPattern[
                RSNB`offsetPos$$[{
                  Pattern[RSNB`h$, 
                   Blank[Integer]], 
                  Pattern[RSNB`v$, 
                   Blank[Integer]]}]] :> {
                RSNB`horizontalRegion$$[4 - RSNB`h$], 
                RSNB`verticalRegion$$[4 - RSNB`v$]}}}, {
           DownValues[RSNB`horizontalRegion$$] = {HoldPattern[
                RSNB`horizontalRegion$$[1]] :> Left, HoldPattern[
                RSNB`horizontalRegion$$[2]] :> Center, HoldPattern[
                RSNB`horizontalRegion$$[3]] :> Right}}, {
           DownValues[RSNB`verticalRegion$$] = {HoldPattern[
                RSNB`verticalRegion$$[1]] :> Top, HoldPattern[
                RSNB`verticalRegion$$[2]] :> Top, HoldPattern[
                RSNB`verticalRegion$$[3]] :> Top}}, {
           DownValues[RSNB`chooseAttachLocation$$] = {HoldPattern[
                RSNB`chooseAttachLocation$$[]] :> 
              With[{RSNB`p$ = RSNB`mPosRegion$$[]}, 
                Apply[Sequence, {
                  RSNB`offsetPos$$[RSNB`p$], {-30, 30}, 
                  RSNB`attachPos$$[RSNB`p$]}]]}}}], BoxBaselineShift -> -0.5, 
        BoxMargins -> 0.2]& )}], 
   Cell[
    StyleData["ClickToCopyTemplate"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (PaneSelectorBox[{False -> TagBox[
           GridBox[{{#, 
              ButtonBox[
               GraphicsBox[{
                 GrayLevel[0.85], 
                 Thickness[
                  NCache[2/45, 0.044444]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 18.}, {
                   9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 18.}, {12., 
                   18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {16.5, 4.5}, {
                   16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {15.75, 17.25}, {
                   15.75, 5.25}, {6.75, 5.25}, {6.75, 17.25}, {8.25, 17.25}, {
                   8.25, 18.}}, {{9.75, 17.25}, {12.75, 17.25}, {12.75, 
                   16.5}, {9.75, 16.5}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                  0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 14.25}, {
                  14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{8.25, 12.}, {
                  14.25, 12.}, {14.25, 11.25}, {8.25, 11.25}}, {{8.25, 
                  9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25, 9.}}, {{8.25, 
                  7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 6.75}}}]}, 
                ImageSize -> 12], ButtonFunction :> Null, 
               Appearance -> {
                "Default" -> None, "Hover" -> None, "Pressed" -> None}, 
               Evaluator -> Automatic, Method -> "Preemptive"]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Center}}},
             AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], True -> 
         DynamicModuleBox[{RSNB`clickTime$$ = 0., RSNB`timeout$$ = 3.}, 
           TagBox[
            GridBox[{{#, 
               TagBox[
                ButtonBox[
                 DynamicBox[
                  ToBoxes[
                   Refresh[
                    If[AbsoluteTime[] - RSNB`clickTime$$ > RSNB`timeout$$, 
                    RawBoxes[
                    TemplateBox[{
                    PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[0.65], 
                    Thickness[
                    NCache[2/45, 0.044444]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12], True -> GraphicsBox[{
                    RGBColor[0.98824, 0.41961, 0.20392], 
                    Thickness[
                    NCache[2/45, 0.044444]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "\"Click to copy to the clipboard\""},
                     "PrettyTooltipTemplate"]], 
                    RawBoxes[
                    TemplateBox[{
                    GraphicsBox[{
                    RGBColor[0, 
                    NCache[2/3, 0.66667], 0], 
                    Thickness[
                    NCache[2/45, 0.044444]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12], "\"Copied\""}, 
                    "PrettyTooltipTemplate"]]], UpdateInterval -> 1, 
                    TrackedSymbols :> {RSNB`clickTime$$}], StandardForm], 
                  Evaluator -> "System"], 
                 ButtonFunction :> (RSNB`clickTime$$ = AbsoluteTime[]; 
                  CopyToClipboard[
                    BinaryDeserialize[
                    BaseDecode[#2], Defer]]), 
                 Appearance -> {
                  "Default" -> None, "Hover" -> None, "Pressed" -> None}, 
                 Method -> "Queued", Evaluator -> "System"], 
                MouseAppearanceTag["LinkHand"]]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], 
           DynamicModuleValues :> {}]}, 
        Dynamic[
         CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
        0]& )}], 
   Cell[
    StyleData["PrettyTooltipTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        TooltipBox[#, 
         FrameBox[
          
          StyleBox[#2, "Text", FontColor -> 
           RGBColor[0.53725, 0.53725, 0.53725], FontSize -> 12, FontWeight -> 
           "Plain", FontTracking -> "Plain", StripOnInput -> False], 
          Background -> RGBColor[0.96078, 0.96078, 0.96078], FrameStyle -> 
          RGBColor[0.89804, 0.89804, 0.89804], FrameMargins -> 8, 
          StripOnInput -> False], TooltipDelay -> 0.1, 
         TooltipStyle -> {Background -> None, CellFrame -> 0}], 
        Annotation[#, 
         Framed[
          Style[
          RSNB`$$tooltip, "Text", FontColor -> 
           RGBColor[0.53725, 0.53725, 0.53725], FontSize -> 12, FontWeight -> 
           "Plain", FontTracking -> "Plain"], Background -> 
          RGBColor[0.96078, 0.96078, 0.96078], FrameStyle -> 
          RGBColor[0.89804, 0.89804, 0.89804], FrameMargins -> 8], 
         "Tooltip"]& ]& )}], 
   Cell[
    StyleData["ToolsGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        TagBox[
         GridBox[{{
            FrameBox[
             ButtonBox[
              TemplateBox[{
                StyleBox[
                "\"Template Input\"", "Text", FontFamily -> "Source Sans Pro",
                  FontSize -> 11, StripOnInput -> False], 
                "\"Format selection automatically using appropriate \
documentation styles\""}, "PrettyTooltipTemplate"], ButtonFunction :> 
              With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    2790153672590285854; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = 
                    "Template Input"; 
                    DefinitionNotebookClient`TemplateInput[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    2790153672590285854]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
              Dynamic[
                FEPrivate`If[
                 CurrentValue[Enabled], 
                 FEPrivate`If[
                  CurrentValue["MouseOver"], {
                  FontColor -> RGBColor[1., 1., 1.], 
                   TaggingRules -> {"ButtonHovering" -> True}}, {
                  FontColor -> RGBColor[0.33333, 0.33333, 0.33333], 
                   TaggingRules -> {"ButtonHovering" -> False}}], {
                 FontColor -> RGBColor[0.83333, 0.83333, 0.83333], 
                  TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKtsSV+1ZfuH66ccf336FICAbKAIUB8oC
1QBVYjUEaD7EhAXNe96/+oI19IDiQFmIOXD3IBsC8QVQDcGIgJgDVI9mCDDE
IL7A5QY090D8BQlnuCHAkAcKAn1N0AQIAKoEqgfqQjYEGINAQWDoEWkIUCVQ
PVAXUC8kNQIZwJQAFATGApGGAFUC1QN1QQwBAsoNoYpL/lMvTKgSO1RJJ1RJ
sdTKO1TJxdQqT+CAwpKNDEAwIv4TV9oDAHfUai0=
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKptjVswo3764bd/ayUchCMgGigDFgbJA
NUCVWA0Bmg8xoTdr3dpJRzfPOomJgOJAWYg5cPcgGwLxBVANVu3ICGIOUD2a
IcAQg/gClxvQ3APxFySc4YYAQx4oCPQ1QRMgCKgSqB6oC9kQYAwCBYGhR6Qh
QJUg9R17gXohqRHIAKYEoCAwFog0BKgSqB6oC2IIEFBuCFVcQsUwoUrsUCWd
UCXFUivvUCUXU6s8gQMKSzYyADHFODGlPQBkA8lD
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJytlM0KgkAUhaU2Ldu17iWibcsgEIweQMmkjYEm0dv4Qr5LIKgIUV/dGiTM
JpwDyvXOmeO5d36m3sHZDSzLike8HPe0iCL3vB7zsQnjfRD622V49AM/mntD
kpPX84hvv6DDAZd++CaS53lZlnVdX98gJkNeU6Sqqg7bjHaL8CN+SqYoijRN
kyRZvUFMhjyjcJqWPkREIcsy27ZnbSDPqOi0ikgVcFqnNyE6qi4lgj2p4puH
Dz9SlxSlROg8AVX/VBDAhM+spggrSED3NEVgwmcWc2U3qpayCpoiMFV7rSf6
ixhxYrAnRlbHyD4xsmNNnR1Tp9jIfdK01PNm+xcdthV0bvs7VDZhuw==
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True]}, Background -> 
              RGBColor[0.94118, 0.94118, 0.94118], Method -> "Queued", 
              ImageSize -> {All, 20}, Evaluator -> Automatic], FrameStyle -> 
             Directive[
               RGBColor[0.94118, 0.94118, 0.94118], 
               AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
             False, StripOnInput -> False], 
            FrameBox[
             ButtonBox[
              TemplateBox[{
                StyleBox[
                "\"Literal Input\"", "Text", FontFamily -> "Source Sans Pro", 
                 FontSize -> 11, StripOnInput -> False], 
                "\"Format selection as literal Wolfram Language code\""}, 
               "PrettyTooltipTemplate"], ButtonFunction :> 
              With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    4138174468017918531; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Literal Input"; 
                    DefinitionNotebookClient`LiteralInput[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    4138174468017918531]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
              Dynamic[
                FEPrivate`If[
                 CurrentValue[Enabled], 
                 FEPrivate`If[
                  CurrentValue["MouseOver"], {
                  FontColor -> RGBColor[1., 1., 1.], 
                   TaggingRules -> {"ButtonHovering" -> True}}, {
                  FontColor -> RGBColor[0.33333, 0.33333, 0.33333], 
                   TaggingRules -> {"ButtonHovering" -> False}}], {
                 FontColor -> RGBColor[0.83333, 0.83333, 0.83333], 
                  TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKtsSV+1ZfuH66ccf336FICAbKAIUB8oC
1QBVYjUEaD7EhAXNe96/+oI19IDiQFmIOXD3IBsC8QVQDcGIgJgDVI9mCDDE
IL7A5QY090D8BQlnuCHAkAcKAn1N0AQIAKoEqgfqQjYEGINAQWDoEWkIUCVQ
PVAXUC8kNQIZwJQAFATGApGGAFUC1QN1QQwBAsoNoYpL/lMvTKgSO1RJJ1RJ
sdTKO1TJxdQqT+CAwpKNDEAwIv4TV9oDAHfUai0=
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKptjVswo3764bd/ayUchCMgGigDFgbJA
NUCVWA0Bmg8xoTdr3dpJRzfPOomJgOJAWYg5cPcgGwLxBVANVu3ICGIOUD2a
IcAQg/gClxvQ3APxFySc4YYAQx4oCPQ1QRMgCKgSqB6oC9kQYAwCBYGhR6Qh
QJUg9R17gXohqRHIAKYEoCAwFog0BKgSqB6oC2IIEFBuCFVcQsUwoUrsUCWd
UCXFUivvUCUXU6s8gQMKSzYyADHFODGlPQBkA8lD
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJytlM0KgkAUhaU2Ldu17iWibcsgEIweQMmkjYEm0dv4Qr5LIKgIUV/dGiTM
JpwDyvXOmeO5d36m3sHZDSzLike8HPe0iCL3vB7zsQnjfRD622V49AM/mntD
kpPX84hvv6DDAZd++CaS53lZlnVdX98gJkNeU6Sqqg7bjHaL8CN+SqYoijRN
kyRZvUFMhjyjcJqWPkREIcsy27ZnbSDPqOi0ikgVcFqnNyE6qi4lgj2p4puH
Dz9SlxSlROg8AVX/VBDAhM+spggrSED3NEVgwmcWc2U3qpayCpoiMFV7rSf6
ixhxYrAnRlbHyD4xsmNNnR1Tp9jIfdK01PNm+xcdthV0bvs7VDZhuw==
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True]}, Background -> 
              RGBColor[0.94118, 0.94118, 0.94118], Method -> "Queued", 
              ImageSize -> {All, 20}, Evaluator -> Automatic], FrameStyle -> 
             Directive[
               RGBColor[0.94118, 0.94118, 0.94118], 
               AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
             False, StripOnInput -> False], 
            FrameBox[
             ButtonBox[
              TemplateBox[{
                StyleBox[
                "\"Insert Delimiter\"", "Text", FontFamily -> 
                 "Source Sans Pro", FontSize -> 11, StripOnInput -> False], 
                "\"Insert example delimiter\""}, "PrettyTooltipTemplate"], 
              ButtonFunction :> 
              With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    1887802176716758884; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = 
                    "Insert Delimiter"; 
                    DefinitionNotebookClient`DelimiterInsert[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    1887802176716758884]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
              Dynamic[
                FEPrivate`If[
                 CurrentValue[Enabled], 
                 FEPrivate`If[
                  CurrentValue["MouseOver"], {
                  FontColor -> RGBColor[1., 1., 1.], 
                   TaggingRules -> {"ButtonHovering" -> True}}, {
                  FontColor -> RGBColor[0.33333, 0.33333, 0.33333], 
                   TaggingRules -> {"ButtonHovering" -> False}}], {
                 FontColor -> RGBColor[0.83333, 0.83333, 0.83333], 
                  TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKtsSV+1ZfuH66ccf336FICAbKAIUB8oC
1QBVYjUEaD7EhAXNe96/+oI19IDiQFmIOXD3IBsC8QVQDcGIgJgDVI9mCDDE
IL7A5QY090D8BQlnuCHAkAcKAn1N0AQIAKoEqgfqQjYEGINAQWDoEWkIUCVQ
PVAXUC8kNQIZwJQAFATGApGGAFUC1QN1QQwBAsoNoYpL/lMvTKgSO1RJJ1RJ
sdTKO1TJxdQqT+CAwpKNDEAwIv4TV9oDAHfUai0=
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKptjVswo3764bd/ayUchCMgGigDFgbJA
NUCVWA0Bmg8xoTdr3dpJRzfPOomJgOJAWYg5cPcgGwLxBVANVu3ICGIOUD2a
IcAQg/gClxvQ3APxFySc4YYAQx4oCPQ1QRMgCKgSqB6oC9kQYAwCBYGhR6Qh
QJUg9R17gXohqRHIAKYEoCAwFog0BKgSqB6oC2IIEFBuCFVcQsUwoUrsUCWd
UCXFUivvUCUXU6s8gQMKSzYyADHFODGlPQBkA8lD
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJytlM0KgkAUhaU2Ldu17iWibcsgEIweQMmkjYEm0dv4Qr5LIKgIUV/dGiTM
JpwDyvXOmeO5d36m3sHZDSzLike8HPe0iCL3vB7zsQnjfRD622V49AM/mntD
kpPX84hvv6DDAZd++CaS53lZlnVdX98gJkNeU6Sqqg7bjHaL8CN+SqYoijRN
kyRZvUFMhjyjcJqWPkREIcsy27ZnbSDPqOi0ikgVcFqnNyE6qi4lgj2p4puH
Dz9SlxSlROg8AVX/VBDAhM+spggrSED3NEVgwmcWc2U3qpayCpoiMFV7rSf6
ixhxYrAnRlbHyD4xsmNNnR1Tp9jIfdK01PNm+xcdthV0bvs7VDZhuw==
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True]}, Background -> 
              RGBColor[0.94118, 0.94118, 0.94118], Method -> "Queued", 
              ImageSize -> {All, 20}, Evaluator -> Automatic], FrameStyle -> 
             Directive[
               RGBColor[0.94118, 0.94118, 0.94118], 
               AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
             False, StripOnInput -> False], 
            ActionMenuBox[
             FrameBox[
              ButtonBox[
               TemplateBox[{
                 StyleBox[
                  
                  TemplateBox[{
                   "\"Tables\"", 
                    "\"\[ThinSpace]\[ThinSpace]\[ThinSpace]\
\[FilledDownTriangle]\""}, "RowDefault"], "Text", FontFamily -> 
                  "Source Sans Pro", FontSize -> 11, StripOnInput -> False], 
                 "\"Table functions\""}, "PrettyTooltipTemplate"], 
               ButtonFunction :> 
               With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                 Quiet[
                  
                  Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                   Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    3216557251994556740; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[Null]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    3216557251994556740]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                   Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
               Dynamic[
                 FEPrivate`If[
                  CurrentValue[Enabled], 
                  FEPrivate`If[
                   CurrentValue["MouseOver"], {
                   FontColor -> RGBColor[1., 1., 1.], 
                    TaggingRules -> {"ButtonHovering" -> True}}, {
                   FontColor -> RGBColor[0.33333, 0.33333, 0.33333], 
                    TaggingRules -> {"ButtonHovering" -> False}}], {
                  FontColor -> RGBColor[0.83333, 0.83333, 0.83333], 
                   TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                 "System"], Appearance -> {"Default" -> Image[CompressedData["

1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKtsSV+1ZfuH66ccf336FICAbKAIUB8oC
1QBVYjUEaD7EhAXNe96/+oI19IDiQFmIOXD3IBsC8QVQDcGIgJgDVI9mCDDE
IL7A5QY090D8BQlnuCHAkAcKAn1N0AQIAKoEqgfqQjYEGINAQWDoEWkIUCVQ
PVAXUC8kNQIZwJQAFATGApGGAFUC1QN1QQwBAsoNoYpL/lMvTKgSO1RJJ1RJ
sdTKO1TJxdQqT+CAwpKNDEAwIv4TV9oDAHfUai0=
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKptjVswo3764bd/ayUchCMgGigDFgbJA
NUCVWA0Bmg8xoTdr3dpJRzfPOomJgOJAWYg5cPcgGwLxBVANVu3ICGIOUD2a
IcAQg/gClxvQ3APxFySc4YYAQx4oCPQ1QRMgCKgSqB6oC9kQYAwCBYGhR6Qh
QJUg9R17gXohqRHIAKYEoCAwFog0BKgSqB6oC2IIEFBuCFVcQsUwoUrsUCWd
UCXFUivvUCUXU6s8gQMKSzYyADHFODGlPQBkA8lD
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJytlM0KgkAUhaU2Ldu17iWibcsgEIweQMmkjYEm0dv4Qr5LIKgIUV/dGiTM
JpwDyvXOmeO5d36m3sHZDSzLike8HPe0iCL3vB7zsQnjfRD622V49AM/mntD
kpPX84hvv6DDAZd++CaS53lZlnVdX98gJkNeU6Sqqg7bjHaL8CN+SqYoijRN
kyRZvUFMhjyjcJqWPkREIcsy27ZnbSDPqOi0ikgVcFqnNyE6qi4lgj2p4puH
Dz9SlxSlROg8AVX/VBDAhM+spggrSED3NEVgwmcWc2U3qpayCpoiMFV7rSf6
ixhxYrAnRlbHyD4xsmNNnR1Tp9jIfdK01PNm+xcdthV0bvs7VDZhuw==
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True]}, Background -> 
               RGBColor[0.94118, 0.94118, 0.94118], Method -> "Queued", 
               ImageSize -> {All, 20}, Evaluator -> Automatic], FrameStyle -> 
              Directive[
                RGBColor[0.94118, 0.94118, 0.94118], 
                AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
              False, StripOnInput -> False], {
             "\"Insert table with two columns\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    5800166344906378520; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Tables"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Insert table with two columns"; 
                    DefinitionNotebookClient`TableInsert[2]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    5800166344906378520]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Insert table with three columns\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    533841403879783297; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Tables"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Insert table with three columns"; 
                    DefinitionNotebookClient`TableInsert[3]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    533841403879783297]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Add a row to the selected table\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    4413051590217973467; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Tables"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Add a row to the selected table"; 
                    DefinitionNotebookClient`TableRowInsert[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    4413051590217973467]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Sort the selected table\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    9150037060110806081; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Tables"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Sort the selected table"; 
                    DefinitionNotebookClient`TableSort[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    9150037060110806081]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Merge selected tables\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    2347719643166780208; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Tables"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Merge selected tables"; 
                    DefinitionNotebookClient`TableMerge[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    2347719643166780208]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]]}, Appearance -> None, Method -> "Queued"], 
            ActionMenuBox[
             FrameBox[
              ButtonBox[
               StyleBox[
                
                TemplateBox[{
                 "\"Cells\"", 
                  "\"\[ThinSpace]\[ThinSpace]\[ThinSpace]\[FilledDownTriangle]\
\""}, "RowDefault"], "Text", FontFamily -> "Source Sans Pro", FontSize -> 11, 
                StripOnInput -> False], ButtonFunction :> 
               With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                 Quiet[
                  
                  Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                   Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    3216557251994556740; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[Null]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    3216557251994556740]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                   Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
               Dynamic[
                 FEPrivate`If[
                  CurrentValue[Enabled], 
                  FEPrivate`If[
                   CurrentValue["MouseOver"], {
                   FontColor -> RGBColor[1., 1., 1.], 
                    TaggingRules -> {"ButtonHovering" -> True}}, {
                   FontColor -> RGBColor[0.33333, 0.33333, 0.33333], 
                    TaggingRules -> {"ButtonHovering" -> False}}], {
                  FontColor -> RGBColor[0.83333, 0.83333, 0.83333], 
                   TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                 "System"], Appearance -> {"Default" -> Image[CompressedData["

1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKtsSV+1ZfuH66ccf336FICAbKAIUB8oC
1QBVYjUEaD7EhAXNe96/+oI19IDiQFmIOXD3IBsC8QVQDcGIgJgDVI9mCDDE
IL7A5QY090D8BQlnuCHAkAcKAn1N0AQIAKoEqgfqQjYEGINAQWDoEWkIUCVQ
PVAXUC8kNQIZwJQAFATGApGGAFUC1QN1QQwBAsoNoYpL/lMvTKgSO1RJJ1RJ
sdTKO1TJxdQqT+CAwpKNDEAwIv4TV9oDAHfUai0=
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKptjVswo3764bd/ayUchCMgGigDFgbJA
NUCVWA0Bmg8xoTdr3dpJRzfPOomJgOJAWYg5cPcgGwLxBVANVu3ICGIOUD2a
IcAQg/gClxvQ3APxFySc4YYAQx4oCPQ1QRMgCKgSqB6oC9kQYAwCBYGhR6Qh
QJUg9R17gXohqRHIAKYEoCAwFog0BKgSqB6oC2IIEFBuCFVcQsUwoUrsUCWd
UCXFUivvUCUXU6s8gQMKSzYyADHFODGlPQBkA8lD
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJytlM0KgkAUhaU2Ldu17iWibcsgEIweQMmkjYEm0dv4Qr5LIKgIUV/dGiTM
JpwDyvXOmeO5d36m3sHZDSzLike8HPe0iCL3vB7zsQnjfRD622V49AM/mntD
kpPX84hvv6DDAZd++CaS53lZlnVdX98gJkNeU6Sqqg7bjHaL8CN+SqYoijRN
kyRZvUFMhjyjcJqWPkREIcsy27ZnbSDPqOi0ikgVcFqnNyE6qi4lgj2p4puH
Dz9SlxSlROg8AVX/VBDAhM+spggrSED3NEVgwmcWc2U3qpayCpoiMFV7rSf6
ixhxYrAnRlbHyD4xsmNNnR1Tp9jIfdK01PNm+xcdthV0bvs7VDZhuw==
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True]}, Background -> 
               RGBColor[0.94118, 0.94118, 0.94118], Method -> "Queued", 
               ImageSize -> {All, 20}, Evaluator -> Automatic], FrameStyle -> 
              Directive[
                RGBColor[0.94118, 0.94118, 0.94118], 
                AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
              False, StripOnInput -> False], {
             "\"Mark/unmark selected cells as comments\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    3646530685697756512; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Cells"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Mark/unmark selected cells as comments"; 
                    DefinitionNotebookClient`CommentToggle[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    3646530685697756512]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Mark/unmark selected cells as excluded\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    1866935765212102190; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Cells"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Mark/unmark selected cells as excluded"; 
                    DefinitionNotebookClient`ExclusionToggle[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    1866935765212102190]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Insert comment\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    8817953515714839566; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Cells"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Insert comment"; 
                    DefinitionNotebookClient`CommentInsert[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    8817953515714839566]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]]}, Appearance -> None, Method -> "Queued"], 
            ActionMenuBox[
             FrameBox[
              ButtonBox[
               StyleBox[
                
                TemplateBox[{
                 "\"Documentation Tools\"", 
                  "\"\[ThinSpace]\[ThinSpace]\[ThinSpace]\[FilledDownTriangle]\
\""}, "RowDefault"], "Text", FontFamily -> "Source Sans Pro", FontSize -> 11, 
                StripOnInput -> False], ButtonFunction :> 
               With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                 Quiet[
                  
                  Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                   Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    3216557251994556740; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[Null]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    3216557251994556740]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                   Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
               Dynamic[
                 FEPrivate`If[
                  CurrentValue[Enabled], 
                  FEPrivate`If[
                   CurrentValue["MouseOver"], {
                   FontColor -> RGBColor[1., 1., 1.], 
                    TaggingRules -> {"ButtonHovering" -> True}}, {
                   FontColor -> RGBColor[0.33333, 0.33333, 0.33333], 
                    TaggingRules -> {"ButtonHovering" -> False}}], {
                  FontColor -> RGBColor[0.83333, 0.83333, 0.83333], 
                   TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                 "System"], Appearance -> {"Default" -> Image[CompressedData["

1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKtsSV+1ZfuH66ccf336FICAbKAIUB8oC
1QBVYjUEaD7EhAXNe96/+oI19IDiQFmIOXD3IBsC8QVQDcGIgJgDVI9mCDDE
IL7A5QY090D8BQlnuCHAkAcKAn1N0AQIAKoEqgfqQjYEGINAQWDoEWkIUCVQ
PVAXUC8kNQIZwJQAFATGApGGAFUC1QN1QQwBAsoNoYpL/lMvTKgSO1RJJ1RJ
sdTKO1TJxdQqT+CAwpKNDEAwIv4TV9oDAHfUai0=
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKptjVswo3764bd/ayUchCMgGigDFgbJA
NUCVWA0Bmg8xoTdr3dpJRzfPOomJgOJAWYg5cPcgGwLxBVANVu3ICGIOUD2a
IcAQg/gClxvQ3APxFySc4YYAQx4oCPQ1QRMgCKgSqB6oC9kQYAwCBYGhR6Qh
QJUg9R17gXohqRHIAKYEoCAwFog0BKgSqB6oC2IIEFBuCFVcQsUwoUrsUCWd
UCXFUivvUCUXU6s8gQMKSzYyADHFODGlPQBkA8lD
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJytlM0KgkAUhaU2Ldu17iWibcsgEIweQMmkjYEm0dv4Qr5LIKgIUV/dGiTM
JpwDyvXOmeO5d36m3sHZDSzLike8HPe0iCL3vB7zsQnjfRD622V49AM/mntD
kpPX84hvv6DDAZd++CaS53lZlnVdX98gJkNeU6Sqqg7bjHaL8CN+SqYoijRN
kyRZvUFMhjyjcJqWPkREIcsy27ZnbSDPqOi0ikgVcFqnNyE6qi4lgj2p4puH
Dz9SlxSlROg8AVX/VBDAhM+spggrSED3NEVgwmcWc2U3qpayCpoiMFV7rSf6
ixhxYrAnRlbHyD4xsmNNnR1Tp9jIfdK01PNm+xcdthV0bvs7VDZhuw==
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True]}, Background -> 
               RGBColor[0.94118, 0.94118, 0.94118], Method -> "Queued", 
               ImageSize -> {All, 20}, Evaluator -> Automatic], FrameStyle -> 
              Directive[
                RGBColor[0.94118, 0.94118, 0.94118], 
                AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
              False, StripOnInput -> False], {
             "\"Open Palette\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    1266981032716546660; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = 
                    "DocumentationTools"; 
                    DefinitionNotebookClient`$ClickedAction = "Open Palette"; 
                    PacletResource`DefinitionNotebook`OpenDocumentationTools[
                    ButtonNotebook[]]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    1266981032716546660]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"New Function Page\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    7312678540702684447; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = 
                    "DocumentationTools"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "New Function Page"; 
                    PacletResource`DefinitionNotebook`NewFunctionPage[
                    ButtonNotebook[]]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    7312678540702684447]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"New Guide Page\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    8084030535806498779; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = 
                    "DocumentationTools"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "New Guide Page"; 
                    PacletResource`DefinitionNotebook`NewGuidePage[
                    ButtonNotebook[]]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    8084030535806498779]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"New Tech Note\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    2445183906026021612; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = 
                    "DocumentationTools"; 
                    DefinitionNotebookClient`$ClickedAction = "New Tech Note"; 
                    PacletResource`DefinitionNotebook`NewTechNote[
                    ButtonNotebook[]]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    2445183906026021612]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]]}, Appearance -> None, Method -> "Queued"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Center}}}, 
          AutoDelete -> False, 
          GridBoxBackground -> {"Columns" -> {{None}}, "Rows" -> {
              RGBColor[0.94118, 0.94118, 0.94118]}}, 
          GridBoxFrame -> {
           "Columns" -> False, 
            "RowsIndexed" -> {1 -> RGBColor[0.94118, 0.94118, 0.94118]}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {
           "Columns" -> {5, {0.5}, 5}, "Rows" -> {{Automatic}}}, FrameStyle -> 
          GrayLevel[0.75]], "Grid"], ButtonBoxOptions -> {Enabled -> Dynamic[
            Not[
             TrueQ[DefinitionNotebookClient`$ButtonsDisabled]], 
            TrackedSymbols :> {DefinitionNotebookClient`$ButtonsDisabled}]}, 
        StripOnInput -> False]& )}], 
   Cell[
    StyleData["MainGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        TagBox[
         GridBox[{{
            TagBox[
             GridBox[{{
                GraphicsBox[{
                  Thickness[0.0025], {
                   FaceForm[{
                    RGBColor[0.96078, 0.50588, 0.19608], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{205., 22.66}, {205., 212.11}, {246.02, 235.8}, {
                    369.07, 306.84}, {369.07, 117.39}, {205., 22.66}}, {{
                    30.929, 306.84}, {153.98, 235.8}, {195., 212.11}, {195., 
                    22.66}, {30.929, 117.39}, {30.929, 306.84}}, {{200., 
                    410.23}, {364.07, 315.5}, {241.02, 244.46}, {200., 
                    220.77}, {158.98, 244.46}, {35.929, 315.5}, {200., 
                    410.23}}, CompressedData["
1:eJxTTMoPSmViYGCQAWIQ3fo6cIdcZ7nDwyqRde5/ix0YQCAgE8J3rXJIAwG5
TIc3QGWtwVUOs2YCwcMMOB+sfkMGXP3z3ys/Xso1h5uXL9R84NRDU4friwts
ud4XQ+TfmjgU2nJdX3wFwQebswONvyAGzgcpL9CNgZu3BGjc9cPRcPuqgdY9
7IqGu+dzX3CJSrgyxJ4TGQ6m7y1c3YuUHEDKqp5kOMi8fmQmxaAEUc+QCeeD
/SWN4Pcf+qoRY54J1w8LH5j5sPCD2R8E1P56YTncfWD5jeVw98P4MP+h8IH+
h/Fh4QMzDxZ+6PEFAOibv7E=
                    "]}]}, {
                   FaceForm[{
                    RGBColor[0.55294, 0.67451, 0.81176], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{43., 198.67}, {107.71, 161.31}, {107.71, 
                    86.587}, {43., 123.95}, {43., 198.67}}}]}, {
                   FaceForm[{
                    RGBColor[0.31373, 0.4549, 0.61176], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{182.78, 198.67}, {182.78, 123.95}, {118.06, 
                    86.587}, {118.06, 161.31}, {182.78, 198.67}}}]}, {
                   FaceForm[{
                    RGBColor[0.78039, 0.86275, 0.94902], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{112.89, 245.}, {177.6, 207.64}, {112.89, 
                    170.27}, {48.174, 207.64}, {112.89, 245.}}}]}, {
                   FaceForm[{
                    RGBColor[0.6902, 0.58824, 0.81176], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{130.03, 350.12}, {194.8, 312.72}, {194.8, 
                    237.93}, {130.03, 275.32}, {130.03, 350.12}}}]}, {
                   FaceForm[{
                    RGBColor[0.46275, 0.36078, 0.61176], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{269.93, 350.12}, {269.93, 275.32}, {205.16, 
                    237.93}, {205.16, 312.72}, {269.93, 350.12}}}]}, {
                   FaceForm[{
                    RGBColor[0.88627, 0.80392, 0.95294], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{199.98, 396.48}, {264.75, 359.09}, {199.98, 
                    321.69}, {135.21, 359.09}, {199.98, 396.48}}}]}, {
                   FaceForm[{
                    RGBColor[0.66275, 0.80392, 0.56863], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{217.61, 199.14}, {281.9, 162.02}, {281.9, 
                    87.791}, {217.61, 124.91}, {217.61, 199.14}}}]}, {
                   FaceForm[{
                    RGBColor[0.43137, 0.60392, 0.3451], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{356.47, 199.14}, {356.47, 124.91}, {292.18, 
                    87.791}, {292.18, 162.02}, {356.47, 199.14}}}]}, {
                   FaceForm[{
                    RGBColor[0.8549, 0.9451, 0.8], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{287.04, 245.16}, {351.33, 208.04}, {287.04, 
                    170.93}, {222.75, 208.04}, {287.04, 245.16}}}]}, {
                   FaceForm[{
                    RGBColor[0.66275, 0.80392, 0.56863], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    356.47, 215.77}, {296.28, 250.59}, {356.47, 285.27}, {
                    356.47, 215.77}}}]}, {
                   FaceForm[{
                    RGBColor[0.66275, 0.80392, 0.56863], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    217.61, 114.06}, {277.79, 79.24}, {217.61, 44.566}, {
                    217.61, 114.06}}}]}, {
                   FaceForm[{
                    RGBColor[0.55294, 0.67451, 0.81176], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    122.17, 78.363}, {182.42, 113.07}, {182.36, 43.614}, {
                    122.17, 78.363}}}]}, {
                   FaceForm[{
                    RGBColor[0.55294, 0.67451, 0.81176], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    103.52, 249.47}, {43.272, 214.76}, {43.335, 284.22}, {
                    103.52, 249.47}}}]}, {
                   FaceForm[{
                    RGBColor[0.6902, 0.58824, 0.81176], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    120.87, 350.62}, {120.8, 281.08}, {60.68, 315.87}, {
                    120.87, 350.62}}}]}, {
                   FaceForm[{
                    RGBColor[0.6902, 0.58824, 0.81176], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    278.37, 281.22}, {278.44, 350.75}, {338.56, 315.96}, {
                    278.37, 281.22}}}]}}, {
                 ImageSize -> {Automatic, 32}, 
                  ImagePadding -> {{5, 0}, {0, 0}}, BaselinePosition -> 
                  Scaled[0.25], ImageSize -> 50, 
                  ImageSize -> {Automatic, 35}}], 
                StyleBox[
                 TagBox[
                  GridBox[{{
                    StyleBox[
                    "\"Paclet Resource\"", FontFamily -> "Source Sans Pro", 
                    FontWeight -> "SemiBold", StripOnInput -> False], 
                    StyleBox[
                    TagBox[
                    GridBox[{{"\"DEFINITION NOTEBOOK\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]UNDER DEVELOPMENT\[VeryThinSpace]\
\[VeryThinSpace])\"", FontSize -> 10, FontColor -> GrayLevel[0.5], 
                    FontTracking -> "Plain", FontSlant -> "Plain", 
                    FontVariations -> {"CapsType" -> "Normal"}, 
                    PrivateFontOptions -> {"OperatorSubstitution" -> False}, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"], 
                    FontFamily -> "Source Sans Pro", FontTracking -> 
                    "SemiCondensed", 
                    FontVariations -> {"CapsType" -> "AllSmallCaps"}, 
                    StripOnInput -> False]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "ColumnsIndexed" -> {
                    2 -> RGBColor[0.33333, 0.33333, 0.33333]}, 
                    "Rows" -> {{None}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                  "Grid"], FontSize -> 24, FontColor -> 
                 RGBColor[0.33333, 0.33333, 0.33333], StripOnInput -> 
                 False]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],
             "\[SpanFromLeft]", "\[SpanFromLeft]", "\[SpanFromLeft]", 
            "\[SpanFromLeft]", "\[SpanFromLeft]", "\[SpanFromLeft]", 
            "\[SpanFromLeft]", 
            TemplateBox[{
              StyleBox[
               
               TemplateBox[{
                "\"Paclet Repository\"", "\" \[RightGuillemet]  \""}, 
                "RowDefault"], "Text", FontColor -> 
               RGBColor[0.33333, 0.33333, 0.33333], StripOnInput -> False], 
              "https://resources.wolframcloud.com/PacletRepository"}, 
             "HyperlinkURL"]}, {
            ActionMenuBox[
             TemplateBox[{
               TemplateBox[{
                 TemplateBox[{"\"Open Sample\"", 
                   TemplateBox[{5}, "Spacer1"], "\"\[FilledDownTriangle]\""}, 
                  "RowDefault"], 
                 "\"View a completed sample definition notebook\""}, 
                "PrettyTooltipTemplate"], Annotation[
               DefinitionNotebookClient`$ButtonCodeID = 1898445052439169298; 
                Null, 
                DefinitionNotebookClient`ButtonCodeID[1898445052439169298]]& ,
                "\"View a completed sample definition notebook\"", True}, 
              "OrangeButtonTemplate"], {
             "\"Basic\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    3934291920460873112; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Open Sample"; 
                    DefinitionNotebookClient`$ClickedAction = "Basic"; 
                    PacletResource`DefinitionNotebook`ViewSamplePaclet[
                    "Basic"]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    3934291920460873112]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], "\"Advanced\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    7566953809767785517; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Open Sample"; 
                    DefinitionNotebookClient`$ClickedAction = "Advanced"; 
                    PacletResource`DefinitionNotebook`ViewSamplePaclet[
                    "Advanced"]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    7566953809767785517]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]]}, Appearance -> None, Method -> "Queued"], 
            
            TemplateBox[{
              
              TemplateBox[{
               "\"Guidelines\"", 
                "\"View general guidelines for authoring paclets\""}, 
               "PrettyTooltipTemplate"], Annotation[
              DefinitionNotebookClient`$ButtonCodeID = 5906117565281445171; (
                DefinitionNotebookClient`$ClickedButton = "Style Guidelines"; 
                DefinitionNotebookClient`ViewStyleGuidelines[
                  ButtonNotebook[]]), 
               DefinitionNotebookClient`ButtonCodeID[5906117565281445171]]& , 
              "\"View general guidelines for authoring paclets\"", False}, 
             "OrangeButtonTemplate"], 
            TemplateBox[{
              TemplateBox[{
                TagBox[
                 GridBox[{{"\"Tools\"", 
                    PaneSelectorBox[{False -> GraphicsBox[{
                    RGBColor[1., 1., 1.], 
                    AbsoluteThickness[1.], 
                    LineBox[{{0, 0}, {0, 10}, {10, 10}, {10, 0}, {0, 0}}], 
                    LineBox[{{5, 2.5}, {5, 7.5}}], 
                    LineBox[{{2.5, 5}, {7.5, 5}}]}, ImageSize -> 12, 
                    PlotRangePadding -> 1.5], True -> GraphicsBox[{
                    RGBColor[1., 1., 1.], 
                    AbsoluteThickness[1.], 
                    LineBox[{{0, 0}, {0, 10}, {10, 10}, {10, 0}, {0, 0}}], 
                    LineBox[{{2.5, 5}, {7.5, 5}}]}, ImageSize -> 12, 
                    PlotRangePadding -> 1.5]}, 
                    Dynamic[
                    CurrentValue[
                    EvaluationNotebook[], {TaggingRules, "ToolsOpen"}, True]],
                     BaselinePosition -> Scaled[0.05]]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0.35}}}], "Grid"], 
                "\"Toggle documentation toolbar\""}, "PrettyTooltipTemplate"],
               Annotation[
              DefinitionNotebookClient`$ButtonCodeID = 5074018684552945401; (
                DefinitionNotebookClient`$ClickedButton = "Tools"; 
                DefinitionNotebookClient`ToggleToolbar[
                  ButtonNotebook[]]), 
               DefinitionNotebookClient`ButtonCodeID[5074018684552945401]]& , 
              "\"Toggle documentation toolbar\"", False}, 
             "OrangeButtonTemplate"], 
            TagBox[
             
             GridBox[{{"\"\"", "\"\""}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
              False, GridBoxDividers -> {
               "ColumnsIndexed" -> {2 -> True}, "Rows" -> {{False}}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{2}}}, 
              GridBoxSpacings -> {"Columns" -> {{0.5}}}, FrameStyle -> 
              RGBColor[1., 1., 1.]], "Grid"], 
            ActionMenuBox[
             TemplateBox[{
               TemplateBox[{
                 TemplateBox[{"\"Check\"", 
                   TemplateBox[{5}, "Spacer1"], "\"\[FilledDownTriangle]\""}, 
                  "RowDefault"], "\"Check notebook for potential errors\""}, 
                "PrettyTooltipTemplate"], Annotation[
               DefinitionNotebookClient`$ButtonCodeID = 1898445052439169298; 
                Null, 
                DefinitionNotebookClient`ButtonCodeID[1898445052439169298]]& ,
                "\"Check notebook for potential errors\"", True}, 
              "OrangeButtonTemplate"], {
             "\"All\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    8900916902137752067; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Check"; 
                    DefinitionNotebookClient`$ClickedAction = "All"; 
                    PacletResource`DefinitionNotebook`CheckPacletNotebook[
                    ButtonNotebook[], All]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    8900916902137752067]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], Delimiter, "\"Definition Notebook\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    4301941258590251066; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Check"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Definition Notebook"; 
                    PacletResource`DefinitionNotebook`CheckPacletNotebook[
                    ButtonNotebook[], "DefinitionNotebook"]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    4301941258590251066]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], "\"Paclet Files\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    1312802444570235546; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Check"; 
                    DefinitionNotebookClient`$ClickedAction = "Paclet Files"; 
                    PacletResource`DefinitionNotebook`CheckPacletNotebook[
                    ButtonNotebook[], "PacletFiles"]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    1312802444570235546]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], "\"Documentation\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    6325522174070009817; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Check"; 
                    DefinitionNotebookClient`$ClickedAction = "Documentation"; 
                    PacletResource`DefinitionNotebook`CheckPacletNotebook[
                    ButtonNotebook[], "Documentation"]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    6325522174070009817]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]]}, Appearance -> None, Method -> "Queued"], 
            
            ActionMenuBox[
             TemplateBox[{
               TemplateBox[{"\"Build\"", 
                 TemplateBox[{5}, "Spacer1"], "\"\[FilledDownTriangle]\""}, 
                "RowDefault"], Annotation[
               DefinitionNotebookClient`$ButtonCodeID = 1898445052439169298; 
                Null, 
                DefinitionNotebookClient`ButtonCodeID[1898445052439169298]]& ,
                "\"\"", True}, "OrangeButtonTemplate"], {
             "\"Documentation\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    1579518736508902704; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Build"; 
                    DefinitionNotebookClient`$ClickedAction = "Documentation"; 
                    PacletResource`DefinitionNotebook`BuildPaclet[
                    ButtonNotebook[], "Documentation"]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    1579518736508902704]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], "\"All\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    5625167833203047250; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Build"; 
                    DefinitionNotebookClient`$ClickedAction = "All"; 
                    PacletResource`DefinitionNotebook`BuildPaclet[
                    ButtonNotebook[], All]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    5625167833203047250]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]]}, Appearance -> None, Method -> "Queued"], 
            
            ActionMenuBox[
             TemplateBox[{
               TemplateBox[{"\"Deploy\"", 
                 TemplateBox[{5}, "Spacer1"], "\"\[FilledDownTriangle]\""}, 
                "RowDefault"], Annotation[
               DefinitionNotebookClient`$ButtonCodeID = 1898445052439169298; 
                Null, 
                DefinitionNotebookClient`ButtonCodeID[1898445052439169298]]& ,
                "\"\"", True}, "OrangeButtonTemplate"], {
             "\"Locally on this computer\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    8714502586816766511; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Deploy"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Locally on this computer"; 
                    DefinitionNotebookClient`DisplayStripe[
                    ButtonNotebook[], 
                    DefinitionNotebookClient`DeployResource[
                    ButtonNotebook[], "Local"]]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    8714502586816766511]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], "\"Publicly in the cloud\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    5593410685219912767; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Deploy"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Publicly in the cloud"; 
                    DefinitionNotebookClient`DisplayStripe[
                    ButtonNotebook[], 
                    DefinitionNotebookClient`DeployResource[
                    ButtonNotebook[], "CloudPublic"]]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    5593410685219912767]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], "\"In this session only\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    2850084946728613817; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Deploy"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "In this session only"; 
                    DefinitionNotebookClient`DisplayStripe[
                    ButtonNotebook[], 
                    DefinitionNotebookClient`DeployResource[
                    ButtonNotebook[], "KernelSession"]]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    2850084946728613817]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]]}, Appearance -> None, Method -> "Queued"], 
            
            ItemBox[
             StyleBox[
              DynamicBox[
               ToBoxes[
                CurrentValue[
                 EvaluationNotebook[], {TaggingRules, "StatusMessage"}, ""], 
                StandardForm], Initialization :> (CurrentValue[
                  EvaluationNotebook[], {TaggingRules, "StatusMessage"}] = 
                "")], "Text", 
              GrayLevel[1], StripOnInput -> False], ItemSize -> Fit, 
             StripOnInput -> False], 
            DynamicBox[
             ToBoxes[
              If[
               CurrentValue[
                EvaluationNotebook[], {
                TaggingRules, "SubmissionReviewData", "Review"}, False], 
               RawBoxes[
                TemplateBox[{
                  TemplateBox[{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Thickness[0.06349], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBWIWIGZigIEX9mCqQd8Bwv+Bnc/A54CiHs5HV6/ngJUP
p2HmwdTp4FCHTvOhqYfZrw2lhdDk0fno6tHcD1PPwOSAnY+uns8BAE8cGz4=

                    "]]}, {
                    FaceForm[
                    RGBColor[1., 1., 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgB2IWIGZigAEJBwjNB6EblHHwX9ijqofxoeoYhKC0Bg4+
Hw4apk4Uap8aDr4QDhqqDu4uVRx8URw0TJ001D5lHHwJHDRUHYMclFbCwZfG
QUPVNSjgp+HmIWgAG/wcEg==
                    "]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
                    1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
                     1, 0}, {0, 1, 0}}}, CompressedData["
1:eJx10EEKgCAQhWGpFtEyEAYGggQj6RKeoSMErbuCR0/IWfTgCcPwy7fR9XrO
u3fOTXWGOp2zM+ZvH2170nv+e2sFH0ijt45/XxJp9NgRPHYAb63kHhu9tf2H
eU8aPfbS9kxawAvxnrSCx3c3XzbS6JX4RFrAS34B53ckaw==
                    "]]}, {
                    FaceForm[
                    RGBColor[1., 1., 1.]]}, StripOnInput -> False]}, 
                    ImageSize -> 15, PlotRange -> {{0., 15.75}, {0., 16.5}}, 
                    AspectRatio -> 1.15], "\"Submit Update\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "ColumnsIndexed" -> {2 -> 0.5}, 
                    "Rows" -> {{0}}}], "Grid"], 
                    "\"Submit changes to update your paclet submission\""}, 
                   "PrettyTooltipTemplate"], Annotation[
                  DefinitionNotebookClient`$ButtonCodeID = 
                    3196298050911436087; (
                    DefinitionNotebookClient`$ClickedButton = "SubmitUpdate"; 
                    With[{RSNB`nb = ButtonNotebook[]}, 
                    DefinitionNotebookClient`DisplayStripe[RSNB`nb, 
                    DefinitionNotebookClient`SubmitRepositoryUpdate[RSNB`nb], 
                    "ShowProgress" -> True]]), 
                   DefinitionNotebookClient`ButtonCodeID[
                   3196298050911436087]]& , 
                  "\"Submit changes to update your paclet submission\"", 
                  True}, "OrangeButtonTemplate"]], 
               RawBoxes[
                TemplateBox[{
                  TemplateBox[{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Thickness[0.06349], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBWIWIGZigIEX9mCqQd8Bwv+Bnc/A54CiHs5HV6/ngJUP
p2HmwdTp4FCHTvOhqYfZrw2lhdDk0fno6tHcD1PPwOSAnY+uns8BAE8cGz4=

                    "]]}, {
                    FaceForm[
                    RGBColor[1., 1., 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgB2IWIGZigAEJBwjNB6EblHHwX9ijqofxoeoYhKC0Bg4+
Hw4apk4Uap8aDr4QDhqqDu4uVRx8URw0TJ001D5lHHwJHDRUHYMclFbCwZfG
QUPVNSjgp+HmIWgAG/wcEg==
                    "]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
                    1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
                     1, 0}, {0, 1, 0}}}, CompressedData["
1:eJx10EEKgCAQhWGpFtEyEAYGggQj6RKeoSMErbuCR0/IWfTgCcPwy7fR9XrO
u3fOTXWGOp2zM+ZvH2170nv+e2sFH0ijt45/XxJp9NgRPHYAb63kHhu9tf2H
eU8aPfbS9kxawAvxnrSCx3c3XzbS6JX4RFrAS34B53ckaw==
                    "]]}, {
                    FaceForm[
                    RGBColor[1., 1., 1.]]}, StripOnInput -> False]}, 
                    ImageSize -> 15, PlotRange -> {{0., 15.75}, {0., 16.5}}, 
                    AspectRatio -> 1.15], "\"Submit to Repository\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "ColumnsIndexed" -> {2 -> 0.5}, 
                    "Rows" -> {{0}}}], "Grid"], 
                    "\"Submit your paclet to the Wolfram Language Paclet \
Repository\""}, "PrettyTooltipTemplate"], Annotation[
                  DefinitionNotebookClient`$ButtonCodeID = 
                    3704832848557640569; (
                    DefinitionNotebookClient`$ClickedButton = "Submit"; 
                    With[{RSNB`nb = ButtonNotebook[]}, 
                    DefinitionNotebookClient`DisplayStripe[RSNB`nb, 
                    DefinitionNotebookClient`SubmitRepository[RSNB`nb], 
                    "ShowProgress" -> True]]), 
                   DefinitionNotebookClient`ButtonCodeID[
                   3704832848557640569]]& , 
                  "\"Submit your paclet to the Wolfram Language Paclet \
Repository\"", True}, "OrangeButtonTemplate"]]], StandardForm], Evaluator -> 
             "System", SingleEvaluation -> True]}}, 
          GridBoxAlignment -> {
           "Columns" -> {{Left}}, "ColumnsIndexed" -> {-1 -> Right}, 
            "Rows" -> {{Center}}}, AutoDelete -> False, 
          GridBoxBackground -> {"Columns" -> {{None}}, "Rows" -> {
              RGBColor[1., 1., 1.], 
              RGBColor[0.33333, 0.33333, 0.33333]}}, 
          GridBoxFrame -> {
           "Columns" -> False, 
            "RowsIndexed" -> {
             1 -> RGBColor[1., 1., 1.], 2 -> 
              RGBColor[0.33333, 0.33333, 0.33333]}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {
           "Columns" -> {5, {0.9}, 5}, 
            "RowsIndexed" -> {1 -> 1.1, 2 -> 1.3, 3 -> 0.25}}, FrameStyle -> 
          RGBColor[1., 1., 1.]], "Grid"], 
        ButtonBoxOptions -> {Enabled -> Dynamic[
            Not[
             TrueQ[DefinitionNotebookClient`$ButtonsDisabled]], 
            TrackedSymbols :> {DefinitionNotebookClient`$ButtonsDisabled}]}, 
        StripOnInput -> False]& )}], 
   Cell[
    StyleData["ReviewerCommentLabelTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        GridBox[{{#, 
           TemplateBox[{
             GraphicsBox[{
               Thickness[0.0025], {
                FaceForm[{
                  RGBColor[0.96078, 0.50588, 0.19608], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                  0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
                  1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                  0}, {0, 1, 0}}, {{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                  3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
                  0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{205., 
                  22.66}, {205., 212.11}, {246.02, 235.8}, {369.07, 306.84}, {
                  369.07, 117.39}, {205., 22.66}}, {{30.929, 306.84}, {153.98,
                   235.8}, {195., 212.11}, {195., 22.66}, {30.929, 117.39}, {
                  30.929, 306.84}}, {{200., 410.23}, {364.07, 315.5}, {241.02,
                   244.46}, {200., 220.77}, {158.98, 244.46}, {35.929, 
                  315.5}, {200., 410.23}}, CompressedData["
1:eJxTTMoPSmViYGCQAWIQ3fo6cIdcZ7nDwyqRde5/ix0YQCAgE8J3rXJIAwG5
TIc3QGWtwVUOs2YCwcMMOB+sfkMGXP3z3ys/Xso1h5uXL9R84NRDU4friwts
ud4XQ+TfmjgU2nJdX3wFwQebswONvyAGzgcpL9CNgZu3BGjc9cPRcPuqgdY9
7IqGu+dzX3CJSrgyxJ4TGQ6m7y1c3YuUHEDKqp5kOMi8fmQmxaAEUc+QCeeD
/SWN4Pcf+qoRY54J1w8LH5j5sPCD2R8E1P56YTncfWD5jeVw98P4MP+h8IH+
h/Fh4QMzDxZ+6PEFAOibv7E=
                  "]}]}, {
                FaceForm[{
                  RGBColor[0.55294, 0.67451, 0.81176], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{43., 198.67}, {107.71, 161.31}, {107.71, 86.587}, {
                 43., 123.95}, {43., 198.67}}}]}, {
                FaceForm[{
                  RGBColor[0.31373, 0.4549, 0.61176], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{182.78, 198.67}, {182.78, 123.95}, {118.06, 
                 86.587}, {118.06, 161.31}, {182.78, 198.67}}}]}, {
                FaceForm[{
                  RGBColor[0.78039, 0.86275, 0.94902], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{112.89, 245.}, {177.6, 207.64}, {112.89, 170.27}, {
                 48.174, 207.64}, {112.89, 245.}}}]}, {
                FaceForm[{
                  RGBColor[0.6902, 0.58824, 0.81176], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{130.03, 350.12}, {194.8, 312.72}, {194.8, 237.93}, {
                 130.03, 275.32}, {130.03, 350.12}}}]}, {
                FaceForm[{
                  RGBColor[0.46275, 0.36078, 0.61176], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{269.93, 350.12}, {269.93, 275.32}, {205.16, 
                 237.93}, {205.16, 312.72}, {269.93, 350.12}}}]}, {
                FaceForm[{
                  RGBColor[0.88627, 0.80392, 0.95294], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{199.98, 396.48}, {264.75, 359.09}, {199.98, 
                 321.69}, {135.21, 359.09}, {199.98, 396.48}}}]}, {
                FaceForm[{
                  RGBColor[0.66275, 0.80392, 0.56863], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{217.61, 199.14}, {281.9, 162.02}, {281.9, 87.791}, {
                 217.61, 124.91}, {217.61, 199.14}}}]}, {
                FaceForm[{
                  RGBColor[0.43137, 0.60392, 0.3451], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{356.47, 199.14}, {356.47, 124.91}, {292.18, 
                 87.791}, {292.18, 162.02}, {356.47, 199.14}}}]}, {
                FaceForm[{
                  RGBColor[0.8549, 0.9451, 0.8], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{287.04, 245.16}, {351.33, 208.04}, {287.04, 
                 170.93}, {222.75, 208.04}, {287.04, 245.16}}}]}, {
                FaceForm[{
                  RGBColor[0.66275, 0.80392, 0.56863], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{356.47,
                  215.77}, {296.28, 250.59}, {356.47, 285.27}, {356.47, 
                 215.77}}}]}, {
                FaceForm[{
                  RGBColor[0.66275, 0.80392, 0.56863], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{217.61,
                  114.06}, {277.79, 79.24}, {217.61, 44.566}, {217.61, 
                 114.06}}}]}, {
                FaceForm[{
                  RGBColor[0.55294, 0.67451, 0.81176], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{122.17,
                  78.363}, {182.42, 113.07}, {182.36, 43.614}, {122.17, 
                 78.363}}}]}, {
                FaceForm[{
                  RGBColor[0.55294, 0.67451, 0.81176], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{103.52,
                  249.47}, {43.272, 214.76}, {43.335, 284.22}, {103.52, 
                 249.47}}}]}, {
                FaceForm[{
                  RGBColor[0.6902, 0.58824, 0.81176], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{120.87,
                  350.62}, {120.8, 281.08}, {60.68, 315.87}, {120.87, 
                 350.62}}}]}, {
                FaceForm[{
                  RGBColor[0.6902, 0.58824, 0.81176], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{278.37,
                  281.22}, {278.44, 350.75}, {338.56, 315.96}, {278.37, 
                 281.22}}}]}}, {
              ImageSize -> 12, ImageSize -> 50, 
               ImageSize -> {Automatic, 35}}], 
             "Wolfram Paclet Repository Reviewer"}, 
            "PrettyTooltipTemplate"]}}, 
         GridBoxAlignment -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Center}}}, AutoDelete -> 
         False, GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"]& )}], 
   Cell[
    StyleData["CommentReplyIcon"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.076923], 
         FaceForm[{#, 
           Opacity[1.]}], 
         FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{1.5, 7.5}, {6.5, 11.5}, {
          6.5, 3.5}}}], 
         FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}}, CompressedData["
1:eJw9U2tIVEEUvq5iVkttZmdfuo/ZbQukJGKVqPBLUTGJ0h9hVLIJRYhUVJj2
AjGRWCKiF0llZWRCSEnZExEJ06CotaiQyH7EIrthT3u6NXPn3jswnDlzzzlz
vu8711u9vWJzsqIoSXwv5tuk6IsgrQvOnLf+1CRC5ZKbg3WJAIJV90rNJoJF
XOR6sebI6W3pyXq8DxccIoGwa+uxj/v/McxNbTxZOJ3w4Rkb+ZVgWGk2ZbcQ
Yfm0V+07Jhm6St7vzVhI2JfBT78ZCkI8cj2hqe/xxaIJJm0PoWEssCgtzvCc
lzlYYwXP5iUYHpXlHV4xasXLeh4wyKCWX2fDqcJwbfQ+w4F83vGQDT1fJ1/U
dzJ842bsih1XB3hiI0NzrPyOq9mBPb1tjpyNDBXci5U7MVQnLhji4nMsE+9W
c6ARL3i3XSWbXNiiLi8EzPxbbqydsaD73LgHJ2wp/OiFoKVJ8Ui+Chha6M3T
H8NZUMPm+XB9p8h0QtATjvtxqUh0SBgV76QHZN+lszReA5pNQ66o1+8HV6O3
rdWCBIcTuKHxHJ4NQdO1sx4Nxxy4VYBug2dVt4lMnB/vGCi7TSgWz/504Etk
VbXlNSGkCmWHqFYbJXziYXlT7VKXEdLq2DDMwyvvksTZZ5W4OgiCjmCVFTUP
dh+3HSKJ8y9hqUogIfqn83PkCUndQoTLQsZ2gpperL3fQJLXIMEn5F5GaD3D
l50g2O3OIkhiCUf7v8/fMJOMuRPTmT2FjLlU+0ghY471+dV93epzr/sPPaJz
u3Ev65sNX/8//gP5Ei2u
          "]]}, AspectRatio -> Automatic, ImageSize -> {13., 13.}, 
        PlotRange -> {{0., 13.}, {0., 13.}}]& )}], 
   Cell[
    StyleData["CommentCellLabelTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        TagBox[
         GridBox[{{
            StyleBox[#, FontSize -> 11], "\[SpanFromLeft]"}, {
            StyleBox[
             DynamicBox[
              ToBoxes[
               DateString[
                TimeZoneConvert[
                 DateObject[#2, TimeZone -> 0]], {
                "Month", "/", "Day", "/", "Year", " ", "Hour24", ":", 
                 "Minute"}], StandardForm], SingleEvaluation -> True], 
             FontSize -> 9], 
            ItemBox[
             ButtonBox[
              TagBox[
               StyleBox[
                TemplateBox[{"\"Reply \[RightGuillemet]\"", 
                  StyleBox["\"Reply \[RightGuillemet]\"", "HyperlinkActive"], 
                  BaseStyle -> "Hyperlink"}, "MouseoverTemplate"], FontSize -> 
                9], 
               MouseAppearanceTag["LinkHand"]], BaseStyle -> "Hyperlink", 
              ButtonFunction :> (SelectionMove[
                 ParentCell[
                  EvaluationCell[]], After, Cell]; 
               DefinitionNotebookClient`CommentInsert[]), Evaluator -> 
              Automatic, Method -> "Queued"], Alignment -> Right]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{Automatic}}, "Rows" -> {{0}}}], 
         "Grid"], "CommentLabel", ShowStringCharacters -> False]& )}], 
   Cell[
    StyleData["OrangeButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (FrameBox[
        ButtonBox[
         StyleBox[#, "Text", FontFamily -> "Source Sans Pro", FontWeight -> 
          "SemiBold", FontTracking -> "Condensed", FontSize -> 13, FontColor -> 
          Dynamic[
            FEPrivate`If[
             CurrentValue[Enabled], 
             GrayLevel[1], 
             RGBColor[0.80294, 0.80294, 0.80294]], Evaluator -> "System"], 
          StripOnInput -> False], ButtonFunction :> 
         With[{RSNB`nb$ = ButtonNotebook[]}, 
           If[#4, CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
             ProgressIndicator[Appearance -> "Necklace"]]; 
           With[{RSNB`$cp$ = $ContextPath}, 
             Quiet[
              
              Block[{$ContextPath = RSNB`$cp$, 
                ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                False, DefinitionNotebookClient`$ButtonCodeID = None}, 
               Internal`WithLocalSettings[
                DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                   ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                   "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                 Annotation[
                 DefinitionNotebookClient`$ButtonCodeID = 3145484069433207908; 
                  DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[
                    #2[]]]], 
                  DefinitionNotebookClient`ButtonCodeID[3145484069433207908]],
                  DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
               Null]]]; 
           CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = ""; 
           Null], FrameMargins -> {{5, 5}, {0, 0}}, 
         Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqAIJQygMsQf39/d3d3BwcHSxgAsoEiQHFiDAkJCXF2djbD
DYCyQDV4DAFaZG1tjccECACqQXYSsiFA84kxAW4O3D3IhuD3BVZ/oRkCdB5J
JkAAxFNwQ4AhT4YhQF3IhgBjkAxDgLqAeiGpEcgApgQyDAHqghgCyhoUG0IV
l1AxTKgSO1RJJ1RJsdTKO1TJxdQqT5CdREnJRgYgphgnprQHAMBNTEU=
             "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
             Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJytlM1Kw0AURoPduHTnui+hDgOSksW0GwMxWWSZYFqKkEJaiO4EX0J8AF9T
T7gahmjs0MxlWqbffHN67/zNy12yPguCYH/OV1K0i6Ypnu8v+JHV++2mrh5W
9aHaVM1NOUO8/P50/c9j4eIhsmkxBonj2BgThqH6Cfoo6C6QNE2jKLoaD0bx
/APhj7TWONW1zs3j9u71KXuXRh8FnVE8dko2BL4QlrdJm7295B+/Gzqjwunz
sSFSBZ4/p9tNOPgHENKTKsZyGOQjdUlRPYSVR6TqowRpOPEzy4awg4isniME
J35mMVdOIx1OAiK74AjB2ZWvlEC6qzEZ4iUTj2viZXe8nBMvJ9bX3fFyi329
J3ZKU162E8LlGXd57b8AKuPmMg==
             "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
             Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJytlD0OgkAQhYk2lnbW3sLW0lazDZ1G/KHAZDURr8AxuAANp6DmCJT2lPqZ
0Y0xChvZl2ges29fZmZnd7w6zDc9z/OOA/7my/NU6+VlMeRDRcf9NgrWs+gU
bAM9WfUJjp6/B7+1wUYDVDf8MonjOE3ToiiuL8CJELcx8X0/z/OGtFlF02Ci
ta6qikhd11mWJUmyewFOhDiraFB+NcFfHMqyDMPwa/nEWRUfk8+7iVSBprWT
4oP+w4SOSRW/cvjIR+qSPhsTOg+h6lYHAUr07Ho34QQhdM/SBCV6dsFlGiFM
AoRTsDRBiZ5dYvK4Gp1NnGTisCdOTsfJnCgXE6sc3R3l4habfDq+JwYdX7Y/
0JC2gc1rfweIxIKt
             "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
             Interleaving -> True]}, Background -> 
         RGBColor[0.33333, 0.33333, 0.33333], Method -> "Queued", 
         ImageSize -> {All, 23}, Evaluator -> Automatic], FrameStyle -> 
        Directive[
          RGBColor[0.33333, 0.33333, 0.33333], 
          AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> False, 
        StripOnInput -> False]& )}], 
   Cell[
    StyleData["SuggestionGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        FrameBox[
         AdjustmentBox[
          TagBox[
           GridBox[{{
              
              TemplateBox[{#2, #3, {16., 16.}, {{1., 17.}, {1., 17.}}}, 
               "SuggestionIconTemplate"], 
              
              PaneBox[#, ImageSizeAction -> "ShrinkToFit", BaselinePosition -> 
               Baseline, ImageSize -> Full], 
              RowBox[{
                AdjustmentBox[
                 TemplateBox[{
                   ActionMenuBox[
                    TagBox[
                    PaneSelectorBox[{False -> GraphicsBox[{
                    EdgeForm[
                    Directive[
                    GrayLevel[1, 0], 
                    Thickness[0.025]]], 
                    FaceForm[#4], 
                    
                    RectangleBox[{-1.75, -2}, {1.75, 2}, RoundingRadius -> 
                    0.2], 
                    Thickness[0.15], #5, 
                    LineBox[{{-0.5, -1.}, {0.5, 0.}, {-0.5, 1.}}]}, 
                    ImageSize -> {Automatic, 15}, ImageMargins -> 0], True -> 
                    GraphicsBox[{
                    EdgeForm[
                    Directive[#5, 
                    Thickness[0.025]]], 
                    FaceForm[#2], 
                    
                    RectangleBox[{-1.75, -2}, {1.75, 2}, RoundingRadius -> 
                    0.2], 
                    Thickness[0.15], 
                    GrayLevel[1], 
                    LineBox[{{-0.5, -1.}, {0.5, 0.}, {-0.5, 1.}}]}, 
                    ImageSize -> {Automatic, 15}, ImageMargins -> 0]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                    MouseAppearanceTag["LinkHand"]], #6, Appearance -> None, 
                    Method -> "Queued"], "\"View suggestions\""}, 
                  "PrettyTooltipTemplate"], BoxBaselineShift -> -0.5], 
                " "}]}}, 
            GridBoxAlignment -> {
             "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
            False, GridBoxItemSize -> {
             "Columns" -> {Automatic, Automatic, Fit}, 
              "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], 
          BoxMargins -> {{0.25, -0.5}, {0.15, -0.15}}], 
         RoundingRadius -> {13, 75}, Background -> #4, FrameStyle -> None, 
         FrameMargins -> {{0, 8}, {0, 0}}, ImageMargins -> {{0, 0}, {5, 5}}, 
         StripOnInput -> False], "Text", FontColor -> #5, FontSize -> 14, 
        FontFamily -> "Source Sans Pro", FontWeight -> "SemiBold", 
        FontTracking -> "Plain", 
        PrivateFontOptions -> {"OperatorSubstitution" -> False}, 
        LineBreakWithin -> False]& )}], 
   Cell[
    StyleData["SuggestionIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.055556], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGZigIIGAwcIQ8kBxk94ekHp9k9Vh8qXaoYcOfoO
m+a+X37stKZDTP+hrxpzdOA0TBymDqYPl7n2pnG7PHlk4Pw5RxQ2FGWIwPWD
jI3p54WbLxuVYn3fnwluD8S8H/Yo9gD5KPYA+TB7YPph9sDMh9EwcZg6FPdh
MRfdXpi7YPph7oaZD/MXzB5c4QCzBwA/Dn+d
            "]]}, 
          FaceForm[#]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{8.1753, 7.4169}, {
             7.7969, 11.308}, {7.7969, 13.38}, {10.12, 13.38}, {10.12, 
             11.308}, {9.7415, 7.4169}, {8.1753, 7.4169}}, CompressedData["
1:eJxTTMoPSmViYGCQBGIQDQFKDg+rRNa5P+RzKPOXE8vSVYTz8z+0ngxpVHCA
qBNwmPd++THv7/IO8q2vA3fICTpUvlQz5Hgj52DLdX1xga2QQxoYyDmcYLed
HTpfGM6/k8GQ3+giCue7M1dwq7wQg+vnmbyyKdBTAm6+tsTUK5wZknD7Pec2
qB1qk4K772Y8iCXtAHM/jP/bquBcxyUEfyJ/ldnqOmW4/qw9JZMlWFTg5tfa
m8bt6lSB23/2DAiowN0H48PcD+PD/AfTD/M/zHxY+MDsh4UfzH2w8EUPfwD5
N5G6
             "]}]}, 
          FaceForm[#2]]}, ImageSize -> #3, PlotRange -> #4, AspectRatio -> 
        Automatic, BaselinePosition -> Scaled[0.1]]& )}], 
   Cell[
    StyleData["FormEditValuesButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TemplateBox[{
         TagBox[
          PaneBox[
           PaneSelectorBox[{False -> GraphicsBox[
               TagBox[
                RasterBox[CompressedData["
1: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
N3kqZvY=
                 "], {{0, 50.}, {50., 0}}, {0, 255}, ColorFunction -> 
                 GrayLevel], 
                BoxForm`ImageTag[
                "Byte", ColorSpace -> "Grayscale", Interleaving -> True], 
                Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
               ImageSizeRaw -> {50., 50.}, PlotRange -> {{0, 50.}, {0, 50.}}],
              True -> GraphicsBox[
               TagBox[
                RasterBox[CompressedData["
1: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
DcvuuIyle//vxt/PCE6d
                 "], {{0, 50.}, {50., 0}}, {0, 255}, ColorFunction -> 
                 GrayLevel], 
                BoxForm`ImageTag[
                "Byte", ColorSpace -> "Grayscale", Interleaving -> True], 
                Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
               ImageSizeRaw -> {50., 50.}, 
               PlotRange -> {{0, 50.}, {0, 50.}}]}, 
            Dynamic[
             CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
            0], ImageSize -> {Automatic, 15}, ImageSizeAction -> 
           "ResizeToFit"], 
          MouseAppearanceTag["LinkHand"]], "\"Edit values\""}, 
        "PrettyTooltipTemplate"]& )}], 
   Cell[
    StyleData["FileManagerBMPIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{16.5, 2.}, {4.5, 2.}, {
            3.6719479999999995`, 2.0009000000000015`}, {3.0009040000000002`, 
            2.671949999999999}, {3., 3.5}, {3., 17.5}, {3.0009040000000002`, 
            18.328052}, {3.6719479999999995`, 18.999096}, {4.5, 19.}, {16.5, 
            19.}, {17.32805, 18.999096}, {17.9991, 18.328052}, {18., 17.5}, {
            18., 3.5}, {17.9991, 2.671949999999999}, {17.32805, 
            2.0009000000000015`}, {16.5, 2.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{4.5, 18.}, {16.5, 
            18.}, {16.7764, 18.}, {17., 17.7764}, {17., 17.5}, {17., 3.5}, {
            17., 3.223600000000001}, {16.7764, 3.}, {16.5, 3.}, {4.5, 3.}, {
            4.2236, 3.}, {4., 3.223600000000001}, {4., 3.5}, {4., 17.5}, {4., 
            17.7764}, {4.2236, 18.}, {4.5, 18.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            13.57129, 13.35693}, {12.979560000000001`, 13.357063}, {12.49995, 
            13.836817}, {12.49999, 14.42855}, {12.50003, 15.020283}, {
            12.97972, 15.499966}, {13.57145, 15.50001}, {14.16318, 
            15.500053999999999`}, {14.64294, 15.020443}, {14.643069999999998`,
             14.428709999999999`}, {14.64252, 13.837011}, {14.16299, 
            13.357481}, {13.57129, 13.35693}}}]}, 
          FaceForm[
           RGBColor[0.9451, 0.76471, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {
             1, 3, 3}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQHaDhBaBUrLwflMqqxiB1xkHfqslzZ//a/swDGp
nC91hozDK6c1/ziMVRzk9CzfTbGTcXDybGQ1aFVxMD/16+yRJ9IO0/3DeMKv
qzj49F44f+W1tMOvuqw9JdaqDiElKtP/B8g4cF9fXGDbpepQ7sX++r+PosOa
7tsZDPlaDlpmz0qPFCo6LLn7ItluhZbDCuWG2UdXKzoc+zk7oOOClgPLpuu7
7d8pOqwFqb+v5dA0cbrpRgMlh7hMyZXf32g5ZBpWzPhWquTwQsBCKOOBloPc
wy0PXNcrOahcexTMsEfLQazH6xXLFhUHG6B36vM0HWb3ZzsfvaHmYPF5taXD
Bm2H0KxvDtoC6g4Nuutj8l9rO/yrWB81M0HdIUQimqOIQ8eh91rgVZaN6g7M
IHf803boWTgnI5xRw6HF+/ic9C/aDpogh3poOEREub2yPart8N/u8aHGAg2I
/+q1HSZyJXM73tOGuL9e1WGzZnjFdG4dhzh+taPH9VUdOIoCDvkA+TbZ22Mz
zqk42Knvza+5q+2w7MOCm6X1Kg5FdzRl16zXdhAo6wptNlBxOM+v3OIere3w
xJB56kdg/KDHJwAEHLkm
             "], {{8.415530000000002, 11.}, {12.638179999999998`, 11.}, {
             11.68506, 12.668}, {10.791059999999998`, 11.72708}, {10.62513, 
             11.553912}, {10.36001, 11.522025000000001`}, {10.15775, 
             11.65091}, {9.221229999999998, 12.254909999999999`}}}]}, 
          FaceForm[
           RGBColor[0.29412, 0.83922, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 
             3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBWIQLa1/V4WNUd+BAQyUHE4vdN32+a8onN8kXsuaWSbq
0Dcp/LkEkB/vLrOp8YuIg1PC0wtK0koOK1Zbi92eIuLwJrN9v5q3ksNH/ugq
E1MRB5UzW/5qVys5HBENWLH8v7CDSnqiv/UeJai5IlBaGZXfYABXP0nJaM2j
hQZw8wQLOEKzDhnA7TsRva4u55YB3D2K9tI78z4ZwN173f9/5Of/Bmj+MXRA
9a+hQ4sCu+oZF324ei/5XQv2terDzcuMsRCYtFUfbl/LzG31qU/14e4pfOjg
IcZgAHcvxFwDuH9Q+ED/wtTDwgNmHiy8YPbBwhPmHlh4w9wLiw/0+AMALQSV
4A==
             "], {{5.996060000000001, 10.}, {15.00394, 10.}, {15.00394, 
             16.}, {5.996060000000001, 16.}}}]}, 
          FaceForm[
           RGBColor[0.7098, 0.80392, 0.87451]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0,
              2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
             0}}, {{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
             0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
             0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{
             0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
             0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBmIQDQEiDhBawAGVr+Cwm1VIxP6ZBJyvW3ExfIKZlEPU
lJsKk3kUHNbt4rs6pUXaYdetrr+p2+UdTN5buLpPknF4tX098/M3cg56xw5Y
9eXLOszamGFlLSnnwPR3X/3nR7IOLM97NN6+lXGoSH+7jfusrANbyvry+j3S
DvZPZ+i8Oy/rkLYqISSIXdrhdFOnfdcsWQcfpitXNoVKOWQJq3+3NpF16Ftv
u1nlgKSDuxWzsv5pGYcaz+QtfVqSDg/fi29WtZZxWBTbOmX+FgmHrI+aDMcm
Szu8yWzfr5Yt4TDNuTvnebSMw6EPgoaqRhIOZ8/z+t7kBJqfY7eOd6u4Q+hH
t2cT62Ud5jg9Ny3jFHeI32r0cPovWYcgvy2rJwSJORTlCb+bainnsOOHCMPj
SlGHxcHhdqeN5Ryivu681TVXxOGVbF57m6ucA9eXThvPKGGHU1YysUtPyzo8
uaB0+6eckEMmMBRknso4OO1ZF7/BWtDBtPJU1q570g4cRQGHfKIFHDJWBHoY
dUs5PEh+6Sx+hd/B9HrmkqVGkvD4AQCmgKFd
             "], {{5.49393, 6.2940000000000005`}, {6.24061, 
             6.2940000000000005`}, {6.429096, 6.284750000000001}, {
             6.614185999999998, 6.34661}, {6.759240000000001, 
             6.467319999999999}, {6.890777, 6.587419999999998}, {6.962032, 
             6.759840000000002}, {6.953660000000001, 6.937759999999999}, {
             6.96995, 7.11698}, {6.9035910000000005`, 7.293840000000001}, {
             6.77343, 7.41811}, {6.613585999999999, 7.530479999999999}, {
             6.419682000000001, 7.58385}, {6.224849999999999, 7.56911}, {
             5.49393, 7.56911}}, {{5.49393, 5.8706}, {5.49393, 4.4308}, {6.31,
              4.4308}, {6.509734, 4.41999}, {6.705573, 4.48902}, {
             6.854379999999999, 4.62269}, {6.9925049999999995`, 
             4.761840000000003}, {7.065081999999999, 4.953080000000002}, {
             7.05406, 5.14884}, {7.08081, 5.3499}, {7.011307, 
             5.551820000000001}, {6.866472, 5.693819999999999}, {6.721637, 
             5.83582}, {6.518383999999999, 5.90132}, {6.317889999999999, 
             5.8706}}, {{9.131169999999997, 8.}, {10.356000000000002`, 
             4.736610000000001}, {11.5814, 8.}, {12.221939999999998`, 8.}, {
             12.221939999999998`, 4.}, {11.727999999999998`, 4.}, {
             11.727999999999998`, 5.557409999999999}, {11.774239999999999`, 
             7.238630000000002}, {10.544139999999999`, 4.}, {10.16581, 4.}, {
             8.937809999999999, 7.231200000000001}, {8.986680000000002, 
             5.557409999999999}, {8.986680000000002, 4.}, {8.492740000000001, 
             4.}, {8.492740000000001, 8.}}, {{13.799369999999998`, 
             5.566080000000001}, {13.799369999999998`, 4.}, {
             13.305440000000003`, 4.}, {13.305440000000003`, 8.}, {14.68744, 
             8.}, {15.04065, 8.0207}, {15.387580000000002`, 
             7.899980000000001}, {15.65166, 7.6644999999999985`}, {15.88797, 
             7.431630000000002}, {16.01454, 7.109539999999999}, {16., 
             6.778090000000002}, {16.02146, 6.443669999999999}, {15.8971, 
             6.116339999999999}, {15.659, 5.88053}, {15.38536, 
             5.655040000000001}, {15.03595, 5.542569999999998}, {14.68216, 
             5.566080000000001}}, {{13.799369999999998`, 5.9969}, {
             14.687369999999998`, 5.9969}, {14.908019999999999`, 
             5.982140000000001}, {15.12579, 6.053599999999999}, {
             15.294799999999999`, 6.1962199999999985`}, {15.44357, 
             6.350040000000002}, {15.520309999999998`, 6.559620000000001}, {
             15.50604, 6.7731400000000015`}, {15.516169999999999`, 6.98493}, {
             15.43995, 7.19177}, {15.294799999999999`, 7.34633}, {15.13914, 
             7.49474}, {14.93073, 7.57494}, {14.71574, 7.56917}, {
             13.799339999999999`, 7.56917}}}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerCDFIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}}}, {{{18., 17.5}, {18., 18.328427}, {
            17.328429999999997`, 19.}, {16.5, 19.}, {4.5, 19.}, {3.671573, 
            19.}, {3., 18.328427}, {3., 17.5}, {3., 3.5}, {3., 
            2.6715700000000027`}, {3.671573, 2.}, {4.5, 2.}, {16.5, 2.}, {
            17.328429999999997`, 2.}, {18., 2.6715700000000027`}, {18., 
            3.5}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 
             1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
             0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
             0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {{{5., 12.}, {5., 11.}, {2., 11.}, {2., 12.}}, {{2., 
             10.}, {2., 9.}, {5., 9.}, {5., 10.}}, {{2., 14.}, {2., 13.}, {5.,
              13.}, {5., 14.}}, {{2., 8.}, {2., 7.}, {5., 7.}, {5., 8.}}, {{
             2., 6.}, {2., 5.}, {5., 5.}, {5., 6.}}, {{5., 18.}, {2., 18.}, {
             2., 17.}, {5., 17.}, {5., 18.}}, {{5., 4.}, {2., 4.}, {2., 3.}, {
             5., 3.}, {5., 4.}}, {{2., 16.}, {2., 15.}, {5., 15.}, {5., 
             16.}}}]}, 
          FaceForm[
           RGBColor[0.86667, 0.066667, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}}}, {{{17., 3.5}, {17., 
            3.223860000000002}, {16.776139999999998`, 3.}, {16.5, 3.}, {4.5, 
            3.}, {4.223858, 3.}, {4., 3.223860000000002}, {4., 3.5}, {4., 
            17.5}, {4., 17.776142}, {4.223858, 18.}, {4.5, 18.}, {16.5, 
            18.}, {16.776139999999998`, 18.}, {17., 17.776142}, {17., 
            17.5}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{
            1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 
            0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {0, 
            1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {
            1, 3, 3}, {1, 3, 3}, {1, 3, 
            3}}}, {{{11.76489, 10.215}, {11.80176, 10.266810000000001`}, {
             11.77555, 10.604633}, {11.58396, 10.907632000000001`}, {
             11.290009999999999`, 11.076163999999999`}, {10.99606, 
             11.244695}, {10.63778, 11.256947000000002`}, {10.333, 
             11.10889}, {11.05187, 11.20557}, {11.479730000000002`, 
             9.99811}, {10.727409999999999`, 9.33197}, {11.149809999999999`, 
             9.52223}, {11.50957, 9.82843}, {11.76489, 10.215}}, {{8.1958, 
             10.303830000000001`}, {8.202184, 9.241180000000002}, {
             8.904717999999999, 8.30847}, {9.924319999999998, 8.009}, {
             10.0459, 7.98489}, {11.0395, 8.27055}, {11.746269999999997`, 
             9.149949999999999}, {11.81152, 10.181730000000002`}, {11.44906, 
             9.569830000000001}, {10.80329, 9.1811}, {10.0929, 
             9.147189999999998}, {9.307032000000001, 9.191650000000001}, {
             8.59527, 9.625599999999999}, {8.1958, 10.303830000000001`}}, {{
             9.91321, 7.952940000000002}, {7.39209, 8.45477}, {7.04614, 
             13.89722}, {12.13989, 14.18054}, {11.451440000000002`, 
             14.616627999999999`}, {10.66164, 14.866693}, {9.84766, 
             14.90631}, {9.270579, 14.904569}, {8.706776999999999, 
             14.732987000000001`}, {8.22656, 14.41296}, {5.411620000000001, 
             12.47095}, {6.03, 7.93628}, {9.538089999999999, 7.93628}, {
             9.65967, 7.93628}, {9.784709999999999, 7.941830000000001}, {
             9.91321, 7.952940000000002}}, {{9.29089, 10.69141}, {9.25389, 
             10.639469999999998`}, {9.280137, 10.301669000000002`}, {9.471731,
              9.998700000000001}, {9.765674, 9.83019}, {10.05962, 
             9.661680000000002}, {10.417869999999999`, 9.649429999999999}, {
             10.72264, 9.797469999999999}, {10.00376, 9.7006}, {
             9.575790000000001, 10.908}, {10.3281, 11.574259999999999`}, {
             9.905787000000002, 11.384055}, {9.546119, 11.077912999999999`}, {
             9.29089, 10.69141}}, {{12.77489, 10.73059}, {12.771159999999998`,
              11.738362}, {12.10084, 12.621973}, {11.131339999999998`, 
             12.897090000000002`}, {11.009269999999999`, 
             12.921389999999999`}, {10.0158, 12.635689000000001`}, {9.309201, 
             11.756293000000001`}, {9.244139999999998, 10.72461}, {9.606552, 
             11.33644}, {10.25222, 11.725138000000001`}, {10.962520000000001`,
              11.759090000000002`}, {11.69498, 11.721043000000002`}, {
             12.366620000000001`, 11.339892}, {12.774899999999999`, 
             10.73059}}, {{11.51758, 12.969909999999999`}, {11.396, 
             12.969909999999999`}, {11.270959999999999`, 12.964357}, {
             11.14246, 12.95325}, {13.66357, 12.45142}, {13.741819999999997`, 
             7.11825}, {8.91577, 6.725830000000002}, {9.60423, 
             6.2897500000000015`}, {10.39402, 6.03966}, {11.207999999999998`, 
             6.}, {11.78508, 6.001780000000002}, {12.348869999999998`, 
             6.17338}, {12.82909, 6.493409999999999}, {15.644409999999999`, 
             8.435419999999999}, {15.025630000000001`, 12.969909999999999`}, {
             11.51758, 12.969909999999999`}}}]}, 
          FaceForm[
           RGBColor[0.86667, 0.066667, 0.]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerCSSIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4j0TK5/wfzN0yHv0pK49SddhVzbnzwXvDR22
KF8tr2vUdbg50+m56TNDh13zgyfMn6vrkJfn4x9xy9BhkQBje8BWXSitDRU3
ctiXlXpIv1XbweqZTXL8JyOHn7eMvZlctB0eremY9eK/kQMDGGhDaWMoLQDn
F+88GNA+lduhOatZ+CJQ/fPVT5LLGTkcLp14LurfC9PPAaXR+Rxw9Qn2QS5t
U5nh5jEsOFxTyciAZh+Mbwjni+woNffvNUSo70m/cOG/Idw87PbC+LoOfF4z
Mn8D1T+bLHr4qqKuQ8bv8LBZfwwdhGSmFwY76zqghzcABAZ3MA==
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}}}, {{{4., 3.}, {4., 18.}, {13., 18.}, {17., 14.}, {17., 3.}, {
            4., 3.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, {{{13., 18.}, {13., 14.5}, {12.99992, 
            14.367367999999999`}, {13.052580000000003`, 14.240146}, {
            13.146359999999998`, 14.146362}, {13.240149999999998`, 
            14.052577}, {13.36737, 13.999922999999999`}, {13.5, 14.}, {17., 
            14.}, {17., 15.}, {14., 18.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14., 
            17.293}, {16.293, 15.}, {14., 15.}, {14., 17.293}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0,
              1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
             1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {
             1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
             3}}}, {CompressedData["
1:eJxdk3tMUwcUxmtZNl0M0Mel5T56wcyCDxwzSLvSlW9EGUKlDogymTY8hrjI
FHFs0SCyDIaADtRBZMjDuDpgbRgspLRDIqIgGW0zqnF00IVNRjMU0slkQ2B3
y/CPneTk5PfPSb7vOyc440jSO3wej6fk+p+5yLsameclYD7PUMVmKVZYe+By
JiIlOPN58h3eTwTae6cb1N8R+CFa5/P8qwG43ki+PJYlRgW/cJ3OG4B9WVFu
XZgIRiL3XH6FBI9J6/a5SCHaBqdOv1Qvhbb5d9J6VYDXmg4PEdcDse/+iG+R
UYA6e7dr7gqJoZsxxkMNAvR8knAuqoTCqDIjTPNAgNiYNNsXShql5XlL8uNC
tL9574h8koa0w3I3f6sIbwmbDDW7GGR5hyMVcjGCT/Ys/LyfQXxvIaMMIXDr
imc6azf7jOXuw/mZKhZxlmzvcJcIihuKXY2XZXDsnKH0aULc/fXdTX/UMsgO
nEiV7BVAGxF3I7mMxqmWRgVxyB8flGhSb8sptOeoogJ/9MNzmuhKf04P79/y
x1bafhCMFGZR54G1D/wwa0grKPs0AJOdar9HJn+Uk9qbs9UEHl30vbf8pwD2
+rkNA8fFMHgLPh75SIRjbPc2z6QIX95OUJxJJ/7bK0bO5jpbYqzkGY/ufsXm
7pdCNsF2PZ4XofSr9+bqxSSeLivT+5RiVHJ2iTMonHg6boi2iuG8lRtxupbG
X/Y6tmgDgUFda6GqgUHt6pTloAkCql+yzauKZDh/akF11MblWaFbFS5jofB5
uyrMKkH8luXgxS4WXzOV90McUixMOT+z84OwduaYwO1Z0R8E/Z7Q7xe1FGLX
v8+vWx2E8PSITa5rNJRtmr1p1SweWtfNu1sZqL0v+Ng537cXa6pDWmQoXVqz
Zc9FBs2W7nmXhoXT2HBhXEHjLL416bn8Npo2LpgGSUxJq3rGuXxXeHrziWv8
RAbmJ0fv5A1QQFxAePFvNGZto7kSC40c00hcwg4aNWt6nfaTDCbVmfqOZgpl
6p2WbKEM/QVPeGMDJFSh6YaHehkKO4fPejg9SYnftFUlyVASqnfE9Ekx5Ztx
8MX9MvSVJxtLWiRo5c6hxcFgorVjppwnwYcp2153jtHwxKam9HP/0U9demOp
iULNkEuQ6CIwFH8hyRFG4v//9jeFT3Hb
             "], CompressedData["
1:eJxdVGlQU1cUjtRRRAsJSyAkeXnv5UXEBRAELFT6iRSwg0QRRREEMyguCClY
QKUsLTXUEYG61G2wiFQLKorgiBsuuEWMoGg0kYhSKBVEZFNQoI8u/uiduXPm
3Jlzzne+851LKeKCVhpxOJxg9o5Yn9gtws4nDALcf5wded0ajwqVs0yiGYz+
dNAiLMAGg894VsVtUjgnTaMk5TbYlOWbxF0nxd9x/TagBfExs7ppDHQZtRe6
CLDyedu68O9o4MbTiswDAhgdlPgaS2jkpr73UDrYYsRoGikEujWbvP7JFpPO
OXxovEDhTHPY1pLJQniZaAuVFyl4U0amBWohfM90D9afpRDcVLS/Ol0E+c5M
H52BwnZFZdFDJzGq5iz4Rc7Q6HEv4I46IgZVvet0UiIN/q76catpAhdjeTZt
ehrHRKFRnhEErp4Pq07yliIosLwkN4iA47sZdo5lUgwtu709O5LATd66N/Yk
A4fPOnaa8gnoqsruH97AYKt9no/j92IcO/44IrGKwctlLRuWtovwlTbg0pMW
BjV1TW/dxCIoR4A/Z+DrF99vNleIV53aqGyd7KNvvGhtH/QyiNpeuNmSIrBZ
AmIuyZB1zgxru0WYahqd6qqSIbk0dG9niRgEf+287kAZ/PvnVsijCSTK2ZdB
Bi0+503shwmU8bK0vfsZBJnVtZoqJLgh3Os35MTiy/vCJlkjweOsSFHYOSne
39DmLzUiP/bP+fuQiD3uaK7bR8N0fMWvG8eSmJl6dIaij8I2K9c9Wwok//ZP
wStk2amqGgIr5J4fXEdRYDL9hH4TCMjUhiBNFQlNx+1r3q9EWK+2MjRfJSHK
SA6vuixEoLWi1+8yCYVVXBRRaYt0bbRmoIfE7j+uNCw9L0Dhktg1rsEUnPNn
zxkeLUDGmP0eOToKIraNSNIGC06PDc3YSEMjTXPqTLGGfgQPI0W+b+jkODtr
NIyvMfnykBRn/7yXeriVj1QPwmW+gMEJb7W8+Fs+Do3kz2RQ/nprY1qbFQw7
VD+EXmNgmN0eUJBghV69NiOBnd+YB04pPjWWKJhUa9f1OwMP3UzFNMISDXcX
iuObGMQ/hz9faYGTmunk5osM2gsXhnjdMcdLL85v81IYTFXxn2hCzPH25uaH
aoYBE+7Sv0rPw9g9/aapLP+37io/8TrIAyFkiZFLEfr4gWnacR5axEda/R/R
cAve1u1ewMOaUi9iYDmNWt16631tPIRQzXYPh1i9F5mFz08zh73UgZNdTCEl
O/zQpvEWiNDEhLRupv7RkcECLzynt11Pp1CvcjgaV2mJ9PbejhwV+dG3j6j1
NtpCoix+dd6rpxbwdy5JOltE4t1CdsFGW+Ba76SwnBckdjo96CsNMMfAaYk9
LaVwLGHCreU5PHR4CLvupbD7esl/9Z1+Lnp/btihaqagKW3hXDnAxbSJbhLt
YhqHi7oSM124yI8c/ib2Pg2OcUvrm/dmyL3KFpD/pz8uVg3Vua8ZkCJ3XFX9
Pb0ZYpI3FU0tZGBpwlMaL+KCqfyg6pkig/N8wbCXlIchf55gcYEMBEubwzMe
nKtPOcQ2yaCWTPj87ZA5lhx1vetpkKFsZN5TLKG8/fWRDY1sfDy/r7zJEhXB
hu1KtQyRzbW0fq8V8lawwsyXwfvCiYiTnnzk1e5OsI+VgZb0xCxu4GNidp1H
8WQZLr+piN4dZY3//5d/AbYWNr4=
             "], CompressedData["
1:eJxdlAtMU2cUx0uV1xDa8iiUtpeH0nt7L7IKkyJu+Ee7ollxgiiKOpBUp8YB
jhHRuOFjTkEUfKGIlPEGRUHCDAiCPHSohangxkBFBRUFBKcwGQhrp3PJvuTL
l5N8OTnn//+d4xQeGbiGzWKxgnRX/x7QTo2TXWIwt+psaMlsPryo1Xn9SQyM
Iu42Lb7Lh08il/hKxSALGY2H1bbw1f8bpaGSx/uGXbbFYFaxY9NeGj0rHn+z
XGWH4nOfBUWa0+Bf4e8Uldmh6Wnp8bZEKRQRPwgHR+yg+nzZQwMbKe749qky
PQRw3zzdySGHgom6eHPcSQEm+vwSGkEh+btR7yg3ewQsLDudzKaw0PPRBwOH
7HE1qLYg5x6J1pRo6VlaCAOr8hh5J4m5TmyLzGtC9JtXy1LbSQR15aY1bBdB
SF8ZSWNROBBekXtbJkbVwS3dHCWFV/JMrkG+GGkeWWXy4xT4R1tN1zkT8Elb
knH6DYUiUYh6diiBS6a7TbzUUgTq6wgk4D7p6IuBFinGV1w9sD+MQH3o4ZnP
fGm4zXp+xIJPoM28g78mhUaC9KDiw11iFIyycjwf0Him16dPBKVLDPuECQPt
za4/PcUidMqrh7VsBkq/r0c4C4To9WEV+o/9FxtmH/I2eMNA1PvQ095RhK66
Hcmu9xnsvcDBhpciSFcm1Q0VMIgtDkkdPC1GYZX4QVkUA/WpsKDALwlEpytD
aAcGRH7PfLcJAk7GLtqyizQCOTd7LMIdULe+dl91oK6+g3PsYpsd0CwIaBfe
kWL0ym+a5WzH9/2z/jmOKMkXj5+oorC9VBoca+yI8lN9lc52FKLUxMiuTId3
/ZPwCV5xrkZLwPZF+vEhZxLTvvcT+k0hsPhGv8v+BxI0P79aP7dfhI6a0ls5
3RKIdsSuqrkkxNhoopnxQwnCbSLVRIU9XsZ/vOACn0TKk9q7yysFyMhLOTMU
Q8Jd4ztvYrIAW47te71wjIQo1W88zNEOpks2DCONQrMO68Fttm/rUUqh0ckQ
Sdoip/v2LKMGKVpPPBbn9/Cxda9yM3c2De3L+8+LvuXjR33+XBplAwn343pt
sLs3oJx4RMMuR7AvL9oG5d3li711/jnr+9FaY+2McyPlRgy8273CpxPWyPz1
owEvQwZLZXShVZQVgiVjgXM6aZT6SgSzrlviSSLVb66h4bqH/3tzsCU0DkqT
JCWNaas8RtZ28BC7Ndd1nk7/xqaoST4ZPERu60912SRFSFuLRdwZHv645R/O
fU3BPjsmaGYmD17uSWO12yno7TjWy8OpnQEL0h11vOdyVi2Ks8TR+VnHArQk
FIxMHWNmhU/0fKeT0E/rxntWyFdYXkzM0s3THreCyAprrI43PuJfKHkfV9RV
rmzIl7zV844VuGY/5W35WQJrw78UmslW0OPpP5nEEVnLcLHKEu2LZjR3KkgU
RU9p/CKJh2v2Q9z9GhLnq+evuz7ChV6eT411/hQ/ZtWe5KJcq1sQsRQ2zrvs
FefBRfayiPUzX1FozNWRNcrBm9bYp5JN//LHRWmWUYtMRCPZtKb1lw4OrG8o
2gYbaMgqSY7ZEi6KQ0uE5/0ZuC8STPhM5SF+oKHItp4Be/hmIdPJg6p+kDfD
0BVnI4ZOvhq3fJfXFaV6vxlrJDSWJMjZruDXTiwt7bKGjsoweR8Dald29+1U
G/x/X/4Nxp4vbg==
             "]}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerDirectoryIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
            3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJRIGZigAEFBwht4IDCb0Dwg3h/2248ZuDgafrm+xEp
eai4IZSWQ+OzwPkFU9UFyk4xoskzwM2D8VHtg/IZeOD8Bv7pMuWnONHM40Cz
D8pvMITzBeRyZTYeM0RTbwQ3D8ZHtQ/G14fzl0h9q07q1UczzwDNPgMHABhL
Lgc=
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}, {1, 3, 3}}}, {{{16.75, 4.}, {3.25, 4.}, {3.111929, 4.}, {3., 
            4.111930000000001}, {3., 4.25}, {3., 13.}, {17., 13.}, {17., 
            4.25}, {17., 4.111930000000001}, {16.88807, 4.}, {16.75, 4.}}}]}, 
          
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}}, {{{17., 14.}, {3., 14.}, {
            3., 15.75}, {3., 15.888071}, {3.111929, 16.}, {3.25, 16.}, {6.75, 
            16.}, {6.888071, 16.}, {7., 15.888071}, {7., 15.75}, {7., 15.}, {
            16.75, 15.}, {16.88807, 15.}, {17., 14.888071}, {17., 14.75}}}]}, 
          
          FaceForm[
           GrayLevel[0.89804]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerEmptyDirectoryIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIxIGZigAMHMNlg4IDCZ+CB8xv4p8uUn+J0KJiqLlB2
ihEqzgGlWVD5cHM4HATkcmU2HjNAU28INw/GR7UPxteH85dIfatO6tVHM88A
zT4YrYCd34DgB/H+tgWZ42n65vsRKXk0e+XQ+CxwPqr/YfIMcPNgfJh9ANTj
LzA=
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
            3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJRIGZigAEZBwitB6Eb9OF8AblcmY3H9FHlGQwcgnh/
2248pgvnQ/Sh8RkE4fwHh1WPzy0SQDNPAM0+KJ+BC87fcUqYw/opB5o8B9w8
GB/VPg40czmg7tVHMw/mTi40vjScv0TqW3VSrzSavAzcPBgfZh8Ae5IxSw==

            "]]}, 
          FaceForm[
           GrayLevel[0.89804]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
            3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJxIGYCYt1Nc98vTzNyYAADHYfN1Z82BKwWhfPvbm2p
ubBZBM633HKibN99YYfGqc7dOcu1HTq+3L7euFnYQXFDUcZEXW2HzTyFa7pv
czikSj6KEN/O4/C99MEcwaUcDhXcKhp1PdwO6VefZ2l/43C4og1SweWgeVrg
+K4dnA79Tz7JX8rndHhzwFLZq5rLwXNug9qhNg6HOO8T7LazuaH2czhccLnx
4cspHjg/Y+LbGvupBnB+7vPfKz9eQvD5QB5kN3To/pv6/Ukip4MxCAgbOsx+
Jrv8hQe3w4/gx0tnPzFyuO/fOz3vkpaDKhvQZ6+NHF6qGXKskdF2eFglss79
oZGDS3fO89+Z2g6aMf2Hvp4wclhSYMt1fbG2QyGI2mDkAHKG6T1tB5D27h5E
eKKHLwDeAYl+
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
            3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJxIGYC4uKMiW9r9hs6aMb0H/qaoenQLnbz3HdjA4fl
lcc1rS4JOJROlmAJ0zNwSK6/aVsZIQCRFzZwYAADAQeX7pznv1/qw/mTTtd7
7P8rCOcfcVqbeW8jgs+9dVnl8UxBhyD1BZ0bFAUcZpXPWaRsKeigsvNP+5do
AQctK6AJHIIOX70i2yymCTj4JQlEWH4RcLjHxNkl/1jA4W/7l9vXGQUdgLLX
juoKOsjUJBqFGog7XF9cYMs1XdPh6+3rjcVu4hB3XtZ0sEh3yczfIA61X8th
4/4382x0JOD83ul5Qs0NhnD+r7qsPSWTEXyh5gOnFi41dDhZtm++1HtNB5B3
V240dAjaIdf6+qKmw+mFrts+7zV0uP0TqHGLpkOnY8LTC4cMIeHWp+mAHr4A
Ca2MUA==
            "]]}, 
          FaceForm[
           GrayLevel[1.]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerGIFIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{16.5, 2.}, {4.5, 2.}, {
            3.6719479999999995`, 2.0009000000000015`}, {3.0009040000000002`, 
            2.671949999999999}, {3., 3.5}, {3., 17.5}, {3.0009040000000002`, 
            18.328052}, {3.6719479999999995`, 18.999096}, {4.5, 19.}, {16.5, 
            19.}, {17.32805, 18.999096}, {17.9991, 18.328052}, {18., 17.5}, {
            18., 3.5}, {17.9991, 2.671949999999999}, {17.32805, 
            2.0009000000000015`}, {16.5, 2.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{4.5, 18.}, {16.5, 
            18.}, {16.7764, 18.}, {17., 17.7764}, {17., 17.5}, {17., 3.5}, {
            17., 3.223600000000001}, {16.7764, 3.}, {16.5, 3.}, {4.5, 3.}, {
            4.2236, 3.}, {4., 3.223600000000001}, {4., 3.5}, {4., 17.5}, {4., 
            17.7764}, {4.2236, 18.}, {4.5, 18.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            13.57129, 13.35693}, {12.979560000000001`, 13.357063}, {12.49995, 
            13.836817}, {12.49999, 14.42855}, {12.50003, 15.020283}, {
            12.97972, 15.499966}, {13.57145, 15.50001}, {14.16318, 
            15.500053999999999`}, {14.64294, 15.020443}, {14.643069999999998`,
             14.428709999999999`}, {14.64252, 13.837011}, {14.16299, 
            13.357481}, {13.57129, 13.35693}}}]}, 
          FaceForm[
           RGBColor[0.9451, 0.76471, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {
             1, 3, 3}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQHaDhBaBUrLwflMqqxiB1xkHfqslzZ//a/swDGp
nC91hozDK6c1/ziMVRzk9CzfTbGTcXDybGQ1aFVxMD/16+yRJ9IO0/3DeMKv
qzj49F44f+W1tMOvuqw9JdaqDiElKtP/B8g4cF9fXGDbpepQ7sX++r+PosOa
7tsZDPlaDlpmz0qPFCo6LLn7ItluhZbDCuWG2UdXKzoc+zk7oOOClgPLpuu7
7d8pOqwFqb+v5dA0cbrpRgMlh7hMyZXf32g5ZBpWzPhWquTwQsBCKOOBloPc
wy0PXNcrOahcexTMsEfLQazH6xXLFhUHG6B36vM0HWb3ZzsfvaHmYPF5taXD
Bm2H0KxvDtoC6g4Nuutj8l9rO/yrWB81M0HdIUQimqOIQ8eh91rgVZaN6g7M
IHf803boWTgnI5xRw6HF+/ic9C/aDpogh3poOEREub2yPart8N/u8aHGAg2I
/+q1HSZyJXM73tOGuL9e1WGzZnjFdG4dhzh+taPH9VUdOIoCDvkA+TbZ22Mz
zqk42Knvza+5q+2w7MOCm6X1Kg5FdzRl16zXdhAo6wptNlBxOM+v3OIere3w
xJB56kdg/KDHJwAEHLkm
             "], {{8.415530000000002, 11.}, {12.638179999999998`, 11.}, {
             11.68506, 12.668}, {10.791059999999998`, 11.72708}, {10.62513, 
             11.553912}, {10.36001, 11.522025000000001`}, {10.15775, 
             11.65091}, {9.221229999999998, 12.254909999999999`}}}]}, 
          FaceForm[
           RGBColor[0.29412, 0.83922, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 
             3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBWIQLa1/V4WNUd+BAQyUHE4vdN32+a8onN8kXsuaWSbq
0Dcp/LkEkB/vLrOp8YuIg1PC0wtK0koOK1Zbi92eIuLwJrN9v5q3ksNH/ugq
E1MRB5UzW/5qVys5HBENWLH8v7CDSnqiv/UeJai5IlBaGZXfYABXP0nJaM2j
hQZw8wQLOEKzDhnA7TsRva4u55YB3D2K9tI78z4ZwN173f9/5Of/Bmj+MXRA
9a+hQ4sCu+oZF324ei/5XQv2terDzcuMsRCYtFUfbl/LzG31qU/14e4pfOjg
IcZgAHcvxFwDuH9Q+ED/wtTDwgNmHiy8YPbBwhPmHlh4w9wLiw/0+AMALQSV
4A==
             "], {{5.996060000000001, 10.}, {15.00394, 10.}, {15.00394, 
             16.}, {5.996060000000001, 16.}}}]}, 
          FaceForm[
           RGBColor[0.7098, 0.80392, 0.87451]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
             0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}}}, {CompressedData["
1:eJxlkmtMUwcUxy+Cz20t7eU+2t57C04DZAkGZUWdYf9NpIjxscocoqKiEEtQ
OiQyIgpzW8IcakDdCji0WkGgIZEMQWVgREBBeUatU5GHgHagGErRCnYwIvuw
Dycnv5zz4ZzzOx6RcZqoaQRBLB6PiWz1N7g69SkRbKrJJ74joWxxORy2Uwlj
3cvd9jYpMpffuFPwh4A5EVbKuFGKcHObKGWAR9BEPyvFdHmsZZmdw5WMpKfi
Wgnuq2q6z9oVcK8qe96UK8GLE6J7jjdyxBy68JYwShBpj1iu65eh3v/hI/14
fcQj7rK9k0VYjSJL3S7BY2/e5BhisC9k5t+OzVKkLvLdkkYxuGb0DVfflWJ3
z3zH8a00LLNXLTuTTiLH3RJAPKcw917XeiLWDaWVwbsatBS6dL3f7N1GYaxL
c/KSFwXdrW/zE3Q0Sl4e7kj5hELsxDw/MlMcxpS1ELksdty56Z4oodD66fG4
S0vkeNW6OtJVT6FXPCN3f5MCaaWv3YhzNA4OZM13msPDW/xBad5lBrrGtNZ2
dwER+6NXpi6VIU+8Zd2TEmFy7xtyNG+vrCByBNSyYXWvnDkEekwTGQoFKBpH
Y0TgsaFi/IBrBfzrQy0g29llr1XPwy3ztoX3USKkZ2BWfg+HblNa9rNqJcK/
9yja9FiB9/4ift8B2xU5/Ks/ej3qKkwx+Ve8T81dfnIeDYeynI6cvK0cCsnm
QLOOR/SZhe8O1MpRvGf4lDWAh8GQcuiXUhl0bafHgr/i4bXPTzRcxOLC0qfR
5Z0cWrpHVGNvGFxPTnKySTj0+dYvWqBmwLb3zK0kFUjUVm/XDtIwbQvVeHbI
sKYlY/M7ZwYfen9eYCtgp1g178VFq4HBjLOeUZohGs3pK9oeaGnMs0w/3RvK
YNfK1OxwFQWzOr84mWahm/V1jA1uaFR4/pTUxMIr+k+2XksiqqjB26lTBvvB
mIqEISksJXpz8qgcRz87/8OwQwrT27ovE/QKZDakBFeNSeES//PHYj8OxX3G
kSNiEr8GJHxxoIHDmoXxtM2PhHnQGrIxiIe9XBWavp6E+DcuMaRs3M+zilqf
DBJrM4uzkkkBQceePLT2/ce3z5cX9l+lJ//9gfx/HDhYdbKfZad8ved/AFKJ
jN4=
             "], {{9.72359, 4.45312}, {9.264159999999999, 4.45312}, {
             9.264159999999999, 7.6084}, {9.72363, 7.6084}}, {{
             12.973590000000002`, 5.846680000000001}, {11.51221, 
             5.846680000000001}, {11.51221, 4.45312}, {11.05321, 4.45312}, {
             11.05321, 7.6084}, {13.21044, 7.6084}, {13.21044, 
             7.268550000000001}, {11.51221, 7.268550000000001}, {11.51221, 
             6.186549999999999}, {12.973630000000002`, 6.186549999999999}}}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerHTMLIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4j0TK5/wfzN0yHv0pK49SddhVzbnzwXvDR22
KF8tr2vUdbg50+m56TNDh13zgyfMn6vrkJfn4x9xy9BhkQBje8BWXSitDRU3
ctiXlXpIv1XbweqZTXL8JyOHn7eMvZlctB0eremY9eK/kQMDGGhDaWMoLQDn
F+88GNA+lduhOatZ+CJQ/fPVT5LLGTkcLp14LurfC9PPAaXR+Rxw9Qn2QS5t
U5nh5jEsOFxTyciAZh+Mbwjni+woNffvNUSo70m/cOG/Idw87PbC+LoOfF4z
Mn8D1T+bLHr4qqKuQ8bv8LBZfwwdhGSmFwY76zqghzcABAZ3MA==
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}}}, {{{4., 3.}, {4., 18.}, {13., 18.}, {17., 14.}, {17., 3.}, {
            4., 3.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, {{{13., 18.}, {13., 14.5}, {12.99992, 
            14.367367999999999`}, {13.052580000000003`, 14.240146}, {
            13.146359999999998`, 14.146362}, {13.240149999999998`, 
            14.052577}, {13.36737, 13.999922999999999`}, {13.5, 14.}, {17., 
            14.}, {17., 15.}, {14., 18.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14., 
            17.293}, {16.293, 15.}, {14., 15.}, {14., 17.293}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           FilledCurveBox[CompressedData["
1:eJy9VNEOgCAIxOhH+qU+wcde+v+3XG2tDkF06kabhsBxp2zx3CMTUUjfsRDd
65UD/yy5YQt/PC6Zx2ky6q1il4Pw7+FaJE+s5MHZXbYuJMz2ooG3OZGw25gH
GJC5Wb4uNiitv7qUw5BvHAwNVRGA7YIbqzU4QS//A9dwNtxb7cl0FNQvjba1
h3BxtoxAbktjs+oZkhPYrmpQ2gUPPRDZ
            "], CompressedData["
1:eJxkfQV0FNvSdXAIEGCi4909g7tbAhuHAMGDBwgOwd3dJbi7uwR3D+7BITgE
dwv27+qe+/Gv9e5ab71XryctR6r2rtp1rhrZpXbrZF5eXkn4nzEpvbyS8r/L
fGh5rmnazEhXNXhJlLcZP5a03fYyWWZc2P47Z870ZkTn75Nb/evG3WXnUs5N
bkaGtxdud/rmxtcaXbcuS2lGxN2Kyfq+cmN8cJW9bUxmHN+ap/Pyh24sy5hk
TM3MZsw6cydT2B03Xjb/vfhYsBnxk7s2en+F9/vctnTt8mbsrHGyZcozbuyu
MDd9gSpmxD48t/nZYTf63/9+u2BVM1pML/xS3evGzc77LjWpZAYty72tbvxa
++FK9bJmzH1f9ff+tW4Er5unvCxlRq+6hcvELeTf/4pfVbqkGY2v7n/sR7vY
p/XFUdOMEk/a7E4S7UbSNOOdLcPMaL7qTbOG49zovWfsu+PVzPg8jh8y2o3E
fnWmepczY23lUVtHDXUDtcuPrsf375sy/W/fgW7EzLk5sAnv3/vgYkveQW7s
f1O2x8KKZmwO2eYG7aDk4T65a5uR8mq+geX5+y0X8isDmprhdrVtUWOAG6GZ
zOEf2pjBt1ns7M3xiLgStLGlGWtuJdt4uKsbOzn81TuYUaB7wNftLd14/2yt
z55+ZvjNj+5Yrp4bnX0ynrs8wowbO7NtK1PRjb11SjT4O8aMZrzN8hJujG72
8nn1UWZjXgq4kadywYDqbc2Y09k04nAONyb/OnK4Rw0zlu0Jc+XO7Ma5CgOz
tgkx48ntmvkvODlfz6tXyMHxeNOq64z9FjcuONqlGE1bXm+KvxsLBm47P4nz
laT6yPQ1MriRY/DEPR1pT7l9/PRvHzeut1+x8mO4Gf2/nRxwzduNsQNyDUqI
NKP9z/rh85K7kfFOQOsi7cx4tP1BhWZJ3Bictc2BIH7vm0XBueISXcgV+2N+
TV7PLOP104WRibOKN+1txqqsuT4MTerGx6cpblZabUbxF4Med+TzVyTZn8IU
Z0bdnu7ZfxU3svXrNTnJDzP49iVO0j74YUfbWcktyJbwdVpskBu5SqU43Del
BQdW5G9Uid/jV2Lz1qp+FsTmqXWgcEauj7+NT0/ObUHKfS3uLEvH7zkzstnL
ShZjfPk9h5dPcl2PtKBBcv7wjwttHD9GDGtrwaQFo0LevHfh9sPNpy0zLfAd
vHZx0acuhNbtkj6K9rH3mfJnfuTCkgo7P/2eYcGfcolvXj1w4f2V6pEZ51gw
qvzt2MU3XShfaO+Im3MtUM8Ebp9yyYWkcXExOxZZEHfr9INsp/k8+WeVBQXr
5cux9pgL+dZ0mXt1pQUXfnXwybjfhTy21KeT8vq3PbfH/97hQsC2iHRPV1hQ
tOFyx7KlLrwdFt781DoLVhy9WXbKCBeObtzXb91yC6aV4IwOckHf6Of/105s
MfJ9ux4uHFe2dG93md+T/vuvfN35PUX91+a7bkH2EtPODmnnQuoL5lq3f1pQ
qCrfPJLvU/ztDJ+vFoi7SFuXf2/KkG2+yQptcq9u1uouPGma51HJTFbkXd6g
c/sKLtTe7Rj1irazYuroIqVc+LOfO5F2mmVvk00p4cL+s1ywWawoOXZh9p68
vt2N6rlLWhGWstLp9QVdCHrepaxa1oohlQ8NsmdzIYe8V2UrPvYeeXV4oAtN
BnoP/VDNiqDiaQfczsTvb39kwsFIKzq3L+x+Szv5Yj65ixV3vlzxSxLgwozY
dvZ6nay4f4eOy+JC8P0ak2Z3tiIkV9y8Z3YXuv49Ezq9uxVxfQbXGs7fH67c
7uyenlZcDMjYKEMGF5YdG9gvSW8rrv8tfm52KhcONjneJ5J2lqALhc95uRA1
5lCWjvz9uo8hrkyJGup67z2wopsVR20hg7t80nDm+zdzIJ+35bTlS8Y3GmKu
rPDr2diKL3duDOvxTDP8He2BLQrUy3dbM76zvhUH883NEXRNw+dTznTBtAdd
2tbwy2kNVwpP77KzoRXZbter/IO2aWnoeUc7KyIONS8atU/z+AsrZJdt2qDh
a8NFqfrQDmkxLtWMhRr2z19NV2pF2l4NHs6arcG7U/HZjzpYsT2gzdKF0zVU
i1jYEvy+/BseTTpHO2jXZa/44VYsbFdffTpGw5KXU+Y/HG3FqOix2af21BBe
+UeVHdFWmAt9rtG1m4bBhVOlfrbGil6/h9/b0kmDz9Py+7zXWrH4ab+ufdpo
yCb+hnan8EGbdkb+ux50Zlxvf9p5Gr+aMHKWFd1vmD6W6aIhIf5Y5pMLrYb/
6M7xy16/7+wJVjS80a74pY6a4RfHW2G9HPLK0lpDlq6vOi+iXbLjrqbtIjQM
lHjE3y+W9w7XYMt7z51ymBVz0hc4faqKhhUMj61GWrFTj2MacPbTg7dRHN9N
OX5uqqxh3pfIbFkbWfEr9saihrX5vcNPPDxXg/NbKJ0zUx0NLyWgBPN7erTs
f5TXKxbL3fdyUSs2S9yorqGmK/fMXS6u/9Up8iaG0jb/LfVYs+JRg8Bdl6Eh
McOLXZt5vXFI1gNdgjU86u+3qVIZK0oxHFUP0TDeUu3Y+1pcf/eCr6mlNSzK
M2Hcec7nldr9Sh4to6HRMHV940FWfNu8oVD2CpyvmL3Xekyz4sChMgO+8Hs6
fMjuFTvdirl+zsVT+D7IVyn6/nyuh/n1Fq+nHbZe7Ra90oqs5Q+rdfn7oVmO
jl69y4qtd690qMz32b97Usr3O63Yfe5FzJxiGopYDjdWlnL8b171GZKb4/2t
pF+KeVYMTXN37/xADVrw7WKRk6x4/eVt9DdvzROXrRjxZYjPpy8qKvIxa/tZ
0WxvlXRJX6l4JNuR+y9gf0LOyo9VnJs8Cfu5X053W91zS7yK7w56oLpWqNMn
Lhh1T0VEgO/86KpWzFLpgO6oqPl95eD4Qlbsp7s/d12FIs/PbUWhGwxkV1Sk
a5m2jE8OKyIJYwaeVvGrMB0px/9a5apP35xS8cD/yN9w+rPEXBdH7DumonnE
0EE9vf/ZxWTheVlxKuLdn76HVJwRx/Tbgu7jJz/5SPvZpsxPRvyh/5R1vUfF
qU6Fhu7i7/V5jlFh8isde/eLBTnOZjy5d7eKNbM2fqmQ1IrZf6cM/rlORRjh
2xl/qxE31qroHFMxpHw5Kx4/GTxm2RQVjAKtv5W3AotPTV8xQDXWK+21+XZm
fNJVxd1nsZ9HZrbi6sQKV281VHG4ddjsE24rMq/blXJnqGrML6/r+KUqn78i
DL5cXxP8C88ZXUbFnEIVX60J5ffuLlJ3YkEV15d3DfGmv5lQtED0L1XFQU7X
rZZcr7OJrGgP9fXO1HWsFV127skfQrv5gz3funL/1mkRpZ6ivUDW50krJh4c
Xqgl7cjJjkO7Xlghy90rC+1pU7dtSWXDvbODuvtlU3Fz9Phuf7LYkPPW1kxj
s6pYNvlkuroVbbje48rPWNqOoXFZwsL+2bLsqof/+32DE9a5lSJsGPohnSUx
UMXoZGrDw61sCJz3qtAVk4rue3NlKTLEhkbyh78ViFu+SrtknYT9sfEKYsuk
KdiJdkbBxycVfM446a3S24a5efMeLrVOQaj78tlstCOWP0WGlQpuNutdw0F7
5QnzsQVLFPRedanfpEE2ww8uVpCjQ770x8b8s4tc3lT2TLQNNeDb4thyBbLM
C86yQdxn+c0KppjXTByy2IYNG3ln2mfS1Y09tJn2hDvtvGhfis3U8cNpGxzj
kw7SaI+/8SVt78f/fp+y1eY+Q37Z0KHL+1GntyuIOZ7szCra7ZYU+DNop4Lu
Vxf/rvzBhhjC+yT7FazrMHzNTy87xD1ueqygP+HWrbR2jFnGFUb7YP2N1b5n
tuMHUXzSJ7R9CUAq2DGC0XeQv4oiXBZHmv+zTTJuff7Zo4c9jz826n/tibmT
F8/2UMGiu+9q+o21Q+DeFI6/z/q+rk+0+84vGuZ9leP5qe6YuxPt6FR3dbKG
nI9NeU23u0+2Y0CSr5fX7uN1iSuT7CjI1zi8/J+t+8+BChq8zrsva7Qd/Z5k
SLloAOeXw5ed73sxg2tkJdpxfV9kyV/ZjvcFibTaKyj0o818a0E7BD7fb8Xx
6n6oXC3FjsNZOsaVoz3r4sfg3VY7ehcoFhrRlPO/Zky7nqns+CzxO5z2Tdlp
drxMGtHmZk0FA+U9OZ755hwq+yyU87vke/5nPrRzrPW9VF7BMwmUGe0YV6b5
00sFFATvub80G+3vvR4syJRZQRYzgU2iDdX3HN3XxE/BPIlTP2w4db5rslIZ
FHjrC91m8KP0Cio/ZMDg+/hea5yscQoFF+genqSzgyTvar67TmS7H9WjpcUO
rSgRH+3DyTvfO8/vDRb8ddCJyYJ7a9pxmjDj2yYnks5LbV0Uwe+fk7uh/1In
knM7Je9sx8gLHV+bZjrRk9vwxmA7Qvo1WFN4khNbmm2x7uT4t+44aOqlWU6Y
jhJgz7JjXbnOo61TnLhNunBqhR2Ndl4PTMPfx/G17WvteBz2ovnvIU5kRAff
rLvsoNfE8OFOg18etyPw1oVvdUY4YTnRver6h3asHJtufV/aunv/Y0dU3/4r
c9HuHXl9wlKbAx9utJrUf6wTo5VUmc8VciDfsMZ9Ps1wYlrWKjeqlXKAg3/z
Pe0YCVSNHShbInjkh+lO+NWfOah+KwfcTU65dk91olHq7jWPRjnQazqZ4GS+
/4/BHfb3dKBRq5JEjk7ME/jU14HV9c8UOM7fR7oybn7VxwFGy7stxznhk3bH
qn5jHIiaXcQ2a7QThUZx4GIc+Pby8dJ3i5wQdzLrjgNECfWnxDpx7nqitvSN
A3tJYzfccOIoYVzjzw60+fVzYtrnvL84oAQHvjdIvJTiixP6cvvqQLUHRASc
788tzzWtmtqJojV6nTqfkfvlxGqvoLxOXClBYp1DQd2gxqm75+O8CwEuqCD8
a9NMv3g9vSUx6+5i3B/1Wt/3V52otaTGkyplFaypvS1VI9pP53fqXK0G75fe
//Gv3E7I6r3ZXAHJutda2jov60n/1G9S02WJDnB3t1g1ib9/vuLbpAxOAx+N
UJBa/JPNie1Pm4xfP15BticjFp3P4TT80UTP88o4kaz8kYnZxyo4R/i1IYTr
5HK3wjH8+97cFitpn6yoRNwYonjwkROn1vdId2qygivanR+DQ52YlDZV2Rj6
4+Ezy02IquTEhnu9l+7ZRH96MOfwv9WdOCRxkf6xSPCB2rP494NmPT9yb4+C
yeKXaPeShX+Q7798XZplYU7MvTd9zKgz3J8jRv9JQzt83ozhne/zfoTxk2gP
qX59zZgE7s+yzwv3zu7Ewj+vK43/TttU5XMBft9z++qEyn8UlC/OAEA7TPx/
MhW9xZGUcmLWzCwrl6T9Z+twsoCKLYRxKfi9Ou1lfHyyLubd+AcO5BFAU1jF
y3KBcbs2OOB1umfC52AVHzlc92Y5kKa6qeqZCiriCROLjnBgvfxZDdXArd0d
yJ/+WKXjdVXUvpa81rcWDtl130rSnjEv5JJ3NQeOP3t8u2YLFVdm9ci+KdRh
+E3iizmP+AK07yzccSdPTxU5VvxacbutA4fSjEpdjHaExP9xtMVf0m5zNO+X
T6scSCHzHqUiHy1thwNEg+tmtldBNnyw8ql/9uRp9Z8HXXJA0iMn2qk4/iVb
k+ikTvzJV7bv9loqSvy+Fe2XyYkTf2IGfKypGvmpCk5MHLlzQVVeX8TXKrTL
iaaCJ4mPGmVuYLuw34nADtU/TV7O8XgpmQYn6qRYPq3EUhUZ62jjIp7RT6Qu
NjLHShUp+X8neUM/wOHwo11z2qa5Az9xfc3ZN2vKZuKbbsU+rf/hxPLtRb8f
3U6b9OhrohOXScf27FUx5sfHpK+TKVjWv2Pz9ccZDzn947kvFxRctr0o8WXV
6bUvvaEdM56A6pyKMnGDvGqnVcAou3LwBdXA4fTjHYVH8u9rrBtUwuGrYIUQ
eNrZLmX96DYrmLtoCyO7ClmGeWmfkv1wUcWuXtz5QQq6SJy/rMK2M/eZKEVB
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
AP/nC/0B0DiClA==
            "]]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
            3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgAmIBKK1/V4WtUVTBgQEMBBx8fZvMlyRKO0wILlGZ/p/f
4e7s+wYXBcQdzDaENh19KOTwIOM4735rUYcNM2s2n/UVd3hiuv7VmjRhB43m
xU+u7pR2WLC2uXlvpohDvcGHO9UZCg4TxS89VDwj7uDy6+3rA5JKDvWNCg5t
etIOnEde/2I9reyQflnwwFklBYdQwTyjVT4qDhftwj7cjlByWF55XNMqSdnB
etUshVd9Kg6fVF7OOlmuBHWnmsPTT/KX8v0V4HwDkD+uSjusObqcQeK/qoPd
ZhWgX0QdlE3fJs2KVHZYoSR6TIxJwAHdvzA+mA5VdpDclqatf1LawfsEu+1s
ID/526a3W66KOxxgybt7llnJYeI1iRInDTEHp1kbM6x+yzvs21b363yViIPc
nblbb7+TdqgyuTr5Z7qoQwbX3Os3XMUdqr7FLFNrlHA4I5fB2qYj4vB/GsOf
4FnSDmbGQCAs6PBcvnbyMkUFB6HvEb8uqAo4aFy57P5AXcnhkAmPvOBloPxK
vp2SeioOfcrXHgU3CEPc3aDqkLM9NmNdsTicD/P/apmoFOt6VQe+22KpZi8U
HFazJeZ9F1J28PVy3D49RBnDvwBU6r8x
            "]]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerJSIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4j0TK5/wfzN0yHv0pK49SddhVzbnzwXvDR22
KF8tr2vUdbg50+m56TNDh13zgyfMn6vrkJfn4x9xy9BhkQBje8BWXSitDRU3
ctiXlXpIv1XbweqZTXL8JyOHn7eMvZlctB0eremY9eK/kQMDGGhDaWMoLQDn
F+88GNA+lduhOatZ+CJQ/fPVT5LLGTkcLp14LurfC9PPAaXR+Rxw9Qn2QS5t
U5nh5jEsOFxTyciAZh+Mbwjni+woNffvNUSo70m/cOG/Idw87PbC+LoOfF4z
Mn8D1T+bLHr4qqKuQ8bv8LBZfwwdhGSmFwY76zqghzcABAZ3MA==
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}}}, {{{4., 3.}, {4., 18.}, {13., 18.}, {17., 14.}, {17., 3.}, {
            4., 3.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, {{{13., 18.}, {13., 14.5}, {12.99992, 
            14.367367999999999`}, {13.052580000000003`, 14.240146}, {
            13.146359999999998`, 14.146362}, {13.240149999999998`, 
            14.052577}, {13.36737, 13.999922999999999`}, {13.5, 14.}, {17., 
            14.}, {17., 15.}, {14., 18.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14., 
            17.293}, {16.293, 15.}, {14., 15.}, {14., 17.293}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
             1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}}}, {CompressedData["
1:eJxTTMoPSmViYGCQAWIQreD4MfnMXWkHLatJp+tPyDsY7Fbn5/4qi8Hvkk9+
F3VIxMHjYZXIOnY5hyX39/HNKRZ2mP1MdvmLDlmHDczPezR0hRw03/LuM5gp
4yC+/SLDPSdBh9p125LqZ0o75IaBWAIOGx++nLrJR8ohEqyA32F7Uv1N258S
DgxgIODQwuu/fspScYc9JZMlWK7xO6R9f5K4MEzMQSdV8lFEuIDDk+Z5Z1f5
izow+gJV6gs6aEtMvcKZIeJgbxq3y5NHyOHMu5OHnd4KO/hdnBjzz1kYaq6I
w10VtsapzSIOhjO1JKaKiMH5bqqlTLM4xByeXlC6/XOfsENUivV9f18xh9ML
Xbd9/ivkIKEWzLr4kphDua6i/JccIYc5RxQ2FGWIO+ybL6V/94kg1B0SDpZb
TpTtmy8I909km8W1o2sFHWRePzKTOiDpIJx4+LL2UkGHFce8zTsbpRzC+HQ3
zX0v6FB8XeiTI7+0A8camaiUaiGHdTfiy/znSTuAnNErLuxwZRYogKUd5tvo
AJnCDrD42rqs8rjmLhEHAIs2smM=
             "], CompressedData["
1:eJxdlHs01nccx81KWi3PzXPxXPyu1Amtm7Sy3l225VARpSKkqJzUqq2WiSLa
Gq3mJEORRiG7IOQRoiakVWs6OKZ1Gc1qrKto7ft7fs/xx77n/M5zvr/f8/1c
3u/X50uHblkaZmlhYeFHHuHX+oxu1Tojj7lxdxrSZimRbTepk0vkcXmUe8ay
LiWaT7xf9tidh8uh7BeTw1XIvEj9sK2HQ81uvdv6iypY7T0y/8tNHB6Uf/9m
t5caE9VHbo7uYVEzLnNqTqkalunW2uNBLD4oe/zq5gs1DKd6Frp0MbjtLATU
mOMyKL28ozorXYNvjKmHbF7SuPKosX6esx3Wxra576qgMfv80lT6oB00d1ao
yg/TMKV11OL3MSn5cWQfnOZlm9SkxY4lBmVEMo1OjlQWr0MVCRdVRuMdo6PN
mOl66Bvvz/n2NY2s2U430/P0KNsXfa1kJYOh/P4bixgDPFcmurVeYtBUP69o
Y5ABkd2D+f1TWJye3jJrsY8BCzZu6UvIZ9HgOeOLuSEG2Cf0+lQYOIQ/v7fm
hNKAVFJW92cc6p+OD/wqTo+0zbL42iYOuug1U5b16fCMvK57yon62utwNzfj
ItXHITOHPTf0oVY8P8gP79mOgZiIIR5uL+rWFVA67KzOIg7xYj9PdWLdOTxG
D2SvLynQY7LJUB4ThDQbDGi5QtZYHgVxPh7HLOzRdvW5791cTowXYg/NiOXj
nKdwGNGdNP5hiz1UC72H1CUsblcTAy2p4f4tTIuCn1DwHgbnkq36lNYUXAvf
8w+4TqNO5eA78qQ9Nn0ales0n0ZUw4R3v2424Jequwp9I4WXMRFVH8sNYtw4
SvS/XyfWu4/CzNZLkdNqtdg8bU85yPeTpP39pXYgpn+y1UiZedIg+SgRlKJh
kn2kRqyvmIbQRrFeDUKDj8dqBo+i50wPilJhqrDkLIjbf+gdVehTkgbTWPxN
8Cp6oEQsKStFzUHAoitGCXKq0iOJw8/hv3ZH9NpiaYUhofc6h+W7vysLjbU1
c8yhLZiQ1qrA4lDJiplPOMhyz19QOSgwcb+SSMyhobIi2eojOVatm9W1pIXD
YDMBuk4GU7p9HJzCCMn+MrF/jkNaZ8r+hHYp6hJP+TcVs/AP+LHmr+NS/BQp
CMLChGWRFNsOHLz3Tw0D7duCglLRRzC4zhBQ/pSisv3Aq7BbNLZvOPwwOlYm
chxDI36SV95bVnL0bj9rO+hJY17I/WtMhxwFBJ9Qbxpn83Y1TKhUIOK3rQcO
LqCG996C4POp4f+3n3kZGBlGYYZdbQD1hhzxBKs9eRRGCQPoJQOhOqvwIYVA
am7/2iQpBHtuLKLFup5LRJ6raNGnYxJ4uLymX7ky+PxJx629UyUI8iSTYWSw
OvLSv8WDNsP9i/xJIFxTxmcsgkdd1fi024C4NdaykBP58pWIfIAXeWSl5ny8
eK5VKuo/wgHpO8mEDcjMcR1wlFwTrhMV4txaOiCx0e/C6XsKs648TOkybPH/
+/I/ZYc7ZA==
             "]}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerJPEGIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{16.5, 2.}, {4.5, 2.}, {
            3.6719479999999995`, 2.0009000000000015`}, {3.0009040000000002`, 
            2.671949999999999}, {3., 3.5}, {3., 17.5}, {3.0009040000000002`, 
            18.328052}, {3.6719479999999995`, 18.999096}, {4.5, 19.}, {16.5, 
            19.}, {17.32805, 18.999096}, {17.9991, 18.328052}, {18., 17.5}, {
            18., 3.5}, {17.9991, 2.671949999999999}, {17.32805, 
            2.0009000000000015`}, {16.5, 2.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{4.5, 18.}, {16.5, 
            18.}, {16.7764, 18.}, {17., 17.7764}, {17., 17.5}, {17., 3.5}, {
            17., 3.223600000000001}, {16.7764, 3.}, {16.5, 3.}, {4.5, 3.}, {
            4.2236, 3.}, {4., 3.223600000000001}, {4., 3.5}, {4., 17.5}, {4., 
            17.7764}, {4.2236, 18.}, {4.5, 18.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            13.57129, 13.35693}, {12.979560000000001`, 13.357063}, {12.49995, 
            13.836817}, {12.49999, 14.42855}, {12.50003, 15.020283}, {
            12.97972, 15.499966}, {13.57145, 15.50001}, {14.16318, 
            15.500053999999999`}, {14.64294, 15.020443}, {14.643069999999998`,
             14.428709999999999`}, {14.64252, 13.837011}, {14.16299, 
            13.357481}, {13.57129, 13.35693}}}]}, 
          FaceForm[
           RGBColor[0.9451, 0.76471, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {
             1, 3, 3}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQHaDhBaBUrLwflMqqxiB1xkHfqslzZ//a/swDGp
nC91hozDK6c1/ziMVRzk9CzfTbGTcXDybGQ1aFVxMD/16+yRJ9IO0/3DeMKv
qzj49F44f+W1tMOvuqw9JdaqDiElKtP/B8g4cF9fXGDbpepQ7sX++r+PosOa
7tsZDPlaDlpmz0qPFCo6LLn7ItluhZbDCuWG2UdXKzoc+zk7oOOClgPLpuu7
7d8pOqwFqb+v5dA0cbrpRgMlh7hMyZXf32g5ZBpWzPhWquTwQsBCKOOBloPc
wy0PXNcrOahcexTMsEfLQazH6xXLFhUHG6B36vM0HWb3ZzsfvaHmYPF5taXD
Bm2H0KxvDtoC6g4Nuutj8l9rO/yrWB81M0HdIUQimqOIQ8eh91rgVZaN6g7M
IHf803boWTgnI5xRw6HF+/ic9C/aDpogh3poOEREub2yPart8N/u8aHGAg2I
/+q1HSZyJXM73tOGuL9e1WGzZnjFdG4dhzh+taPH9VUdOIoCDvkA+TbZ22Mz
zqk42Knvza+5q+2w7MOCm6X1Kg5FdzRl16zXdhAo6wptNlBxOM+v3OIere3w
xJB56kdg/KDHJwAEHLkm
             "], {{8.415530000000002, 11.}, {12.638179999999998`, 11.}, {
             11.68506, 12.668}, {10.791059999999998`, 11.72708}, {10.62513, 
             11.553912}, {10.36001, 11.522025000000001`}, {10.15775, 
             11.65091}, {9.221229999999998, 12.254909999999999`}}}]}, 
          FaceForm[
           RGBColor[0.29412, 0.83922, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 
             3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBWIQLa1/V4WNUd+BAQyUHE4vdN32+a8onN8kXsuaWSbq
0Dcp/LkEkB/vLrOp8YuIg1PC0wtK0koOK1Zbi92eIuLwJrN9v5q3ksNH/ugq
E1MRB5UzW/5qVys5HBENWLH8v7CDSnqiv/UeJai5IlBaGZXfYABXP0nJaM2j
hQZw8wQLOEKzDhnA7TsRva4u55YB3D2K9tI78z4ZwN173f9/5Of/Bmj+MXRA
9a+hQ4sCu+oZF324ei/5XQv2terDzcuMsRCYtFUfbl/LzG31qU/14e4pfOjg
IcZgAHcvxFwDuH9Q+ED/wtTDwgNmHiy8YPbBwhPmHlh4w9wLiw/0+AMALQSV
4A==
             "], {{5.996060000000001, 10.}, {15.00394, 10.}, {15.00394, 
             16.}, {5.996060000000001, 16.}}}]}, 
          FaceForm[
           RGBColor[0.7098, 0.80392, 0.87451]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {
             1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 
             3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
              1, 0}, {0, 1, 0}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 
             3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0,
              1, 0}, {0, 1, 0}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQAWIQnehv/cc0Utoh78Y2jc0P5R3KFu70U/aVxeDP2j1t
Av8tEQf7SMMY2QRZB6uXtY+z+4UdPNrbDepeyThMsytxrPUWcmioLXl1il3G
YQZIfZSgw4U7zoe+y0k7lHmxv/5fI+CQy7jw64enkg47Xp6vW8Ih4PDtZcUZ
h6USDleeZ2l/ExdwuHBx1bSSFHGHltA9EytZBBx45AWDlTTFHAq+zvmyrxDI
t/kup2cp6nDtUTBDj7ugQ1WXjFJenIhD1f0ft4y1hRxmJy5ec/+NsMOJuZcO
/ooXdmAAAxEHtfXnDBVmizgUXJ7/1+OjKJzfqmVaveCpqMO8/mznozeEHU7J
LUzzUBVzSDp8WTtVUtjh3gmbT+yLxRzamBUjD7QIOTy8ZPhcUlvc4QXDQRnb
f4IOj7NSwqOeiTvMkr4sPG2HINw/PoWhN8uPCjrszCk5558o6VCiMv3/hH2C
Do9KJq3VE5dySMpRPOHIKeRQ77G/VnaGlMOhlFUJIZOEHN4cV/spKC/t8OCw
6vG5RsIO8U6s7eIp0g4MJTP09YH+gMXXn6a7G3IvijgAAJv0uk0=
             "], {{8.27593, 5.600999999999999}, {8.27593, 
             4.0764499999999995`}, {7.7903, 4.0764499999999995`}, {7.7903, 
             7.970409999999999}, {9.149, 7.970409999999999}, {
             9.495699000000002, 7.990780000000001}, {9.836413, 7.8734}, {
             10.097, 7.643809999999998}, {10.32893, 7.4181300000000014`}, {
             10.453540000000002`, 7.104199999999999}, {10.43952, 
             6.780890000000001}, {10.46035, 6.45471}, {10.337919999999999`, 
             6.13566}, {10.10423, 5.90714}, {9.834327999999998, 
             5.687319999999998}, {9.491156, 5.57794}, {9.14383, 5.60102}}, {{
             8.27593, 6.020399999999999}, {9.149, 6.020399999999999}, {
             9.365609000000003, 6.0059000000000005`}, {9.579484000000003, 
             6.0753699999999995`}, {9.746219999999997, 6.2143999999999995`}, {
             9.892242000000001, 6.3635}, {9.967786000000002, 
             6.567780000000001}, {9.95391, 6.776010000000001}, {9.963729, 
             6.982559999999999}, {9.888697, 7.184149999999999}, {
             9.746219999999997, 7.334009999999999}, {9.592580000000002, 
             7.478730000000002}, {9.387888, 7.556730000000002}, {9.1769, 
             7.55095}, {8.2759, 7.55095}}, {{12.779349999999999`, 
             5.8757800000000024`}, {11.18246, 5.8757800000000024`}, {11.18246,
              4.495850000000001}, {13.037669999999999`, 4.495850000000001}, {
             13.037669999999999`, 4.0764499999999995`}, {10.69683, 
             4.0764499999999995`}, {10.69683, 7.970409999999999}, {13.01235, 
             7.970409999999999}, {13.01235, 7.5510100000000016`}, {11.18246, 
             7.5510100000000016`}, {11.18246, 6.29641}, {12.779349999999999`, 
             6.29641}}, CompressedData["
1:eJxlk2tMUwcYhos2RYXNnlLbCr1gClJ7enowKIg4eQUVNYgFB5F0Gmy8kCIQ
OorMxigbImZeQIMixcpFx7wEAaGwSbSiBfFSdU6wKAw3ZaZMhCETjbgds4k/
9iZfvjw/3zzfN0OXHrdxAovFmsfM+/1vAjHz/kLJgUQeZAL9yuGLNHj88NZH
RQSuOvjzz62nsSDmbuEX77ioxPFrh16qYSke0SmquKBtC+cbjWrEpZRsLY3g
YkaNIbnwOYV87+grgwQX5R4ubd8GCkvP2qtYIi4cLZas0TAVFE1rYr+ZzEVt
0C5HiooE33wgJXIjgebFIx02qxK59sc3z+V5IX9R0tM7BiWKK9tepP7IR/ze
4ZByjRKlLy8ONbgL8F2AamhnnBLL+grDRWuE4yxoFXwtrhchqKI+ZDRCiYrc
o9YdJ70xqOE/89qjRM+eRDrvoBj3nO29iukkBlLfnJfNkiLk6ZQXhnISzU37
OINZMnxLsUMVGSrkZK+9lCT0hU4R0BW/jIK849fVLE9fJGe61waNUJjdb9fE
8H1RUDY6u8+ixqZfpl3+2yrDidOTKwbkNEqOMnFK8ba105JYQSPbuN/N2S9B
qyam/swgDevw2M/Zp8T44IOVnsO2r/JBlCAwR+tOj3PVDZ1u2I3G6ci0PJ9A
MaR9NzxqbqvhHRl6t3qCBLWdF8J7TGp0aCdq/YslWNp+5ktPhRoFmbeemCkp
lnS7+zb8QKHY302v/0qKhs2H2d8vpzAzWNaZp5eix4+TU3RehTo/rKRMUtiy
OZ+MyVWopnldhgEJfn82ZDI7SHA5FtPUV2IUNrX9tDuNRA9TN6HOB9MrjZ/P
XUTijzSLqyDMGzUa5jCiSdi6Ey88bxGNs+OIMEm2/T9fESTyj83KXDdRgLIV
t6TJRhJsIakP3McHO+FTqq6bxLu/jL2lsV6gihrlpcEqBGcYLkXG8rA4oXFb
zHUVXOw5RHAzAeJtun/YJgrRGfHOrXYC5s/uTPFk+p74Myv3XguB212pwhIP
5n7bQx4+ekDA72b9GKll2FVgfszhYUHZluvTGH9PApiHoHkY6LeFyrvUcL3v
Y+KhkWNdUTOJxpvlDavafvvIvdv41VHrBdgtcDperab+x/OWRBleTxWN+/3A
/wB+8G7/
             "]}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerMIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4j0TK5/wfzN0yHv0pK49SddhVzbnzwXvDR22
KF8tr2vUdbg50+m56TNDh13zgyfMn6vrkJfn4x9xy9BhkQBje8BWXSitDRU3
ctiXlXpIv1XbweqZTXL8JyOHn7eMvZlctB0eremY9eK/kQMDGGhDaWMoLQDn
F+88GNA+lduhOatZ+CJQ/fPVT5LLGTkcLp14LurfC9PPAaXR+Rxw9Qn2QS5t
U5nh5jEsOFxTyciAZh+Mbwjni+woNffvNUSo70m/cOG/Idw87PbC+LoOfF4z
Mn8D1T+bLHr4qqKuQ8bv8LBZfwwdhGSmFwY76zqghzcABAZ3MA==
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}}}, {{{4., 3.}, {4., 18.}, {13., 18.}, {17., 14.}, {17., 3.}, {
            4., 3.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, {{{13., 18.}, {13., 14.5}, {12.99992, 
            14.367367999999999`}, {13.052580000000003`, 14.240146}, {
            13.146359999999998`, 14.146362}, {13.240149999999998`, 
            14.052577}, {13.36737, 13.999922999999999`}, {13.5, 14.}, {17., 
            14.}, {17., 15.}, {14., 18.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14., 
            17.293}, {16.293, 15.}, {14., 15.}, {14., 17.293}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
             0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
             3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
             3}}}, {CompressedData["
1:eJxllAtMk1cUxyvSCSgOaUtftP2+rxT5KAXFqUVE/tOCVREVg07GBGFA6iwG
EAEHuimE1SG+R1ScgFJBqCAL4Mx4jIGOKuqc4nyhNgMVxmM8dFMHaxfDEj3J
yc0v59yce3L/55BRm0NirBgMxjKzW07H992OJc52wa2q6nr1bzKE/lhyKnil
C5xrFMZNqW44sng08pGPCwx1K0IL+XKsqptdGTooRWyB92hGjQJUPeu79ekU
jim/f1io9EDbperCqCAKT2dv1XX/I4eClAxvaidAbdVfTzvujlPBYG2YRaDd
mBnRXesBZsvemSltEsxx6Ts3nKCAXD3LaXm2GOFh9rrPc7wwZN0UfG6pAJNr
011kGQrkje3b/moeF/n6a1PPd7mDDt/bNFLCweUd6oYMezfEF9+OjY6ZhtSC
4LQtx2SIfz7JqPWdgrq1hqC/Wigw/jMb3OQZTp7RSMZ56vwXYk8fx3c46bbj
4IebHfFgElGtWy1Dj/PEqtv3nJDVs+q8mDkdyQd51ms8+fBsCY15yKGxZX10
XkkHH2yV+YbMA2OpFWFHHMTIfW/ASd2owDO15xgpkiBIbxcoM8f1vRHrNFEE
Znz5ccqQNY2fFjcfUg8S2JArbqjVTMdX7bvnXNJJseJwP1/X6IIby6McPkpz
ha6/uZybRKGy/AOaaaBhena4asp+Aoy1VdHSARr9fuGJ9zUELtjR/qWB7hAr
41SaCvE7/Jn6fvSzRTSsbHdLos8KwTm7+PG2YWfEWqxLhF8t9f4WwOGTlQ+9
J4lBt3Ul8F7zMBznH6Iyx6e0JQs0tlw0ZoiUcZkitEXmqNlGLjaG2F2oU0lQ
cWDvA2Y3D3ZanzzTRgKa/b3p/qECPHlV+ucNexJZ83cKaV8+vOJPTvghmYSX
cldDxGsuvk4YdWU3kchgai4WlTrBSp7tdKePRL1wst0uby72DM0tdEigcPB0
ub7nDhfVneG7y7opSAsVT0LyeTgaVtPOXSeFdt+SwKtWPPSY5ggafaVY9MQs
zDMsPI1hX1b4UZjad/Wudi4Lz93MQoohoev8Zs2iRDaMnI5OagGJm0ULWkV6
DlQve3sabUn8/MUfI33XnLDjYtZEspVASlxvzWQ/Dp5eHM6U1UuwzPKvAWzk
h54oM6SKsDDpeGCYHRvNCw2ajmlCrGf7Dcy04cH8WmN9mRAs5kvVt2xnpAYM
NBy+IkTbtpmHWPYEmoyFATVJQhSZxnJLeAQKHkUF2McKIXdk3RyQEfh9e3YR
IoTj88SYdyWPGylE5WnR6NEcEpR3uWlPkBAjQ3qKE+v6RtcMhCsdDjCD6HF+
8Uup/ESxFDZmea7MF2BGuipI9+l0PJ+g1pqa+fCxpBNueBmubRk9wIdk2mpK
1/E/uxYX3Ft2lB7PP7Qz3kuT7o4z8hOdadeFqF5aqcxfIkeXpeFR0Zu6Hrib
aJ4Ycx+PK1oFI6CRZaPMdL9FwqzKzQPFrvCn9CrHOine3k//Ak892E8=
             "], {{9.617389999999999, 11.266640000000002`}, {
             9.355364000000002, 11.506809}, {9.073421, 11.7243}, {8.7746, 
             11.91677}, {8.7746, 11.91677}, {8.66219, 12.48534}, {
             8.587309999999999, 12.73394}, {9.09304, 13.23107}, {9.16793, 
             13.30761}, {9.65491, 13.785590000000001`}, {9.687847, 
             12.945878}, {9.675329, 12.104999}, {9.61741, 
             11.266640000000002`}}, {{8.50275, 9.731640000000002}, {
             9.072936000000002, 9.76756}, {9.631433, 9.558930000000002}, {
             10.038419999999999`, 9.15798}, {9.701419999999999, 9.06244}, {
             9.66393, 9.043289999999999}, {9.32679, 8.947599999999998}, {
             9.042788, 9.148219999999998}, {8.700315999999999, 9.24909}, {
             8.352910000000001, 9.23443}, {8.391562, 9.40336}, {8.441624, 
             9.56948}, {8.50275, 9.731640000000002}}}]}, 
          FaceForm[
           RGBColor[0.86667, 0.066667, 0.]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerMXIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4j0TK5/wfzN0yHv0pK49SddhVzbnzwXvDR22
KF8tr2vUdbg50+m56TNDh13zgyfMn6vrkJfn4x9xy9BhkQBje8BWXSitDRU3
ctiXlXpIv1XbweqZTXL8JyOHn7eMvZlctB0eremY9eK/kQMDGGhDaWMoLQDn
F+88GNA+lduhOatZ+CJQ/fPVT5LLGTkcLp14LurfC9PPAaXR+Rxw9Qn2QS5t
U5nh5jEsOFxTyciAZh+Mbwjni+woNffvNUSo70m/cOG/Idw87PbC+LoOfF4z
Mn8D1T+bLHr4qqKuQ8bv8LBZfwwdhGSmFwY76zqghzcABAZ3MA==
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}}}, {{{4., 3.}, {4., 18.}, {13., 18.}, {17., 14.}, {17., 3.}, {
            4., 3.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, {{{13., 18.}, {13., 14.5}, {12.99992, 
            14.367367999999999`}, {13.052580000000003`, 14.240146}, {
            13.146359999999998`, 14.146362}, {13.240149999999998`, 
            14.052577}, {13.36737, 13.999922999999999`}, {13.5, 14.}, {17., 
            14.}, {17., 15.}, {14., 18.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14., 
            17.293}, {16.293, 15.}, {14., 15.}, {14., 17.293}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
             0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
             3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
             3}}}, {CompressedData["
1:eJxllAtMk1cUxyvSCSgOaUtftP2+rxT5KAXFqUVE/tOCVREVg07GBGFA6iwG
EAEHuimE1SG+R1ScgFJBqCAL4Mx4jIGOKuqc4nyhNgMVxmM8dFMHaxfDEj3J
yc0v59yce3L/55BRm0NirBgMxjKzW07H992OJc52wa2q6nr1bzKE/lhyKnil
C5xrFMZNqW44sng08pGPCwx1K0IL+XKsqptdGTooRWyB92hGjQJUPeu79ekU
jim/f1io9EDbperCqCAKT2dv1XX/I4eClAxvaidAbdVfTzvujlPBYG2YRaDd
mBnRXesBZsvemSltEsxx6Ts3nKCAXD3LaXm2GOFh9rrPc7wwZN0UfG6pAJNr
011kGQrkje3b/moeF/n6a1PPd7mDDt/bNFLCweUd6oYMezfEF9+OjY6ZhtSC
4LQtx2SIfz7JqPWdgrq1hqC/Wigw/jMb3OQZTp7RSMZ56vwXYk8fx3c46bbj
4IebHfFgElGtWy1Dj/PEqtv3nJDVs+q8mDkdyQd51ms8+fBsCY15yKGxZX10
XkkHH2yV+YbMA2OpFWFHHMTIfW/ASd2owDO15xgpkiBIbxcoM8f1vRHrNFEE
Znz5ccqQNY2fFjcfUg8S2JArbqjVTMdX7bvnXNJJseJwP1/X6IIby6McPkpz
ha6/uZybRKGy/AOaaaBhena4asp+Aoy1VdHSARr9fuGJ9zUELtjR/qWB7hAr
41SaCvE7/Jn6fvSzRTSsbHdLos8KwTm7+PG2YWfEWqxLhF8t9f4WwOGTlQ+9
J4lBt3Ul8F7zMBznH6Iyx6e0JQs0tlw0ZoiUcZkitEXmqNlGLjaG2F2oU0lQ
cWDvA2Y3D3ZanzzTRgKa/b3p/qECPHlV+ucNexJZ83cKaV8+vOJPTvghmYSX
cldDxGsuvk4YdWU3kchgai4WlTrBSp7tdKePRL1wst0uby72DM0tdEigcPB0
ub7nDhfVneG7y7opSAsVT0LyeTgaVtPOXSeFdt+SwKtWPPSY5ggafaVY9MQs
zDMsPI1hX1b4UZjad/Wudi4Lz93MQoohoev8Zs2iRDaMnI5OagGJm0ULWkV6
DlQve3sabUn8/MUfI33XnLDjYtZEspVASlxvzWQ/Dp5eHM6U1UuwzPKvAWzk
h54oM6SKsDDpeGCYHRvNCw2ajmlCrGf7Dcy04cH8WmN9mRAs5kvVt2xnpAYM
NBy+IkTbtpmHWPYEmoyFATVJQhSZxnJLeAQKHkUF2McKIXdk3RyQEfh9e3YR
IoTj88SYdyWPGylE5WnR6NEcEpR3uWlPkBAjQ3qKE+v6RtcMhCsdDjCD6HF+
8Uup/ESxFDZmea7MF2BGuipI9+l0PJ+g1pqa+fCxpBNueBmubRk9wIdk2mpK
1/E/uxYX3Ft2lB7PP7Qz3kuT7o4z8hOdadeFqF5aqcxfIkeXpeFR0Zu6Hrib
aJ4Ycx+PK1oFI6CRZaPMdL9FwqzKzQPFrvCn9CrHOine3k//Ak892E8=
             "], {{9.617389999999999, 11.266640000000002`}, {
             9.355364000000002, 11.506809}, {9.073421, 11.7243}, {8.7746, 
             11.91677}, {8.7746, 11.91677}, {8.66219, 12.48534}, {
             8.587309999999999, 12.73394}, {9.09304, 13.23107}, {9.16793, 
             13.30761}, {9.65491, 13.785590000000001`}, {9.687847, 
             12.945878}, {9.675329, 12.104999}, {9.61741, 
             11.266640000000002`}}, {{8.50275, 9.731640000000002}, {
             9.072936000000002, 9.76756}, {9.631433, 9.558930000000002}, {
             10.038419999999999`, 9.15798}, {9.701419999999999, 9.06244}, {
             9.66393, 9.043289999999999}, {9.32679, 8.947599999999998}, {
             9.042788, 9.148219999999998}, {8.700315999999999, 9.24909}, {
             8.352910000000001, 9.23443}, {8.391562, 9.40336}, {8.441624, 
             9.56948}, {8.50275, 9.731640000000002}}}]}, 
          FaceForm[
           RGBColor[0.86667, 0.066667, 0.]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerNBIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}}}, {{{18., 17.5}, {18., 18.328427}, {
            17.328429999999997`, 19.}, {16.5, 19.}, {4.5, 19.}, {3.671573, 
            19.}, {3., 18.328427}, {3., 17.5}, {3., 3.5}, {3., 
            2.6715700000000027`}, {3.671573, 2.}, {4.5, 2.}, {16.5, 2.}, {
            17.328429999999997`, 2.}, {18., 2.6715700000000027`}, {18., 
            3.5}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 
             1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
             0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
             0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {{{5., 12.}, {5., 11.}, {2., 11.}, {2., 12.}}, {{2., 
             10.}, {2., 9.}, {5., 9.}, {5., 10.}}, {{2., 14.}, {2., 13.}, {5.,
              13.}, {5., 14.}}, {{2., 8.}, {2., 7.}, {5., 7.}, {5., 8.}}, {{
             2., 6.}, {2., 5.}, {5., 5.}, {5., 6.}}, {{5., 18.}, {2., 18.}, {
             2., 17.}, {5., 17.}, {5., 18.}}, {{5., 4.}, {2., 4.}, {2., 3.}, {
             5., 3.}, {5., 4.}}, {{2., 16.}, {2., 15.}, {5., 15.}, {5., 
             16.}}}]}, 
          FaceForm[
           RGBColor[0.86667, 0.066667, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{4.5, 18.}, {16.5, 
            18.}, {16.7764, 18.}, {17., 17.7764}, {17., 17.5}, {17., 3.5}, {
            17., 3.223600000000001}, {16.7764, 3.}, {16.5, 3.}, {4.5, 3.}, {
            4.2236, 3.}, {4., 3.223600000000001}, {4., 3.5}, {4., 17.5}, {4., 
            17.7764}, {4.2236, 18.}, {4.5, 18.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
              1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {
             0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {
             0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
             0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
             0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {
             0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {
             0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
             0}, {0, 1, 0}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGAQAWIQ3fTo+Izdx3QcQlPvix78r+KgN2HBD8Nv+g5/JioZ
rZmk4fBh0XqFsx7aDp/Ymc/vna7p8OfFlannD2k7bI7jeeoSrefwr2J91MwE
dYeItT4/lubpONysiZHW+qbiMOeIwoYiDwOHqR/fG+v1KDlM8HQ7dwgo337E
dppdiIzD+e/Bj5cC9bs/rBJZ5y7r8AmoTGaGpoNyTkXV0jfCDjnndTgDJms4
TD91W9DPW8rhmF7gXlMGVYcYBcePyUB51ry7Z4NzFR2u/VJaqAvU39DULWqa
oeBwaMUSP4dgGYe603P0uj3FHTbNfb/8WLeSQ15Y7bptStIOX70i2yyA7pv0
tsbe9J6QwzFv805HoPslpl7hzADKH0lZlRAC9F/Dwbwb2zzEHbafeblpBtD/
/AJnLj5OV3AQWrr3oDgwfKYaXP62PkfRAQBEtY9z
             "], {{14.80901, 9.345419999999999}, {13.743519999999998`, 
             9.70987}, {13.016919999999999`, 10.654219999999999`}, {
             13.952580000000003`, 10.306610000000001`}}, {{11.37113, 
             7.1364199999999975`}, {10.71228, 6.004419999999998}, {10.71228, 
             7.177}, {11.39769, 8.1788}}, {{9.82133, 12.979130000000001`}, {
             8.690819999999999, 13.38113}, {8.03666, 14.26438}, {
             9.224139999999998, 13.742750000000001`}}, {{11.738219999999997`, 
             13.74254}, {12.92535, 14.26367}, {12.27094, 
             13.381170000000001`}, {11.140869999999998`, 12.97931}}, {{
             13.176730000000001`, 12.69978}, {12.60295, 11.88607}, {12.63669, 
             13.113}, {13.30869, 14.019279999999998`}}, {{10.48084, 
             7.6483799999999995`}, {9.600349999999999, 8.933119999999999}, {
             10.48084, 10.12788}, {11.36133, 8.933119999999999}}, {{8.82607, 
             11.30619}, {8.782, 12.866109999999999`}, {10.24941, 
             12.343890000000002`}, {10.24941, 10.82582}}, {{10.71228, 
             12.343890000000002`}, {12.17853, 12.866109999999999`}, {12.13679,
              11.30619}, {10.71228, 10.82582}}, {{7.78548, 12.70037}, {
             7.653829999999999, 14.01924}, {8.325000000000001, 13.113}, {
             8.35872, 11.886630000000002`}}, {{10.113909999999999`, 
             10.394459999999999`}, {9.233909999999998, 9.200330000000001}, {
             7.73775, 9.64138}, {8.6871, 10.875230000000002`}}, {{9.56485, 
             8.17925}, {10.24941, 7.17699}, {10.24941, 6.00399}, {
             9.588669999999999, 7.136619999999999}}, {{10.847769999999999`, 
             10.394459999999999`}, {12.27461, 10.875230000000002`}, {
             13.223969999999998`, 9.64138}, {11.727799999999998`, 
             9.200330000000001}}, {{15.12577, 12.00872}, {14.018169999999998`,
              10.766060000000001`}, {12.710669999999999`, 
             11.251830000000004`}, {13.495080000000002`, 12.36425}}, {{
             10.4809, 15.38392}, {11.32134, 13.94576}, {10.48092, 12.872}, {
             9.640999999999998, 13.945920000000001`}}, {{5.83618, 12.00977}, {
             7.467, 12.364930000000001`}, {8.251059999999999, 
             11.251930000000003`}, {6.94357, 10.766800000000002`}}, {{7.00905,
              10.30738}, {7.94515, 10.65472}, {7.2182, 9.70992}, {
             6.152049999999999, 9.34592}}, {{6.25151, 8.900640000000001}, {
             7.36125, 9.27952}, {8.546149999999999, 8.93023}, {
             7.5544899999999995`, 8.616499999999998}}, {{7.776040000000001, 
             8.210890000000001}, {9.1027, 8.630609999999999}, {
             9.136519999999999, 7.219290000000001}, {7.60984, 
             6.5491399999999995`}}, {{11.82447, 7.218990000000002}, {11.85887,
              8.630529999999998}, {13.1852, 8.21038}, {13.3511, 
             6.548449999999999}}, {{13.40685, 8.61593}, {12.41507, 8.93009}, {
             13.600359999999998`, 9.2795}, {14.710359999999998`, 8.89981}}}]}, 
          FaceForm[
           RGBColor[0.86667, 0.066667, 0.]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerPacletInfoIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}}}, {{{18., 17.5}, {18., 18.328427}, {
            17.328429999999997`, 19.}, {16.5, 19.}, {4.5, 19.}, {3.671573, 
            19.}, {3., 18.328427}, {3., 17.5}, {3., 3.5}, {3., 
            2.6715700000000027`}, {3.671573, 2.}, {4.5, 2.}, {16.5, 2.}, {
            17.328429999999997`, 2.}, {18., 2.6715700000000027`}, {18., 
            3.5}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 
             1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
             0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
             0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {{{5., 12.}, {5., 11.}, {2., 11.}, {2., 12.}}, {{2., 
             10.}, {2., 9.}, {5., 9.}, {5., 10.}}, {{2., 14.}, {2., 13.}, {5.,
              13.}, {5., 14.}}, {{2., 8.}, {2., 7.}, {5., 7.}, {5., 8.}}, {{
             2., 6.}, {2., 5.}, {5., 5.}, {5., 6.}}, {{5., 18.}, {2., 18.}, {
             2., 17.}, {5., 17.}, {5., 18.}}, {{5., 4.}, {2., 4.}, {2., 3.}, {
             5., 3.}, {5., 4.}}, {{2., 16.}, {2., 15.}, {5., 15.}, {5., 
             16.}}}]}, 
          FaceForm[
           RGBColor[0.86667, 0.066667, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{4.5, 18.}, {16.5, 
            18.}, {16.7764, 18.}, {17., 17.7764}, {17., 17.5}, {17., 3.5}, {
            17., 3.223600000000001}, {16.7764, 3.}, {16.5, 3.}, {4.5, 3.}, {
            4.2236, 3.}, {4., 3.223600000000001}, {4., 3.5}, {4., 17.5}, {4., 
            17.7764}, {4.2236, 18.}, {4.5, 18.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3,
              3}}, {{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}, {{0, 2, 0}, {
             0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}, {1, 3, 3}}, {{1, 4, 3}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}, {{0, 2, 
             0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {1, 
             3, 3}, {0, 1, 0}}}, {{{6., 13.5}, {6., 11.}, {10., 11.}, {10., 
             15.}, {7.5, 15.}, {6.671948, 14.999096000000002`}, {
             6.000903999999999, 14.328052}, {6., 13.5}}, {{9., 12.}, {7., 
             12.}, {7., 13.5}, {7.000358, 13.775994}, {7.224005999999999, 
             13.999642}, {7.5, 14.}, {9., 14.}}, {{13.5, 15.}, {11., 15.}, {
             11., 11.}, {15., 11.}, {15., 13.5}, {14.9991, 14.328052}, {
             14.32805, 14.999096000000002`}, {13.5, 15.}}, {{14., 12.}, {12., 
             12.}, {12., 14.}, {13.5, 14.}, {13.77599, 13.999642}, {
             13.999640000000001`, 13.775994}, {14., 13.5}}, {{6., 7.5}, {
             6.000903999999999, 6.671950000000001}, {6.671948, 6.0009}, {7.5, 
             6.}, {10., 6.}, {10., 10.}, {6., 10.}}, {{7., 9.}, {9., 9.}, {9.,
              7.}, {7.5, 7.}, {7.224005999999999, 7.000359999999999}, {
             7.000358, 7.22401}, {7., 7.5}}, {{11., 6.}, {13.5, 6.}, {
             14.32805, 6.0009}, {14.9991, 6.671950000000001}, {15., 7.5}, {
             15., 10.}, {11., 10.}}, {{12., 9.}, {14., 9.}, {14., 7.5}, {
             13.999640000000001`, 7.22401}, {13.77599, 7.000359999999999}, {
             13.5, 7.}, {12., 7.}}}]}, 
          FaceForm[
           RGBColor[0.86667, 0.066667, 0.]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerPNGIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{16.5, 2.}, {4.5, 2.}, {
            3.6719479999999995`, 2.0009000000000015`}, {3.0009040000000002`, 
            2.671949999999999}, {3., 3.5}, {3., 17.5}, {3.0009040000000002`, 
            18.328052}, {3.6719479999999995`, 18.999096}, {4.5, 19.}, {16.5, 
            19.}, {17.32805, 18.999096}, {17.9991, 18.328052}, {18., 17.5}, {
            18., 3.5}, {17.9991, 2.671949999999999}, {17.32805, 
            2.0009000000000015`}, {16.5, 2.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{4.5, 18.}, {16.5, 
            18.}, {16.7764, 18.}, {17., 17.7764}, {17., 17.5}, {17., 3.5}, {
            17., 3.223600000000001}, {16.7764, 3.}, {16.5, 3.}, {4.5, 3.}, {
            4.2236, 3.}, {4., 3.223600000000001}, {4., 3.5}, {4., 17.5}, {4., 
            17.7764}, {4.2236, 18.}, {4.5, 18.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            13.57129, 13.35693}, {12.979560000000001`, 13.357063}, {12.49995, 
            13.836817}, {12.49999, 14.42855}, {12.50003, 15.020283}, {
            12.97972, 15.499966}, {13.57145, 15.50001}, {14.16318, 
            15.500053999999999`}, {14.64294, 15.020443}, {14.643069999999998`,
             14.428709999999999`}, {14.64252, 13.837011}, {14.16299, 
            13.357481}, {13.57129, 13.35693}}}]}, 
          FaceForm[
           RGBColor[0.9451, 0.76471, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {
             1, 3, 3}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQHaDhBaBUrLwflMqqxiB1xkHfqslzZ//a/swDGp
nC91hozDK6c1/ziMVRzk9CzfTbGTcXDybGQ1aFVxMD/16+yRJ9IO0/3DeMKv
qzj49F44f+W1tMOvuqw9JdaqDiElKtP/B8g4cF9fXGDbpepQ7sX++r+PosOa
7tsZDPlaDlpmz0qPFCo6LLn7ItluhZbDCuWG2UdXKzoc+zk7oOOClgPLpuu7
7d8pOqwFqb+v5dA0cbrpRgMlh7hMyZXf32g5ZBpWzPhWquTwQsBCKOOBloPc
wy0PXNcrOahcexTMsEfLQazH6xXLFhUHG6B36vM0HWb3ZzsfvaHmYPF5taXD
Bm2H0KxvDtoC6g4Nuutj8l9rO/yrWB81M0HdIUQimqOIQ8eh91rgVZaN6g7M
IHf803boWTgnI5xRw6HF+/ic9C/aDpogh3poOEREub2yPart8N/u8aHGAg2I
/+q1HSZyJXM73tOGuL9e1WGzZnjFdG4dhzh+taPH9VUdOIoCDvkA+TbZ22Mz
zqk42Knvza+5q+2w7MOCm6X1Kg5FdzRl16zXdhAo6wptNlBxOM+v3OIere3w
xJB56kdg/KDHJwAEHLkm
             "], {{8.415530000000002, 11.}, {12.638179999999998`, 11.}, {
             11.68506, 12.668}, {10.791059999999998`, 11.72708}, {10.62513, 
             11.553912}, {10.36001, 11.522025000000001`}, {10.15775, 
             11.65091}, {9.221229999999998, 12.254909999999999`}}}]}, 
          FaceForm[
           RGBColor[0.29412, 0.83922, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 
             3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBWIQLa1/V4WNUd+BAQyUHE4vdN32+a8onN8kXsuaWSbq
0Dcp/LkEkB/vLrOp8YuIg1PC0wtK0koOK1Zbi92eIuLwJrN9v5q3ksNH/ugq
E1MRB5UzW/5qVys5HBENWLH8v7CDSnqiv/UeJai5IlBaGZXfYABXP0nJaM2j
hQZw8wQLOEKzDhnA7TsRva4u55YB3D2K9tI78z4ZwN173f9/5Of/Bmj+MXRA
9a+hQ4sCu+oZF324ei/5XQv2terDzcuMsRCYtFUfbl/LzG31qU/14e4pfOjg
IcZgAHcvxFwDuH9Q+ED/wtTDwgNmHiy8YPbBwhPmHlh4w9wLiw/0+AMALQSV
4A==
             "], {{5.996060000000001, 10.}, {15.00394, 10.}, {15.00394, 
             16.}, {5.996060000000001, 16.}}}]}, 
          FaceForm[
           RGBColor[0.7098, 0.80392, 0.87451]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
             0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}}}, {{{5.529, 5.57807}, {5.529, 
             4.053519999999999}, {5., 4.053519999999999}, {5., 
             7.947459999999998}, {6.48, 7.947459999999998}, {6.852703, 
             7.9696}, {7.220449, 7.853290000000001}, {7.51264, 
             7.620859999999999}, {7.761139, 7.404469999999998}, {7.898312, 
             7.0872199999999985`}, {7.88574, 6.757950000000001}, {
             7.9057260000000005`, 6.425880000000001}, {7.770876, 
             6.103259999999999}, {7.520519999999999, 5.88419}, {7.218853, 
             5.661900000000001}, {6.848291000000001, 5.553469999999999}, {
             6.47438, 5.57807}}, {{5.529, 5.9974799999999995`}, {6.48, 
             5.9974799999999995`}, {6.713101, 5.9819900000000015`}, {
             6.943998000000001, 6.0508500000000005`}, {7.13054, 6.19148}, {
             7.287083999999999, 6.33478}, {7.370268000000001, 6.54129}, {
             7.35676, 6.753090000000002}, {7.365949999999999, 6.96311}, {
             7.283390000000001, 7.16676}, {7.13054, 7.311090000000002}, {
             6.957866, 7.457780000000001}, {6.736853000000001, 7.5351}, {
             6.51039, 7.528030000000001}, {5.529, 7.528030000000001}}, {{
             11.87171, 4.05348}, {11.3399, 4.05348}, {9.319080000000001, 
             7.05438}, {9.319080000000001, 4.05348}, {8.787279999999999, 
             4.05348}, {8.787279999999999, 7.947459999999998}, {
             9.319080000000001, 7.947459999999998}, {11.345, 
             4.933299999999999}, {11.345, 7.947459999999998}, {
             11.871730000000001`, 7.947459999999998}}, CompressedData["
1:eJxlkXtMU3cUx6soT4V7y6MV6QOYj97LvZUFWAdGv0EkmJkNyibo8LkRO8qs
DzYsCr7oWHRCFUQRplINtloxomFqRAU6FohjAXEK69RKwaLjNcwgxamXGNkf
O8nJySe/nOT8vp/gDRpl+lQej6fgemK+rQVI9GlzeMfycfKZvtxWK0dtIH80
NYfEvzdMCbokOV5qkw95dhPoG95R/srKoqm9gDUWEbB5FZv2JrFYE3/J2k4R
+LZwSufzOgZCh6/28Asf7Jz+VZNBxmBzb8q23TwCjk6zM+1gGBR3/7lo5t4F
e4NKFozQyBMpNsYtI6C1+7ieUNMwDLjou+wEZOur+tf2UWgdeTxgziXx5FzN
4P7dFOx+ouaetXykGiN/jVlEQWpp9YvW+MJquONa9kIGe1dieOtJP+jVS35W
/CbD4Tj56dQBf0Q9Hml0b5PhiT2vwADBJNdYXFqqKoQw1UfMkNTLcFN/78KJ
4kBIZywcFXtTMFz5YKwhPwjH50zJyDBR2J/5dNxEilHp9ezz3jgafJ/55VvT
JcgYT1lx/L0wfNNYu7RsphSeOndFvieDLZ91Zi/lSaEuuDVXbWEwsZblIUVa
4qP3z+5gEdWu1MYYJDjoOhSQQMgRcew7W2iDGD9+xG0elWPh1Rj1T3+KMF3f
ZWnu5/xc4QQdC8I7fxVfb1r+iWI2XnVs75s7zE7y1dWq6rsPWGRZZSKzRAQu
tcVnXjNwrs8fUu0Tw8291zHsxaCB+zaZLEYIcfG5IDMMvztDKpmNYhi7w12O
tNHIQWcJbRVhRc0XoYSGhnnagcayR0G4vu9BWawb/TbPU7NRpywNLrxH4ctz
6z5VzgvEhJ6PbRTSrPEu288LJ1lVOs1oShdgT8vY6Kz7FCjhkQ4Phz+aJVzg
3jTEiVE9nho/bFUd6t+5i0ZtlfYXWbQvbqRcWD7WQ+NM6LWXBRF8/HGWO1AX
BktReDZTSSLn+/hsgmbg0MQGT60moWtV/8XXMXAviipMPU8iq3286f5DBkbl
ZbdV9SROZbb4P4xkEd2X260eJCEt/qFCl8si31n64eoAPlY+FerrbrJwclpL
NvDRcHvboO1vFiUJhqNJd/7jvMWRa64vC0B6cvUQK2D+xx0eqpDMMcGkr3f8
Bvidex8=
             "]}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerSVGIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{16.5, 2.}, {4.5, 2.}, {
            3.6719479999999995`, 2.0009000000000015`}, {3.0009040000000002`, 
            2.671949999999999}, {3., 3.5}, {3., 17.5}, {3.0009040000000002`, 
            18.328052}, {3.6719479999999995`, 18.999096}, {4.5, 19.}, {16.5, 
            19.}, {17.32805, 18.999096}, {17.9991, 18.328052}, {18., 17.5}, {
            18., 3.5}, {17.9991, 2.671949999999999}, {17.32805, 
            2.0009000000000015`}, {16.5, 2.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{4.5, 18.}, {16.5, 
            18.}, {16.7764, 18.}, {17., 17.7764}, {17., 17.5}, {17., 3.5}, {
            17., 3.223600000000001}, {16.7764, 3.}, {16.5, 3.}, {4.5, 3.}, {
            4.2236, 3.}, {4., 3.223600000000001}, {4., 3.5}, {4., 17.5}, {4., 
            17.7764}, {4.2236, 18.}, {4.5, 18.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}, {{0, 
            2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{15., 10.}, {14., 
            10.}, {14.00113, 11.596388}, {12.921309999999998`, 12.991014}, {
            11.375490000000003`, 13.38965}, {11.62449, 14.3584}, {13.61224, 
            13.845852}, {15.00095, 12.052766}, {15., 10.}}, {{7., 10.}, {6., 
            10.}, {5.998837, 12.052669999999999`}, {7.387368, 
            13.845787000000001`}, {9.375000000000002, 14.3584}, {
            9.623999999999999, 13.38965}, {8.078326999999998, 
            12.990908999999998`}, {6.998712, 11.596276}, {7., 10.}}}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3,
              3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 
             3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1,
              3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {
             0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 
             3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
             1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {CompressedData["
1:eJxTTMoPSmViYGCwBmIQDQG6DhBay2HribJ983dpO0x7xRSXBuQnfi7MXTFD
yyFv6fW05LNaDm8emUkd0NaCqteB0ho4+NoORUeiariA/AWGk1eI79FyEFb/
bi3yVN3hVPuCrC9VWg5ZsqG+AlvVHaQOHvv63kvLwWC3Oj93q7qDBnd8/Gsp
LYe77wNEXjirOwRx+r/4+l8Taq463L0QWhnOh9ijBFcPsUcJbp4k2B4luH2a
YHEluHsg+hTh7oWYqwT3Dypfx0HTatLp+hXycL6KuxWz8no5h3XOpqqR87Uc
3n5ay//6rrQDX1429/nTmg5rXj0tn/VHwiGP73oWPzcwPA9YKntJizlcWud0
yh/ont3cU0QiGEQcyoVrLn/p1IbzYfEE43e+adbhLtOD69cP3Gu6Yas+3PwJ
HzWmfviiD7f/l4dXlYSUAdx9gXtO3VqWoI/mfj00/6Hz9eHhk3AuJ/yFsz48
/Mwq4qdyt+rDw/eZnSWXANA9sPC/8WXBApGn+vD4Ca++wc3KYIAWfzC+OpwP
i3+Yelj6gJkHSz8w+2DpC+YeWPqDuRc1faLz9dDSt57D6Zb4V8/XAtPFlZnV
HgX6DrLMm67v1tdxCDii1CarZOCgvE94c9waXYcPPdu0Ot/oO8xWeGXHoKnv
0NCwNev6FH2HDr0V+TOFDRwsfOfLFujqOWx5VbxV9Le+w8b7wq9DVuo4PL2g
dPvnOX0HraKOHZaq2g7zbXSuzGrTc3iSfV6HE56+EfkTAK7YJ3o=
             "], {{14.5, 15.}, {14.223859999999998`, 15.}, {14., 14.776142}, {
             14., 14.5}, {14., 14.223858}, {14.223859999999998`, 14.}, {14.5, 
             14.}, {14.77614, 14.}, {15., 14.223858}, {15., 14.5}, {14.99981, 
             14.776065000000001`}, {14.77606, 14.999812}, {14.5, 15.}}, {{10.,
              14.}, {11., 14.}, {11., 15.}, {10., 15.}}, {{6.5, 15.}, {
             6.223858, 15.}, {6., 14.776142}, {6., 14.5}, {6., 14.223858}, {
             6.223858, 14.}, {6.5, 14.}, {6.776142000000001, 14.}, {7., 
             14.223858}, {7., 14.5}, {6.999812, 14.776065000000001`}, {
             6.776065000000001, 14.999812}, {6.5, 15.}}}]}, 
          FaceForm[
           RGBColor[0.7098, 0.80392, 0.87451]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
             0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
             3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
             1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
             3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1,
              0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}}}, {CompressedData["
1:eJxdlHlUFWUYxvGqIJBwl7lzl1nuxTI1jmhFQAT4IAUEqCcDssRSkDCCEDFB
ELcEzRYkCNc4uRCulLJISqyCIhVbbIqmCCaLQQgoINY3d5A/mnPmzPnOzLzf
+7zP8/usAiOWBkuMjIx8yS08G/175l0M0cA/PisvcIEK1kN7b6SYqLGTbvn9
YYoKfOY9T5siGum9mRXe9mp4FsVzDplKuNxrOT3CarDkx9TgXXcoVLTm7thU
o0FIw1+h1hsoRDXJ+12rtVgofBhLIR/b2y43Mzgckt0V9SkFz9uxVJYJByvd
QJj/GAWLuee+653FY5+P8kuvLiWO5Ng/Km3n0evwhse6YRpma2aExVzQIcb8
udmbfdRYAsWqMoUePvafu67M0KA7Klc5aq6HsZxaUHFIi+TNo45rLfTQtC1T
nU9mcHGWpXnuXR1OVTf490Sw2H8xbY9lrA6rV7S6T3bgELSlxXmjWgdm+q25
e25xqAi33Xp+K4+5hgZ5vHQ3a2Z7GYd/gn5d4X2FR+qQ8Qf7nuEQWrA+RT1F
B/e8B2N/OLAYrfq7skyiw4lji0mHDM6MBISXP2En1mZNR9c6m3Fo3hblnmrH
osGUCMtnIbt8If8rYw6SA9OYdJ7F+95XTJwPctgQSToKZ7CeyKuy4THTeNu3
bl9oEXi40bY3hp/QXzvj+vDmUB6ZGy/PcaxTo7GcCIjmYa8tXq6fpEYcleVx
25GHoayfCh015IdCDttJG0MVNEgKZll6c+I8Ymi4sd1tdgdYPHEbud+9lcZb
Hx+IPtTGwK/k+LHFZB3Rl1Dp68qg5vXmvoGrNOYEJJUOHtci7rN5Pj94qTB4
vYko1GJVWb11sEaN4e+J8dkalA3ODkiSaMb306B+UaB02bAGS/P5hG7Z0/cM
AvSuZNRqXDpr88nRSSwSK31Ljq9W407GwUv6PhZC7IJuqGAYfxqHb6q2kGiq
YOf0y9I0Kx4Fgr1DtNhHIvHPb/4LJ96mIcTO4zaP0sTMd66eU4KnQxc9sNCh
a4qtzO4xBbczH92MNNOh5NVnveLcKJEDhQ6PSlefXEkpRH27eYSZEkUPZMgj
qc/ez6GnmPzwmkyss4nF2aKedKcwKe7YCQYwuHaaBGGqFMJYtcUaCJgMqaRw
WlybHFCoxo70305WK6WQFEyVU0Uq0WdvqZjzehqCuwU5UqTuTHiv/rFS5E0q
Q4YQKzclBn++tnssY3z/Amp8XnIxfy4UFq4kjjMKdHra/Gs1poBA2ZQBBYwM
F4Vy/U/r1tRSou7J9MSadEcioESRxaGXj5DvDXWW0/A1GKFAQ0zn8y9OU0Ea
a3fKZa8cQhw7alSwFQCWyPHhrqAVrRVqkY982YR+wzzKZRO8vim0lScDgd2y
M5rBzcjdX7f3yyDQF2/DIqm9X1cXIcfD9lWHG3NYcf9bctACcJMJT30DXu8m
KsQ8E46Esq2vUKgzuikxJbwJx0dsByXyUMKiSioAp0Rlx4Jjf7qwE7odDEYz
GCTVHNJo3J9eOH9/qHacIxX+f17+BzFaMpA=
             "], {{9.8738, 4.7586}, {10.959, 7.9704}, {11.507, 7.9704}, {
             10.098, 4.0765}, {9.6543, 4.0765}, {8.2481, 7.9704}, {8.7935, 
             7.9704}}, CompressedData["
1:eJxlU2dMFGEQPZUIMQb3jvPuvMYhSraiFAvB8myAjaJiUAEF0RAiajCIIhCI
QUDsioVqMELU06C5H1gCBiT2jlEBo4glF1GwYDsJfnsL5w8n2ezOfjvzZt57
6xG/YdGawTKZLJBc4l0KbxQfI7FMgcOzCte9vyxAeS64Pf2QHNF7G3roaAHW
EO8+j14KW61ePi6dPPjm4neGagqM+EEij6phQWNTZ1IQj81tHCbeDQx9KKdw
+vOjhfHhHJ68T+K+qym4mPXLEy6zaEw4vWqJor+eZqGNaNFlxFGYTeBtpxg4
d6tCwv9QOKhxWuoqMCiJrDhz9qgcw56e2Dj1Fo2VzG3qeroCd++Q2EVjblm2
V8MONwgXyrqqg2h0TZ4TnHJRCfXzez8We9IojyUFziosmFQwY9VYGq5144+x
UWpH7psmeLhbNBj3YszQnJE0cooIEdVa7P+YMX1CLI3jBTXt1iI9RonjfKER
5xs5nmWM0NkLGBSnlVZ6bnXHvOGDubylLLJD6jMNGhOqSq6Zanw5ibfhJviI
BLzhUO9a6lepNOFl2O4j6w/wSIhpCxpS6460ugrtOIMg6fHcCPfcDxG15QLM
ha2Jsi4DCDrZUADc4hofn9FjQD/ZhhynpjAdNiWSift4R87lqQgDPPK/tT7N
8dMjnMApGgnenZj5N5wNEr/JPFY8vtKhLDNI86t42OXwNUKkr+MkB8/WX1lJ
GUaExlNRAf4cHo4WXxhhubG5rqKYdZxfmksaOLPQk+rI7v7+ZxmsGfU6Sv1D
j6PrFduvzmOQtPDrnsUWHe6L7XUMVpyv7yyfosW33uYtVi8G/pWWST8bNI7c
7r9MdT8/DCbEikgqLKo1EoYYWJb1XGzZqURNCiHgCoPe76mvSiPcpPm0LOw2
DlNI+l1gsU00+CU5mkykIoJDi/l3dHKTXMKr4mC7/elmY4Nc+h9sHJo5ssEz
OVLFhUJ5rM1fHdM2VOHQL1B88FZIfn/A40jfviwb8afdH4ME5OcuJwz/y9vT
yQBxKrx9QIicxv2XBxD7/hqhceg7kP8F0n559w==
             "]}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerKernelIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
            3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJRIGZigAElBwht4IDCb0Dwg3h/2248ZuCwROpbdVKv
IlTcEEqj81ng/IKp6gJlpxjR5Bng5sH4qPZB+Qw8cH4D/3SZ8lOcaOZxoNkH
5TcYwfkCcrkyG48Zoak3hpsH46PaB+Prw/kQf+ujmWeAZp+BAwACrS35
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}}, {{{18., 14.}, {3., 14.}, {
            3., 15.75}, {3., 15.888071}, {3.111929, 16.}, {3.25, 16.}, {7.75, 
            16.}, {7.888071, 16.}, {8., 15.888071}, {8., 15.75}, {8., 15.}, {
            17.75, 15.}, {17.88807, 15.}, {18., 14.888071}, {18., 14.75}}}]}, 
          
          FaceForm[
           GrayLevel[0.89804]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}}}, {{{19., 13.}, {19., 3.5}, {19., 
            3.223860000000002}, {18.776139999999998`, 3.}, {18.5, 3.}, {7., 
            3.}, {7., 4.}, {3.25, 4.}, {3.111929, 4.}, {3., 
            4.111930000000001}, {3., 4.25}, {3., 13.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
              1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {
             0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {
             0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
             0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
             0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {
             0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {
             0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
             0}, {0, 1, 0}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGAQAWIQfW91mNqfJH0HgVL5hitmCg7uU76xxe/Qd3Awjdvl
2aPskHpf9OD/ZToOd9kVtnYaKznseaHtYfxNy2HHqje7lSRUHfas9Gjd6Krp
INZuvH8WUP6Ot9TiUhM1hyk3FSb3APXXsGYeW9Sp5rCT3yFL2FzB4a4KW+NU
Z2UHK6kD0QqM8g42tyySdOtUHSwEJrH6MEg5iBo0RpcD5cPAFos4cL+KflYC
1B+0wP+J5yRhhx8iDI8lgeYzaLeL3TzH6ZDB2rYmD2h/wdc5X/YZ8jsI/slX
tQa67wS77ezQ+cwOem8y2/cD3W+w2i48GiifGnvHjRnoP47iLz/2nuV06HRM
eHoB6H+zs9Z+FycKOyx++SalIMTQ4dRT+yX3/4k4pJqdUFE2N3CQOwkU+C/p
ILrO/WEVUH7NLIVXdgzyDgCwloC6
             "], {{14.356890000000002`, 8.80715}, {15.26808, 9.20715}, {
             14.75798, 8.51929}, {13.889980000000001`, 8.210630000000002}}, {{
             15.50572, 9.055660000000001}, {15.40481, 8.047169999999998}, {
             14.95886, 7.41475}, {14.98468, 8.353030000000002}}, {{14.69925, 
             8.2}, {14.66778, 7.05536}, {13.62143, 6.702780000000002}, {
             13.62143, 7.816750000000001}}, {{13.48092, 9.9899}, {14.09851, 
             8.93313}, {13.48093, 8.144059999999998}, {12.86377, 
             8.933209999999999}}, {{12.60539, 8.80729}, {13.07211, 8.2105}, {
             12.20383, 8.51926}, {11.69399, 9.207640000000001}}, {{13.34039, 
             7.816750000000001}, {13.34039, 6.702810000000001}, {
             12.293999999999999`, 7.055390000000001}, {12.262530000000002`, 
             8.2}}, {{11.97714, 8.353090000000002}, {12.00295, 
             7.415180000000001}, {11.55736, 8.047659999999999}, {
             11.456740000000002`, 9.055730000000002}}, {{10.16199, 
             7.578840000000001}, {11.359990000000002`, 7.839730000000001}, {
             11.93624, 7.021730000000002}, {10.97586, 6.66539}}, {{
             11.016440000000001`, 6.38067}, {11.74664, 6.651610000000002}, {
             11.18759, 5.92502}, {10.357750000000001`, 5.64171}}, {{
             10.419440000000002`, 5.365740000000002}, {11.27625, 5.65826}, {
             12.181249999999999`, 5.391480000000001}, {11.41413, 5.14879}}, {{
             11.429440000000001`, 3.6768399999999986`}, {11.551440000000001`, 
             4.897399999999999}, {12.526169999999999`, 5.205770000000001}, {
             12.55101, 4.16919}}, {{12.60754, 5.558840000000002}, {
             11.509590000000001`, 5.88251}, {12.20647, 6.788230000000002}, {
             13.253540000000001`, 6.435409999999999}}, {{13.34042, 
             3.2504900000000028`}, {12.833490000000001`, 4.117919999999998}, {
             12.814119999999999`, 4.925980000000001}, {13.34042, 4.15807}}, {{
             13.48096, 4.450240000000001}, {12.83467, 5.3932400000000005`}, {
             13.48096, 6.270240000000001}, {14.127249999999998`, 
             5.3932400000000005`}}, {{14.127959999999998`, 
             4.117769999999998}, {13.62153, 3.250720000000001}, {13.62153, 
             4.15807}, {14.147639999999999`, 4.925700000000001}}, {{
             13.708409999999999`, 6.435409999999999}, {14.755480000000002`, 
             6.788230000000002}, {15.45236, 5.88251}, {14.35436, 
             5.558840000000002}}, {{14.41041, 4.168940000000001}, {14.43565, 
             5.205680000000003}, {15.41, 4.897}, {15.531869999999998`, 
             3.6763200000000005`}}, {{15.547509999999999`, 
             5.1483599999999985`}, {14.780389999999999`, 5.391360000000001}, {
             15.68567, 5.65821}, {16.542669999999998`, 5.365090000000002}}, {{
             16.60379, 5.641249999999999}, {15.774359999999998`, 
             5.924939999999999}, {15.21554, 6.651240000000001}, {
             15.945540000000001`, 6.380030000000001}}, {{15.98616, 6.66484}, {
             15.025730000000001`, 7.021660000000001}, {15.602219999999999`, 
             7.8392}, {16.8, 7.578090000000001}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           FilledCurveBox[{CompressedData["
1:eJxTTMoPSmJiYGDYBsTMQMzIwszIDEUMjAxw9qjIgDtgkIgAAMeOBqk=
             "], {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
             3}}}, {CompressedData["
1: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
             "], {{13.48089, 1.9509299999999996`}, {10.96851, 
             1.9509499999999989`}, {8.931845, 3.9876499999999986`}, {
             8.931859999999999, 6.500030000000001}, {8.931874999999998, 
             9.0124}, {10.96857, 11.049077}, {13.48094, 
             11.049069999999999`}, {15.993319999999999`, 
             11.049062999999999`}, {18.03, 9.01238}, {18.03, 6.5}, {18.03, 
             5.2935}, {17.55072, 4.1364199999999975`}, {16.6976, 
             3.2833000000000006`}, {15.84447, 2.4301899999999996`}, {
             14.687389999999999`, 1.95092}, {13.48089, 
             1.9509299999999996`}}}]}, 
          FaceForm[
           GrayLevel[0.53726]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerDocumentationIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
            3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJRIGZigAElBwht4IDCb0Dwg3h/2248ZuCwROpbdVKv
IlTcEEqj81ng/IKp6gJlpxjR5Bng5sH4qPZB+Qw8cH4D/3SZ8lOcaOZxoNkH
5TcYwfkCcrkyG48Zoak3hpsH46PaB+Prw/kQf+ujmWeAZp+BAwACrS35
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}}, {{{18., 14.}, {3., 14.}, {
            3., 15.75}, {3., 15.888071}, {3.111929, 16.}, {3.25, 16.}, {7.75, 
            16.}, {7.888071, 16.}, {8., 15.888071}, {8., 15.75}, {8., 15.}, {
            17.75, 15.}, {17.88807, 15.}, {18., 14.888071}, {18., 14.75}}}]}, 
          
          FaceForm[
           GrayLevel[0.89804]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}}}, {{{19., 13.}, {19., 
            3.5}, {19., 3.223860000000002}, {18.776139999999998`, 3.}, {18.5, 
            3.}, {10., 3.}, {10., 4.}, {3.25, 4.}, {3.111929, 4.}, {3., 
            4.111930000000001}, {3., 4.25}, {3., 13.}, {19., 13.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
            3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJxIGZigAFjBz2T65lLlqo6wPg3sjzuJGdyOqScifU+
8d/I4YfNDutscxaHy/P/eghWGjmssHqStoORwUF81muTS5cMofoYHNzOHZpX
VqEB5xclVx0Sqld3YNgxSVYaqD7rccfWH1vUHDR2RAQ2azI7/Oxdb7sZyC8A
qeNnh/On8l37b2mjBlf/OtxKfp6pOsK8oNkWO/+ro9mn4TC3Qe1QW7shnP+p
eva/N88NHTY4m6pGAtVH7n7rVGxr5NC6y2OhTou6w+0v6fZBMUYO61+Lv2k7
q+agNdFFf3GCkQPPGS7XXefVHNgWT7JiTDVy+CqUPLPuoprDUYUNRRmZRg4S
YH+rOSxymH9i8h4jh/5/07MvAvk7g60i/gPDa/Hx97m/vNUc0MMXAJkejkw=

            "]]}, 
          FaceForm[
           GrayLevel[0.53726]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {1, 3, 3}, {0, 1, 0}}}, {{{17.824, 11.118}, {17.823, 
            11.28}, {17.692, 11.412}, {17.529, 11.412}, {12.235, 11.412}, {
            12.073, 11.412}, {11.941, 11.28}, {11.941, 11.118}, {11.941, 
            2.8823}, {11.942, 2.8372}, {11.953, 2.7929}, {11.974, 2.7531}, {
            12.045, 3.002}, {12.271, 3.1746}, {12.529, 3.1765}, {17.824, 
            3.1765}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 
             4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {
             0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
              0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 
             1, 0}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
             0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.04675, 6.052660000000001}, {
             14.98306, 6.096589999999999}, {14.9068, 6.11858}, {
             14.829500000000001`, 6.115309999999999}, {14.83814, 6.15225}, {
             14.84931, 6.188549999999999}, {14.862930000000002`, 6.22396}, {
             14.989640000000001`, 6.231980000000002}, {15.1139, 
             6.186519999999998}, {15.20552, 6.09862}, {15.130299999999998`, 
             6.077719999999999}, {15.121929999999999`, 6.073559999999999}, {
             15.04675, 6.052660000000001}}, {{16.107940000000003`, 
             7.377000000000001}, {16.689980000000002`, 6.79499}, {16.77984, 
             5.8828700000000005`}, {16.32256, 5.198469999999999}, {
             15.865280000000002`, 4.5140699999999985`}, {14.988219999999998`, 
             4.247999999999999}, {14.227759999999998`, 4.562980000000001}, {
             13.4673, 4.87796}, {13.03524, 5.686269999999999}, {13.19582, 
             6.493559999999999}, {13.356390000000001`, 7.30086}, {14.06488, 
             7.882300000000001}, {14.88799, 7.882300000000001}, {15.34556, 
             7.88232}, {15.784389999999998`, 7.70055}, {16.107940000000003`, 
             7.377000000000001}}, CompressedData["
1:eJxlU31MzHEcvvKWRnSX7+9XXaULdfr+7kShOD3GSpzcctRizcupVja3y+at
MJQQtVO3it6U90Niul4c5b2oE5bJEpGGpdKLzNuvf/zjj88+e/Zsn8+z59nj
vmFL2CZrgUAwk5/h3f4gu8pgkaHuVqNJO1mEKd8euo17zaGj/ZXKJ5TAVTX7
g206B1JW+SIhjCArV2GxTePALpCcWczjbpVDp+gQj1s/SMwrCaoNGRN2pnCI
9rk6ZFpNUPyz5NVZEYeuz7f9PeII0vXhH9lCCrYnL7t/A8HH83YVjjIKdeCW
6WELCRx26Lc+8aXo/jpLJn5IMPfAdL9dKgrZkllkeTADfdrJZEUSRWbrHPOA
kcGYqY+v/1pDsbjKVhr4iMGNGMPIc/4UGVcU16a0MQiRdg7oCcW7p/ft43sY
bB47VBjjQaFL3laRuoJFwGjNlW0FFO/XHr5YZ2Zxn+wTZ5ZS2ChOrCqoZ7Ho
i7LoWy5Fl29T2I4TLExWBW5BqRSFxx6MU0ezyB0xMqFvO0WEZt6bFRwLRUhl
dG8ehYTLKvcQs9B2Jz9S1/D3dx88hT8M/EpX7bv3liLf/vTNmmYGz1zuNjhU
Ulx3k0ruHGaw7rjfJ3f+n9EfM4LlDEqG/dvP62ku1irqCMbqVLXKKoqOaF7J
G4ISq+pRwj6Kl8LehY0dBE8ifPPyKAdrtrGwiOdFkraJFzLlSLGvLT66keCy
kNrFNMihnKkjA33/48Ra4QSvKjm2V6R+vbuZ9zdH854a5ehkM262JjE4oLES
mfpleH2rrKlEzUJvMSRIQ2VI7C1VxUc6oty8JLa+gkN3s+bozlQneNGevWU5
HAw9fKDznRHVxF4qjuOgbj2mjSwVQ3IoKuiqksP3QUfGTuOC5ZPSln56Tv/x
jvd0yy7y/k3zsTGKI53RbloZELGHIvRCUoBrghMaZs854/nFG4gTeQ62sAgv
2+gxMd0bAst6c7WAgVN+lLRe643Mtb8X/Rg/CRZJy9DuAIpIeYru1C8hvEKa
lWZe3w9XmX+XrxDO49u4DL4PW41HWmL5PvwFn0hNig==
             "], {{14.929780000000001`, 6.679259999999999}, {14.99634, 
             6.637309999999998}, {15.059230000000001`, 6.58981}, {15.11778, 
             6.537259999999998}, {15.13069, 6.72777}, {15.13348, 
             6.918830000000002}, {15.12614, 7.109630000000001}, {15.0175, 
             7.005190000000001}, {15.00081, 6.98846}, {14.888, 
             6.879850000000001}, {14.90472, 6.82555}, {14.929780000000001`, 
             6.679309999999999}, {14.929780000000001`, 
             6.679309999999999}}, CompressedData["
1:eJxTTMoPSmViYGBQB2IQ/fq/zLPT0QYOjyLEt19cIOGgUm/w4Q6QH8NRFHCI
R9pBfUHnhoc/9R1mxZ9lbLKUdXh/ZI248009hxjjn2mzpeUcdr48X7dkh66D
zQ7r7O1/5Rx6X3J62xToODQUu035libnsG5mzeazc7UdJhznCTk2X8bhvOd7
6fjTWg5zpC8LT7sh5TAr5YnOm5laDgpbOyf/tpVwkFpcGmKqqO1wQi9wr6mA
mMNXV6foc6naDhsy7xV2nRN3sBBdabDtgrbDsSkei6YXSjqw/HKZpxKr43Bj
XqTQgmdSDiBjZLt0HDy2+h9PVpNxMOuL6PZ/qOOgJTH1CqeHrIP6VTvZ/khd
h3XMz3s0dOUcIu6+snxZq+tg8kpR6q6jrMOaFQdNePp1HY6JNclM+SDj8Dux
5UPGZl0Hn797VnqwyjgIlMo3XGHTc7CadLreA+ifblHTGW2Ceg51QW8vf9wh
47BQ44L6pxQ9h1UVyp9PxMs6fFs1lXN/iZ7Dr1vG3kwmMg7qntd99lXqOdz6
8MUrkk3aIcvjTvLLYj2HOeVzFinflHQIm7967Y3/eg4JKluexryScFjkMP/E
5Cn6DkElKtP/C0g49MYuqsqWMHCYsOCH4TM/cYdN13fb32M2cPiRpKF+66qY
w8zGUz++39R3MDqyUS8vWcxB694Jm0/L9R1SPhfmrvgh6vCsR+Mtb52+A0vx
lx9734o6+L9M+Ds/GMHnnnFg7W5NhPolBbZc14P1HOZ92fdxq7qYg+D9zkj9
MKD58xyd/y8Rdqg71sqsKGngcM2SLWX9dhEHI+apH98D08+WnLX6QrPEHCoj
VpieBfKPPTyz/hkwfQEAdeMU4A==
             "], {{13.11765, 9.647049999999998}, {16.647060000000003`, 
             9.647049999999998}, {16.647060000000003`, 10.23529}, {13.11765, 
             10.23529}}, {{13.11765, 8.47058}, {16.647060000000003`, 
             8.47058}, {16.647060000000003`, 9.058810000000001}, {13.11765, 
             9.058810000000001}}}]}, {
           EdgeForm[
            CapForm["Butt"]], 
           EdgeForm[
            JoinForm[{"Miter", 10.}]], 
           EdgeForm[
            Thickness[0.]], 
           EdgeForm[
            GrayLevel[0.65098]], 
           FaceForm[
            GrayLevel[0.65098]]}]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerTIFFIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{16.5, 2.}, {4.5, 2.}, {
            3.6719479999999995`, 2.0009000000000015`}, {3.0009040000000002`, 
            2.671949999999999}, {3., 3.5}, {3., 17.5}, {3.0009040000000002`, 
            18.328052}, {3.6719479999999995`, 18.999096}, {4.5, 19.}, {16.5, 
            19.}, {17.32805, 18.999096}, {17.9991, 18.328052}, {18., 17.5}, {
            18., 3.5}, {17.9991, 2.671949999999999}, {17.32805, 
            2.0009000000000015`}, {16.5, 2.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{4.5, 18.}, {16.5, 
            18.}, {16.7764, 18.}, {17., 17.7764}, {17., 17.5}, {17., 3.5}, {
            17., 3.223600000000001}, {16.7764, 3.}, {16.5, 3.}, {4.5, 3.}, {
            4.2236, 3.}, {4., 3.223600000000001}, {4., 3.5}, {4., 17.5}, {4., 
            17.7764}, {4.2236, 18.}, {4.5, 18.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            13.57129, 13.35693}, {12.979560000000001`, 13.357063}, {12.49995, 
            13.836817}, {12.49999, 14.42855}, {12.50003, 15.020283}, {
            12.97972, 15.499966}, {13.57145, 15.50001}, {14.16318, 
            15.500053999999999`}, {14.64294, 15.020443}, {14.643069999999998`,
             14.428709999999999`}, {14.64252, 13.837011}, {14.16299, 
            13.357481}, {13.57129, 13.35693}}}]}, 
          FaceForm[
           RGBColor[0.9451, 0.76471, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {
             1, 3, 3}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQHaDhBaBUrLwflMqqxiB1xkHfqslzZ//a/swDGp
nC91hozDK6c1/ziMVRzk9CzfTbGTcXDybGQ1aFVxMD/16+yRJ9IO0/3DeMKv
qzj49F44f+W1tMOvuqw9JdaqDiElKtP/B8g4cF9fXGDbpepQ7sX++r+PosOa
7tsZDPlaDlpmz0qPFCo6LLn7ItluhZbDCuWG2UdXKzoc+zk7oOOClgPLpuu7
7d8pOqwFqb+v5dA0cbrpRgMlh7hMyZXf32g5ZBpWzPhWquTwQsBCKOOBloPc
wy0PXNcrOahcexTMsEfLQazH6xXLFhUHG6B36vM0HWb3ZzsfvaHmYPF5taXD
Bm2H0KxvDtoC6g4Nuutj8l9rO/yrWB81M0HdIUQimqOIQ8eh91rgVZaN6g7M
IHf803boWTgnI5xRw6HF+/ic9C/aDpogh3poOEREub2yPart8N/u8aHGAg2I
/+q1HSZyJXM73tOGuL9e1WGzZnjFdG4dhzh+taPH9VUdOIoCDvkA+TbZ22Mz
zqk42Knvza+5q+2w7MOCm6X1Kg5FdzRl16zXdhAo6wptNlBxOM+v3OIere3w
xJB56kdg/KDHJwAEHLkm
             "], {{8.415530000000002, 11.}, {12.638179999999998`, 11.}, {
             11.68506, 12.668}, {10.791059999999998`, 11.72708}, {10.62513, 
             11.553912}, {10.36001, 11.522025000000001`}, {10.15775, 
             11.65091}, {9.221229999999998, 12.254909999999999`}}}]}, 
          FaceForm[
           RGBColor[0.29412, 0.83922, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 
             3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBWIQLa1/V4WNUd+BAQyUHE4vdN32+a8onN8kXsuaWSbq
0Dcp/LkEkB/vLrOp8YuIg1PC0wtK0koOK1Zbi92eIuLwJrN9v5q3ksNH/ugq
E1MRB5UzW/5qVys5HBENWLH8v7CDSnqiv/UeJai5IlBaGZXfYABXP0nJaM2j
hQZw8wQLOEKzDhnA7TsRva4u55YB3D2K9tI78z4ZwN173f9/5Of/Bmj+MXRA
9a+hQ4sCu+oZF324ei/5XQv2terDzcuMsRCYtFUfbl/LzG31qU/14e4pfOjg
IcZgAHcvxFwDuH9Q+ED/wtTDwgNmHiy8YPbBwhPmHlh4w9wLiw/0+AMALQSV
4A==
             "], {{5.996060000000001, 10.}, {15.00394, 10.}, {15.00394, 
             16.}, {5.996060000000001, 16.}}}]}, 
          FaceForm[
           RGBColor[0.7098, 0.80392, 0.87451]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
             0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
             0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
              1, 0}}}, {{{7.476430000000001, 7.56917}, {6.447, 7.56917}, {
             6.447, 4.}, {6.027209999999999, 4.}, {6.027209999999999, 
             7.56917}, {5., 7.56917}, {5., 8.}, {7.476430000000001, 8.}}, {{
             8.85472, 4.}, {8.43225, 4.}, {8.43225, 8.}, {8.85472, 8.}}, {{
             11.84251, 5.766640000000002}, {10.49879, 5.766640000000002}, {
             10.49879, 4.}, {10.07679, 4.}, {10.07679, 8.}, {12.06027, 8.}, {
             12.06027, 7.56917}, {10.49879, 7.56917}, {10.49879, 
             6.197459999999998}, {11.84251, 6.197459999999998}}, {{
             14.782259999999999`, 5.766640000000002}, {13.43854, 
             5.766640000000002}, {13.43854, 4.}, {13.01654, 4.}, {13.01654, 
             8.}, {15., 8.}, {15., 7.56917}, {13.43854, 7.56917}, {13.43854, 
             6.197459999999998}, {14.782259999999999`, 6.197459999999998}}}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerUnknownIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4j0TK5/wfzN0yHv0pK49SddhVzbnzwXvDR22
KF8tr2vUdbg50+m56TNDh13zgyfMn6vrkJfn4x9xy9BhkQBje8BWXSitDRU3
ctiXlXpIv1XbweqZTXL8JyOHn7eMvZlctB0eremY9eK/kQMDGGhDaWMoLQDn
F+88GNA+lduhOatZ+CJQ/fPVT5LLGTkcLp14LurfC9PPAaXR+Rxw9Qn2QS5t
U5nh5jEsOFxTyciAZh+Mbwjni+woNffvNUSo70m/cOG/Idw87PbC+LoOfF4z
Mn8D1T+bLHr4qqKuQ8bv8LBZfwwdhGSmFwY76zqghzcABAZ3MA==
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}}}, {{{4., 3.}, {4., 18.}, {13., 18.}, {17., 14.}, {17., 3.}, {
            4., 3.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, {{{13., 18.}, {13., 14.5}, {12.99992, 
            14.367367999999999`}, {13.052580000000003`, 14.240146}, {
            13.146359999999998`, 14.146362}, {13.240149999999998`, 
            14.052577}, {13.36737, 13.999922999999999`}, {13.5, 14.}, {17., 
            14.}, {17., 15.}, {14., 18.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14., 
            17.293}, {16.293, 15.}, {14., 15.}, {14., 17.293}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
              1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
             0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
             0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
             0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {
             0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {
             0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
             0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {CompressedData["
1:eJxTTMoPSmViYGBQB2IQHTjbYud9Rz2HG+e+Bz9eyu5wzDjjxfwJBg4r1tVM
e87I4uCr4XJA8Y2BwwHdUzkTOFkcdLZvkRKyN3QoCExr9tnE6sC86fpu+zRD
hx2SeQeeu3M4rLfdrOLw1cAhQPK/3eMmdofDjRN0EibpO2wou936rIrLYef9
hRoX9A0dElo+ZDw+wevAAAINhg4bLnt4P33LA+c7vPFZ+HmXgINTwtMLStGG
DueSkj4XvhVw2NV8Y6ZTvYHDHR7zB5+TReHqWwI95zY8E4bz+yK6/RkNxBy2
nijbN1/JwOHa0VyTBnMJBz7dTXPf8xs6NKzbllRfKeuwM9gq4n+9oYPHmqPL
GSQQfD52p00NnvIOohMTRfNtDB0ObH95vq5FHm6+ptWk0/Ucqgj7JFf01Mer
OrzdrfTj/i1dhw2gcJBVhsgzaENpDYdWLdPqBaoaDi8M4uMagPLXQe76ruRw
R1N2zf9kVYg725UdFrTM3FbfKu+wepbCKzsGGQe2AxVsvLKyDkvMCov2H1Z0
cOnOef57pQjUXBmHDd23MxjyORy8zTsdE0Rh9rI4vH5kJnXgtgqcvy7luJvC
PnWHDztvdf0FxvfB5+2Chw6rw+Xr7oUsOcShBefPWPvV1em1hkNA7/Q8oWYu
uH++mC8UYHwu5NDGrBh5QEQXLj/v0sFf9t+14forlT+fkLfRg/MB09PfBQ==

             "], {{16.686, 7.765140000000002}, {16.00777, 
             6.803710000000001}, {16.04777, 8.25342}, {16.841960000000004`, 
             9.32471}}, {{14.986, 8.997559999999998}, {16.38884, 9.61328}, {
             15.61564, 8.57028}, {14.28, 8.0957}}, {{12.01489, 8.998}, {
             12.720699999999999`, 8.09516}, {11.38452, 8.57026}, {
             10.611329999999999`, 9.614259999999998}}, {{10.952150000000001`, 
             8.253860000000001}, {10.99215, 6.80415}, {10.31441, 
             7.766060000000001}, {10.1589, 9.32466}}, {{8.01074, 6.94966}, {
             9.938229999999999, 7.369580000000001}, {10.86475, 6.05415}, {
             9.319580000000002, 5.481}}, {{9.397, 4.937999999999999}, {
             10.50345, 5.348640000000001}, {9.643999999999998, 
             4.231930000000002}, {8.38424, 3.8017600000000016`}}, {{10.04153, 
             2.939460000000004}, {8.50174, 3.275400000000001}, {9.81326, 
             3.723149999999997}, {11.21365, 3.3105600000000024`}}, {{12.0264, 
             3.6294000000000004`}, {10.25809, 4.15089}, {11.38016, 
             5.608890000000001}, {13.066440000000002`, 5.04102}}, {{13.22659, 
             5.550790000000001}, {11.544459999999999`, 6.118169999999999}, {
             11.49222, 7.961920000000001}, {13.22659, 7.34474}}, {{12.50759, 
             9.23779}, {13.5, 10.937499999999998`}, {14.49341, 9.23779}, {
             13.5, 7.968750000000002}}, {{13.77346, 7.34473}, {
             15.506369999999999`, 7.961910000000001}, {15.457, 6.11816}, {
             13.77341, 5.550780000000001}}, {{13.93361, 5.04102}, {15.61989, 
             5.608890000000001}, {16.741960000000002`, 4.15089}, {
             14.973650000000001`, 3.6294000000000004`}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerWLIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4j0TK5/wfzN0yHv0pK49SddhVzbnzwXvDR22
KF8tr2vUdbg50+m56TNDh13zgyfMn6vrkJfn4x9xy9BhkQBje8BWXSitDRU3
ctiXlXpIv1XbweqZTXL8JyOHn7eMvZlctB0eremY9eK/kQMDGGhDaWMoLQDn
F+88GNA+lduhOatZ+CJQ/fPVT5LLGTkcLp14LurfC9PPAaXR+Rxw9Qn2QS5t
U5nh5jEsOFxTyciAZh+Mbwjni+woNffvNUSo70m/cOG/Idw87PbC+LoOfF4z
Mn8D1T+bLHr4qqKuQ8bv8LBZfwwdhGSmFwY76zqghzcABAZ3MA==
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}}}, {{{4., 3.}, {4., 18.}, {13., 18.}, {17., 14.}, {17., 3.}, {
            4., 3.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, {{{13., 18.}, {13., 14.5}, {12.99992, 
            14.367367999999999`}, {13.052580000000003`, 14.240146}, {
            13.146359999999998`, 14.146362}, {13.240149999999998`, 
            14.052577}, {13.36737, 13.999922999999999`}, {13.5, 14.}, {17., 
            14.}, {17., 15.}, {14., 18.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14., 
            17.293}, {16.293, 15.}, {14., 15.}, {14., 17.293}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
             0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
             3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
             3}}}, {CompressedData["
1:eJxllAtMk1cUxyvSCSgOaUtftP2+rxT5KAXFqUVE/tOCVREVg07GBGFA6iwG
EAEHuimE1SG+R1ScgFJBqCAL4Mx4jIGOKuqc4nyhNgMVxmM8dFMHaxfDEj3J
yc0v59yce3L/55BRm0NirBgMxjKzW07H992OJc52wa2q6nr1bzKE/lhyKnil
C5xrFMZNqW44sng08pGPCwx1K0IL+XKsqptdGTooRWyB92hGjQJUPeu79ekU
jim/f1io9EDbperCqCAKT2dv1XX/I4eClAxvaidAbdVfTzvujlPBYG2YRaDd
mBnRXesBZsvemSltEsxx6Ts3nKCAXD3LaXm2GOFh9rrPc7wwZN0UfG6pAJNr
011kGQrkje3b/moeF/n6a1PPd7mDDt/bNFLCweUd6oYMezfEF9+OjY6ZhtSC
4LQtx2SIfz7JqPWdgrq1hqC/Wigw/jMb3OQZTp7RSMZ56vwXYk8fx3c46bbj
4IebHfFgElGtWy1Dj/PEqtv3nJDVs+q8mDkdyQd51ms8+fBsCY15yKGxZX10
XkkHH2yV+YbMA2OpFWFHHMTIfW/ASd2owDO15xgpkiBIbxcoM8f1vRHrNFEE
Znz5ccqQNY2fFjcfUg8S2JArbqjVTMdX7bvnXNJJseJwP1/X6IIby6McPkpz
ha6/uZybRKGy/AOaaaBhena4asp+Aoy1VdHSARr9fuGJ9zUELtjR/qWB7hAr
41SaCvE7/Jn6fvSzRTSsbHdLos8KwTm7+PG2YWfEWqxLhF8t9f4WwOGTlQ+9
J4lBt3Ul8F7zMBznH6Iyx6e0JQs0tlw0ZoiUcZkitEXmqNlGLjaG2F2oU0lQ
cWDvA2Y3D3ZanzzTRgKa/b3p/qECPHlV+ucNexJZ83cKaV8+vOJPTvghmYSX
cldDxGsuvk4YdWU3kchgai4WlTrBSp7tdKePRL1wst0uby72DM0tdEigcPB0
ub7nDhfVneG7y7opSAsVT0LyeTgaVtPOXSeFdt+SwKtWPPSY5ggafaVY9MQs
zDMsPI1hX1b4UZjad/Wudi4Lz93MQoohoev8Zs2iRDaMnI5OagGJm0ULWkV6
DlQve3sabUn8/MUfI33XnLDjYtZEspVASlxvzWQ/Dp5eHM6U1UuwzPKvAWzk
h54oM6SKsDDpeGCYHRvNCw2ajmlCrGf7Dcy04cH8WmN9mRAs5kvVt2xnpAYM
NBy+IkTbtpmHWPYEmoyFATVJQhSZxnJLeAQKHkUF2McKIXdk3RyQEfh9e3YR
IoTj88SYdyWPGylE5WnR6NEcEpR3uWlPkBAjQ3qKE+v6RtcMhCsdDjCD6HF+
8Uup/ESxFDZmea7MF2BGuipI9+l0PJ+g1pqa+fCxpBNueBmubRk9wIdk2mpK
1/E/uxYX3Ft2lB7PP7Qz3kuT7o4z8hOdadeFqF5aqcxfIkeXpeFR0Zu6Hrib
aJ4Ycx+PK1oFI6CRZaPMdL9FwqzKzQPFrvCn9CrHOine3k//Ak892E8=
             "], {{9.617389999999999, 11.266640000000002`}, {
             9.355364000000002, 11.506809}, {9.073421, 11.7243}, {8.7746, 
             11.91677}, {8.7746, 11.91677}, {8.66219, 12.48534}, {
             8.587309999999999, 12.73394}, {9.09304, 13.23107}, {9.16793, 
             13.30761}, {9.65491, 13.785590000000001`}, {9.687847, 
             12.945878}, {9.675329, 12.104999}, {9.61741, 
             11.266640000000002`}}, {{8.50275, 9.731640000000002}, {
             9.072936000000002, 9.76756}, {9.631433, 9.558930000000002}, {
             10.038419999999999`, 9.15798}, {9.701419999999999, 9.06244}, {
             9.66393, 9.043289999999999}, {9.32679, 8.947599999999998}, {
             9.042788, 9.148219999999998}, {8.700315999999999, 9.24909}, {
             8.352910000000001, 9.23443}, {8.391562, 9.40336}, {8.441624, 
             9.56948}, {8.50275, 9.731640000000002}}}]}, 
          FaceForm[
           RGBColor[0.86667, 0.066667, 0.]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerXMLIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4j0TK5/wfzN0yHv0pK49SddhVzbnzwXvDR22
KF8tr2vUdbg50+m56TNDh13zgyfMn6vrkJfn4x9xy9BhkQBje8BWXSitDRU3
ctiXlXpIv1XbweqZTXL8JyOHn7eMvZlctB0eremY9eK/kQMDGGhDaWMoLQDn
F+88GNA+lduhOatZ+CJQ/fPVT5LLGTkcLp14LurfC9PPAaXR+Rxw9Qn2QS5t
U5nh5jEsOFxTyciAZh+Mbwjni+woNffvNUSo70m/cOG/Idw87PbC+LoOfF4z
Mn8D1T+bLHr4qqKuQ8bv8LBZfwwdhGSmFwY76zqghzcABAZ3MA==
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}}}, {{{4., 3.}, {4., 18.}, {13., 18.}, {17., 14.}, {17., 3.}, {
            4., 3.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, {{{13., 18.}, {13., 14.5}, {12.99992, 
            14.367367999999999`}, {13.052580000000003`, 14.240146}, {
            13.146359999999998`, 14.146362}, {13.240149999999998`, 
            14.052577}, {13.36737, 13.999922999999999`}, {13.5, 14.}, {17., 
            14.}, {17., 15.}, {14., 18.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14., 
            17.293}, {16.293, 15.}, {14., 15.}, {14., 17.293}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
             0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
             0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{6.726999999999999, 6.01648}, {
             7.884519999999999, 4.}, {7.323999999999999, 4.}, {
             6.443760000000001, 5.560419999999999}, {5.55859, 4.}, {5., 4.}, {
             6.160519999999999, 6.01648}, {5.027529999999999, 8.}, {
             5.580260000000001, 8.}, {6.44373, 6.4670000000000005`}, {7.30133,
              8.}, {7.858, 8.}}, {{10.21241, 4.736269999999999}, {9.04211, 
             8.}, {8.43231, 8.}, {8.43231, 4.}, {8.90442, 4.}, {8.90442, 
             5.558230000000002}, {8.85815, 7.23077}, {10.03149, 4.}, {
             10.392400000000002`, 4.}, {11.56769, 7.239559999999999}, {
             11.52338, 5.558230000000002}, {11.52338, 4.}, {
             11.995480000000002`, 4.}, {11.995480000000002`, 8.}, {
             11.382750000000001`, 8.}}, {{13.303540000000002`, 4.43079}, {
             13.303540000000002`, 8.}, {12.82854, 8.}, {12.82854, 4.}, {15., 
             4.}, {15., 4.43079}}}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerTXTIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4j0TK5/wfzN0yHv0pK49SddhVzbnzwXvDR22
KF8tr2vUdbg50+m56TNDh13zgyfMn6vrkJfn4x9xy9BhkQBje8BWXSitDRU3
ctiXlXpIv1XbweqZTXL8JyOHn7eMvZlctB0eremY9eK/kQMDGGhDaWMoLQDn
F+88GNA+lduhOatZ+CJQ/fPVT5LLGTkcLp14LurfC9PPAaXR+Rxw9Qn2QS5t
U5nh5jEsOFxTyciAZh+Mbwjni+woNffvNUSo70m/cOG/Idw87PbC+LoOfF4z
Mn8D1T+bLHr4qqKuQ8bv8LBZfwwdhGSmFwY76zqghzcABAZ3MA==
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}}}, {{{4., 3.}, {4., 18.}, {13., 18.}, {17., 14.}, {17., 3.}, {
            4., 3.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, {{{13., 18.}, {13., 14.5}, {12.99992, 
            14.367367999999999`}, {13.052580000000003`, 14.240146}, {
            13.146359999999998`, 14.146362}, {13.240149999999998`, 
            14.052577}, {13.36737, 13.999922999999999`}, {13.5, 14.}, {17., 
            14.}, {17., 15.}, {14., 18.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14., 
            17.293}, {16.293, 15.}, {14., 15.}, {14., 17.293}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 
            1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
            0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0,
             2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
            0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0,
             1, 0}}}, CompressedData["
1:eJx10DEKgDAQRNFFbexTWGyhSwgp9hA5g0cQrL1/Z8Bs4cAIYXjwhZDjes57
FpG1n6WfSeLb27c2Volz+/dhBxtxrIPL2Ar/oQtZg16JsQ879Gyxx3vEuygx
3iPs0Fdi7NHb2EycoA8b9EqMfWovO5kdXA==
            "]]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerFileOpenerTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        TagBox[
         PaneBox[#, ImageSize -> {Full, Automatic}], 
         EventHandlerTag[{{"MouseClicked", 1} :> 
           DefinitionNotebookClient`FileTreeOpen[
             EvaluationCell[]], Method -> "Preemptive", PassEventsDown -> 
           Automatic, PassEventsUp -> True}]], 
        MouseAppearanceTag["LinkHand"]]& )}], 
   Cell[
    StyleData["HintPodTitleBar"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         GrayLevel[0.97], 
         FilledCurveBox[
          BezierCurve[{
            Offset[{0, -3}, {1, 1}], 
            Offset[{0, -1.3443}, {1, 1}], 
            Offset[{-1.3443, 0}, {1, 1}], 
            Offset[{-3, 0}, {1, 1}], 
            Offset[{-3, 0}, {1, 1}], 
            Offset[{3, 0}, {-1, 1}], 
            Offset[{3, 0}, {-1, 1}], 
            Offset[{1.3443, 0}, {-1, 1}], 
            Offset[{0, -1.3443}, {-1, 1}], 
            Offset[{0, -3}, {-1, 1}], 
            Offset[{0, -3}, {-1, 1}], {-1, -1}, {-1, -1}, {-1, -1}, {1, -1}, {
            1, -1}}]], 
         InsetBox[
          FormBox[
           StyleBox[
           "\"Notebook Analysis\"", FontColor -> GrayLevel[0.4], FontColor -> 
            GrayLevel[0.4], FontFamily -> "Source Sans Pro", FontWeight -> 
            Plain, FontSize -> 13, StripOnInput -> False], TraditionalForm], 
          Offset[{8, 0}, {-1, 0}], 
          NCache[
           ImageScaled[{0, 1/2}], 
           ImageScaled[{0, 0.5}]]], 
         TagBox[
          TagBox[
           TooltipBox[{
             GrayLevel[0.6], 
             DiskBox[
              Offset[{-13, -10}, {1, 1}], 
              Offset[6]], 
             GrayLevel[0.97], 
             AbsoluteThickness[1.5], 
             CapForm["Round"], 
             LineBox[{{
                Offset[{-15, -8}, {1, 1}], 
                Offset[{-11, -12}, {1, 1}]}, {
                Offset[{-15, -12}, {1, 1}], 
                Offset[{-11, -8}, {1, 1}]}}]}, 
            FrameBox[
             StyleBox[
             "\"Close analysis pod\"", "Text", FontColor -> 
              RGBColor[0.53725, 0.53725, 0.53725], FontSize -> 12, FontWeight -> 
              "Plain", FontTracking -> "Plain", StripOnInput -> False], 
             Background -> RGBColor[0.96078, 0.96078, 0.96078], FrameStyle -> 
             RGBColor[0.89804, 0.89804, 0.89804], FrameMargins -> 8, 
             StripOnInput -> False], TooltipDelay -> 0.1, 
            TooltipStyle -> {Background -> None, CellFrame -> 0}], 
           Annotation[#, "Close analysis pod", "Tooltip"]& ], 
          EventHandlerTag[{"MouseClicked" :> NotebookDelete[
              EvaluationCell[]], Method -> "Preemptive", PassEventsDown -> 
            Automatic, PassEventsUp -> True}]]}, AspectRatio -> Full, 
        ImageSize -> {Full, 20}, PlotRange -> {{-1, 1}, {-1, 1}}, 
        ImageMargins -> {{0, 0}, {0, 0}}, 
        ImagePadding -> {{0, 0}, {0, 0}}]& )}], 
   Cell[
    StyleData["HintPodDelimiterTop"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         AbsoluteThickness[1], 
         GrayLevel[0.85], 
         CapForm["Round"], 
         LineBox[{{-1, 0}, {1, 0}}]}, AspectRatio -> Full, 
        PlotRange -> {{-1, 1}, {-1, 1}}, ImagePadding -> {{0, 0}, {0, 0}}, 
        ImageSize -> {Full, 2}, BaselinePosition -> Scaled[0.1], 
        ImageMargins -> {{0, 0}, {4, 0}}]& )}], 
   Cell[
    StyleData["HintPodDelimiterBottom"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         AbsoluteThickness[1], 
         GrayLevel[0.85], 
         CapForm["Round"], 
         LineBox[{{-1, 0}, {1, 0}}]}, AspectRatio -> Full, 
        PlotRange -> {{-1, 1}, {-1, 1}}, ImagePadding -> {{0, 0}, {0, 0}}, 
        ImageSize -> {Full, 2}, BaselinePosition -> Scaled[0.1], 
        ImageMargins -> {{0, 0}, {0, 4}}]& )}], 
   Cell[
    StyleData["HintPodFooter"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         GrayLevel[0.97], 
         FilledCurveBox[
          BezierCurve[{{-1, 1}, {-1, 1}, 
            Offset[{0, 3}, {-1, -1}], 
            Offset[{0, 3}, {-1, -1}], 
            Offset[{0, 1.3443}, {-1, -1}], 
            Offset[{1.3443, 0}, {-1, -1}], 
            Offset[{3, 0}, {-1, -1}], 
            Offset[{3, 0}, {-1, -1}], 
            Offset[{-3, 0}, {1, -1}], 
            Offset[{-3, 0}, {1, -1}], 
            Offset[{-1.3443, 0}, {1, -1}], 
            Offset[{0, 1.3443}, {1, -1}], 
            Offset[{0, 3}, {1, -1}], 
            Offset[{0, 3}, {1, -1}], {1, 1}, {1, 1}}]], 
         InsetBox[
          BoxData[
           FormBox[
            TemplateBox[{
              StyleBox[
               TemplateBox[{3}, "Spacer1"], FontColor -> GrayLevel[0.4], 
               FontFamily -> "Source Sans Pro", FontWeight -> Plain, FontSize -> 
               12, StripOnInput -> False], 
              StyleBox[#, FontColor -> GrayLevel[0.4], FontFamily -> 
               "Source Sans Pro", FontWeight -> Plain, FontSize -> 12, 
               StripOnInput -> False], 
              StyleBox[
               TemplateBox[{5}, "Spacer1"], FontColor -> GrayLevel[0.4], 
               FontFamily -> "Source Sans Pro", FontWeight -> Plain, FontSize -> 
               12, StripOnInput -> False]}, "RowDefault"], TraditionalForm]], 
          
          Offset[{5, 2.5}, {-1, 0}], {-1, 0}]}, AspectRatio -> Full, 
        ImageSize -> {Full, 21}, PlotRange -> {{-1, 1}, {-1, 1}}, 
        ImageMargins -> {{0, 0}, {0, 3}}, 
        ImagePadding -> {{0, 0}, {0, 0}}]& )}], 
   Cell[
    StyleData["HintPodMenuItems"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (
       TemplateBox[{#, FrameMargins -> 3, Background -> GrayLevel[1], 
         RoundingRadius -> 0, FrameStyle -> Directive[
           AbsoluteThickness[1], 
           RGBColor[0.75686, 0.82745, 0.88235]], ImageMargins -> #2}, 
        "Highlighted"]& )}], 
   Cell[
    StyleData["HintPodActionMenuItem"], 
    TemplateBoxOptions -> {DisplayFunction -> (ButtonBox[
        TemplateBox[{
          TagBox[
           GridBox[{{#, 
              TemplateBox[{7}, "Spacer1"], #2}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], FrameStyle -> 
          None, RoundingRadius -> 0, FrameMargins -> {{5, 2}, {2, 2}}, 
          ImageSize -> Full, ImageMargins -> {{0, 0}, {0, 0}}, Background -> 
          Dynamic[
            If[
             CurrentValue["MouseOver"], 
             GrayLevel[0.96], 
             GrayLevel[1.]]]}, "Highlighted"], ButtonFunction :> 
        ReleaseHold[#3], 
        Appearance -> {
         "Default" -> 
          Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0, 0, 
             255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 0}, {0, 
             0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {255, 255, 
             255, 255}}}], "Byte", ColorSpace -> "RGB", 
            ImageResolution -> {72, 72}, Interleaving -> True], "Hover" -> 
          Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0, 0, 
             255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 0}, {0, 
             0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {255, 255, 
             255, 255}}}], "Byte", ColorSpace -> "RGB", 
            ImageResolution -> {72, 72}, Interleaving -> True], "Pressed" -> 
          Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0, 0, 
             255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 0}, {0, 
             0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {255, 255, 
             255, 255}}}], "Byte", ColorSpace -> "RGB", 
            ImageResolution -> {72, 72}, Interleaving -> True]}, Method -> 
        "Queued", Evaluator -> Automatic]& )}], 
   Cell[
    StyleData["HintPodDisabledMenuItem"], 
    TemplateBoxOptions -> {DisplayFunction -> (ButtonBox[
        TemplateBox[{
          TagBox[
           GridBox[{{#, 
              TemplateBox[{7}, "Spacer1"], 
              StyleBox[#2, FontOpacity -> 0.4]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], FrameStyle -> 
          None, RoundingRadius -> 0, FrameMargins -> {{5, 2}, {2, 2}}, 
          ImageSize -> Full, ImageMargins -> {{0, 0}, {0, 0}}, Background -> 
          GrayLevel[1.]}, "Highlighted"], ButtonFunction :> Null, 
        Appearance -> {
         "Default" -> 
          Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0, 0, 
             255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 0}, {0, 
             0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {255, 255, 
             255, 255}}}], "Byte", ColorSpace -> "RGB", 
            ImageResolution -> {72, 72}, Interleaving -> True], "Hover" -> 
          Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0, 0, 
             255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 0}, {0, 
             0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {255, 255, 
             255, 255}}}], "Byte", ColorSpace -> "RGB", 
            ImageResolution -> {72, 72}, Interleaving -> True], "Pressed" -> 
          Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0, 0, 
             255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 0}, {0, 
             0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {255, 255, 
             255, 255}}}], "Byte", ColorSpace -> "RGB", 
            ImageResolution -> {72, 72}, Interleaving -> True]}, Method -> 
        "Queued", Evaluator -> Automatic, Enabled -> False]& )}], 
   Cell[
    StyleData["HintPodActionLabel"], 
    TemplateBoxOptions -> {DisplayFunction -> (PaneBox[
        StyleBox[#, FontColor -> GrayLevel[0.2], FontFamily -> 
         "Source Sans Pro", FontWeight -> Plain, FontSize -> 13, LineIndent -> 
         0, StripOnInput -> False], FrameMargins -> 0, ImageMargins -> 0, 
        BaselinePosition -> Baseline, ImageSize -> Full]& )}], 
   Cell[
    StyleData["HintPodMenuDelimiter"], 
    TemplateBoxOptions -> {DisplayFunction -> (PaneBox[
        StyleBox[
         GraphicsBox[{
           CapForm["Round"], 
           GrayLevel[0.9], 
           AbsoluteThickness[1], 
           LineBox[{{-1, 0}, {1, 0}}]}, AspectRatio -> Full, 
          PlotRange -> {{-1, 1}, {-1, 1}}, ImageMargins -> {{0, 0}, {2, 2}}, 
          ImagePadding -> {{5, 5}, {0, 0}}, ImageSize -> {Full, 2}], 
         LineIndent -> 0, StripOnInput -> False], FrameMargins -> 0, 
        ImageMargins -> 0, BaselinePosition -> Baseline, ImageSize -> 
        Full]& )}], 
   Cell[
    StyleData["HintPodIconChevron"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         GrayLevel[0.2], 
         AbsoluteThickness[1.8], 
         CapForm["Round"], 
         JoinForm["Miter"], 
         LineBox[{{-0.5, 1}, {0.5, 0}, {-0.5, -1}}]}, AspectRatio -> Full, 
        BaselinePosition -> Bottom, ImageMargins -> {{0, 4}, {0, 0}}, 
        ImageSize -> {5.6, 7.7}]& )}], 
   Cell[
    StyleData["HintPodIconPopOut"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         FaceForm[
          GrayLevel[0.4]], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
          3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
          0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIlIGYC4h1yra8Dd6g4rHN/WCWip+KwRiYqxXq+isNk
CZYwvlwEDROHqYPpKwUrUHFgAIEDKg5nzwDBG2VU/hlluPogMEMCzm9kOdpv
aC6OJi/mINR84NRCVwQfIq8M519wufHhi5Yymn4lNPOVHNLAQBHO/6YR03/o
K5eDB9Ab69wFHJoeHZ+xexqng8r0/xPqfvM5cG9dVnl8JacD0FO6m+byOPxL
/f4kUZHbQZr3ge4EBW6HD2IeAX9m8Dhkzyqfs2gxp8ONxmK3Kd/4HOYsUt75
p50Tbi6YesgF9b8ShJ+oCOfD3Anjw/zx9JP8pXx7hD9h4QfjqxtyAKNCBU0e
EY4wPqr5iHh4/nvlx0tnVRyYObvkk98pOwA9+X75MRUHWWD03udHxCssngGf
XO7X
          "]]}, AspectRatio -> Automatic, ImageSize -> {14., 14.}, 
        PlotRange -> {{0., 13.62}, {0., 13.62}}]& )}], 
   Cell[
    StyleData["HintPodIconWrench"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         GrayLevel[0.4], 
         AbsoluteThickness[1], 
         Opacity[1.], 
         JoinedCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
          3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJRIGYCYmWv6mZ9n3/2cmJZvp/5BBzci37yv9wu6/Au
ysnuhaQynG8at8uT55AGXJwBDHQdPl3yTRKIUIfzo1Ks7/vzajiosjVOdfbW
ccjaUzJZokUFrv8ySLmlqoPbts9/r1iowsVh6mD6zp4BAh4NnPbA3AHTr+ss
8/rRNoS7YXyYv2D+7H/ySf5SPrdD7D/nX29ff7H/6hXZZnGNGc6HqYPRMPED
b+bZ6FxBqAPpOprL7YAefgCtVISU
          "], CurveClosed -> {1}]}, AspectRatio -> Automatic, 
        BaselinePosition -> Scaled[0.2], ImagePadding -> 0.5, 
        ImageSize -> {16., 16.}, PlotRange -> {{0., 16.}, {0., 16.}}]& )}], 
   Cell[
    StyleData["HintPodIconInfo"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         FaceForm[
          GrayLevel[0.4]], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4,
            3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
           3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {0, 1, 0}, {1, 3,
            3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{6.81, 13.}, {
           3.3914, 13.}, {0.62, 10.229}, {0.62, 6.81}, {0.62, 3.3914}, {
           3.3914, 0.62}, {6.81, 0.62}, {10.229, 0.62}, {13., 3.3914}, {13., 
           6.81}, {13., 10.229}, {10.229, 13.}, {6.81, 13.}}, CompressedData["

1:eJxTTMoPSmViYGCQB2IQbct1fXGBrbRD6+vAHXKtvA7r3B9WiayTdoCI8zgc
/qoR039IHkoLOjCAgYKDB0iZu4CDPFijgsOsmSDAC1UnCzWPE0rLQMXZHV6x
mAia1Ug56E1Y8MMwjdXh685bXX9VJRx4Jq9sCvRkcTh7BgREHfoPgTSwOAQB
db8OFHYAO4eLFeo+IQcRMIMLzoe4h9dBW2LqFc4MYYd4zdMCx38JOviYdzom
pIo4PJgjuHSvo6jDkgKQz0QdCsEelHDQjAHZJAa1VxIqLwH3Jzofok8S4i9W
RQews67LQsJhnoKDMRjIQ9Q3wMJJwQFMJULDSRJmrhzUPKh6Blmof+QcwM6K
kXb4Bgq2rzJQcXFovMhA5UUdciqqluo0SztsKMqY+NZG2OHV1E08hTrSDquA
oTmXQdABPX4BaWq/EA==
           "], {{8.81, 9.79}, {8.8101, 9.5122}, {8.5878, 9.2854}, {8.31, 
           9.28}, {7.51, 9.28}, {7.2283, 9.28}, {7., 9.5083}, {7., 9.79}, {7.,
            10.62}, {7.0054, 10.898}, {7.2322, 11.12}, {7.51, 11.12}, {8.35, 
           11.12}, {8.6239, 11.115}, {8.8447, 10.894}, {8.85, 10.62}}}]}, 
        AspectRatio -> Automatic, ImagePadding -> 0.5, 
        ImageSize -> {14., 14.}, 
        PlotRange -> {{0., 13.62}, {0., 13.62}}]& )}], 
   Cell[
    StyleData["HintPodIconNone"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (
       GraphicsBox[{}, AspectRatio -> Automatic, ImageSize -> {16., 16.}, 
        PlotRange -> {{0., 16.}, {0., 16.}}, BaselinePosition -> Scaled[0.2], 
        ImagePadding -> 0.5]& )}], 
   Cell[
    StyleData["HintPodIconIgnoreAlways"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         EdgeForm[None], 
         FaceForm[
          GrayLevel[0.4]], 
         FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
          0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJTIGYCYpF17g+rROQcbLmuLy6wlXaoBguoOvQf+qoR
w6/i8CZwh1zralWH4oyJb2vsVRx0N819v/yYqoO0/l0VtkYEv/U1UOFRBP/D
8mPe5pyqcP0z8oSaD3ipws2H0famcbs8fVQd2BqnOnevUXUAa+dWdUgSiLDc
ckLVwQPounXHVeB8kK1TmxH8gN7peULOKnD9EP+owM2H+QvmzyUFIBEeuHxC
mb+c2CtuuP75NjpXZj3jgpsP0s11nRPO5+feuqzyOAec73dxYsy/w+xw/WDr
uNjh5n9MPhPr7cEG93+V2Wq78Nus8PCB8WHhB+PDwhemHxb+MPNh8ZMGBhJw
f8Lkv2nEAJXwOGyu/rQh4DWrwwrTs9Z+F7kdvHiYtNunsTrYgrwpy+XQteHh
y6lGbA6HxNWCWRdzOJwKObhiyTk2B3fmCm4VDXaouRwOEaeMjmzUY4OHhybI
eA02eHgt/GH4bJ0qm4PT+bSrz4Hh+Z0tfobPVDZ4eIOVx7DD3QlzNwMYIPx1
smzffCl9FUg4u7M5hPEBU1S+isPs0Pmr195gdTAGgc0qUHewOswDJhfv7yoO
/g7CiYcvszoAU9vrQAtVh6V+QAFnNqg9iHj5dMk3SWAGIt78wBGJiFcYH+ZP
GB/mT5h+WLqBmQ/zJwC4F0s3
          "]]}, AspectRatio -> Automatic, ImageMargins -> {{0, 0}, {0, 2}}, 
        ImageSize -> {14., 14.}, 
        PlotRange -> {{-0.5, 13.62}, {-0.5, 13.62}}]& )}], 
   Cell[
    StyleData["HintPodIconIgnoreInCell"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         EdgeForm[None], 
         FaceForm[
          GrayLevel[0.4]], 
         FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
           0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
            0}}}, {{{11.69, 13.37}, {7.57, 13.37}, {7.57, 12.37}, {7.76, 
           12.37}, {11.19, 8.93}, {11.19, 1.25}, {7.57, 1.25}, {7.57, 0.25}, {
           12.19, 0.25}, {12.19, 13.37}}, {{9.17, 12.37}, {11.17, 12.37}, {
           11.17, 10.37}}}], 
         FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
          0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
          0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
          0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIjIGYCYo+HVSLr3EUdbLmuLy6wlXZYUgBiyTlAxJUc
kt9FOdllyDuU6yrKf1mD4LM879F466sMV28MApuVHX7yv9y+3lkOQj9WdngU
Ib794gFZh/Dojfvf/FN22CHX+jrQAsHvf/JJ/tJ6GTgfbI+ODFz/2TMgIA03
vxroqodVQg5gSkQO6m4mVPubGR1E7I/d2fpE2cHy2tFckwYGB2n9uypsjCoO
YG89/GcP4wd5zm1QO/QHzr9wNeyN/u5f9jD9kHD4aQ8zX+z36XcnD3+3v8fE
2SXfrOygvqBzw8OX3+yDQAxHBB/srr9KcL7mW959BjuV4PrnCi7de7BcCW4+
LLwhND88PmDyEHcLOjg2PTo+Y/d3+/21shbpLYIOTglPLyjd/mZ//wH35JVM
CD4knATgfL0JC34YPuOH688Nq1237REf3HzNmP5DXzX4HLhVNOp6dv6yP3xZ
O1UyiRcePrlH/22q/sQDD79vGiANPA5yy1946NUzOOy61fU39TuPw5GNenmL
GxkdwPal8cLjB2Y+LP7SwEDCgQEMZODyf7+VPpgTKOOw9ldM7tE6XgfmCqCL
9sk43PfvnZ4nxAuJZ2NZB5j9UV933uraK+swf/XaG/HfeCDudZJzuA1yTgov
PH3CzBcAJg/mdHmHVElQyuSH851lXj8ykxKEq4eFNwCKHGBr
          "]]}, AspectRatio -> Automatic, ImageMargins -> {{0, 0}, {0, 2}}, 
        ImageSize -> {14., 14.}, 
        PlotRange -> {{-0.5, 13.62}, {-0.5, 13.62}}]& )}], 
   Cell[
    StyleData["HintPodIconIgnoreInNotebook"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         FaceForm[
          GrayLevel[0.4]], 
         FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJTIGYC4qAdcq2vAwUcbLmuLy6wFXdYUgBiSTp4PKwS
Weeu4GCgtVL4AouUw1zBpXsPlis4vDlgqexlLeWg+ZZ3n8FOBB+s/y+CH6S+
oHODoyJc/z0mzi75ZkW4+cYgsFnRoanYbco3N0kHEftjd7Y+UXRYeM3kvcVR
CYeQx0tnH2FQgroLwb9pWxmxYqs4nP9zQfrmV8bicP0g1VzXxeDmf9OI6T/0
lcsB6Bmgj6QcGMDggz1MvoTnRNz7f2/sf/K/3L7+saLDzmCriP/PX9iHR2/c
/+YfzL1P4Pz+Xoc96+IfwPkrVqZm1068AdcPtAxo4yW4+ccenln/jOGkPcz/
MjWJRqEGh+xh4QPjw8IPxoeFL0w/LPxh5sPiB0KzwuNPHhibO+Su2h8GKTvE
7aAYeYAl7+5Z+/rfVgXnOLgdPu6qO5h345j9voPiasGsXHA+JJw44Hy9CQt+
GD5jh+vPDatdt+0RG9x8TZByDTYH/uky5V7st+21JaZe4cxgdZgp5PnFqOuh
vQY/99ZlP1kcIO54CjWfxeFeX0HUh0Uv7bdEft15i4vVoa2/Q3Oiy1t77Xax
m+fKWeHxAzMfFn9pYCACj1+YfMeX29cbgfF/+LJ2qmQSKzx95B79t6n6Ews8
/cDsB3O5JB1Upv+fUPebxeHIRr28xQeB6e+Cy40PX1gdnjTPO7uKX8qh/8kn
+Uv57A4sYXy6m2KlHDjBCY3DwV9OLMvXGJjeda7MejaXC56eYeENAPSkchE=

          "]], 
         FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
          0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
          3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
          3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJdIGYC4qAdcq2vL6o52HJdX1ywVwtC24rB+YdTViWE
XBKE86tF1rk/rOJxMAaBzxpwPkReDY2vCDVPCMpXhvPB+jerwfnPf6/8eOms
ukPDdoemR+wiUHkNuHtgfJh7YXy2xqnO3W/U0eQ14ObB+DD7YHzNmP5DXzWY
4PzY3KP/NlX/toeZBxYP/GIPsw/GBzuHSxrOX7TF/MchFSkH9g9iHgF/Ptmb
vrdwdTeSdNjZywYU+WQPcb8E1B+f7H8EP146m0XcYeE1E6DKT/Z9IGUXRB02
V3/aEJD92R5s7A4Rh1kzQeCr/YQFPwyfvRN2+Put9MEcwe/2894vP+ZtLuxw
3793ep7QT3uIOiEHkC651t/2YH8a80LtY3NA5TPB+RPrflsVnPtkL/8lJ6xW
T8jhTSDYo1DzxOB8BjBQh/O/aQADzlQTTV4bbh6MD7MPxoeFfwDI2czaDmfP
gAA0nCdqOTglPL2gdFvDweNhlci645oO8iAPzdOEmPNXw+EPMDp9k7Qc4nZ5
8jC9VncAG39KywE9/QIAH6UuJw==
          "]], 
         FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}}}, {{{
          5.63, 11.05}, {5.63, 10.44}, {6.0569, 10.539}, {6.5048, 10.49}, {
          6.9, 10.3}, {9.53, 10.3}, {9.53, 11.05}}}], 
         FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {0, 1, 0}}}, {{{7.92, 3.73}, {
          8.0396, 3.4994}, {8.0784, 3.2353}, {8.03, 2.98}, {9.41, 2.98}, {
          9.41, 3.73}}}], 
         FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}}}, {{{6.73, 6.21}, {6.2, 5.82}, {6.67, 5.46}, {11.22, 5.46}, {
          11.22, 6.21}, {6.73, 6.21}}}], 
         FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {0, 1, 0}}}, {{{8., 8.7}, {
          8.0514, 8.4458}, {8.0162, 8.1818}, {7.9, 7.95}, {10.25, 7.95}, {
          10.25, 8.7}}}]}, AspectRatio -> Automatic, ImagePadding -> 0.75, 
        ImageSize -> {15., 15.}, 
        PlotRange -> {{0., 13.62}, {0., 13.62}}]& )}], 
   Cell[
    StyleData["HintPodIconHint"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         EdgeForm[None], 
         FaceForm[#], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4,
            3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
           3}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
            3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
           3}, {1, 3, 3}}}, {{{9.015, 17.37}, {4.4559, 17.37}, {0.76, 
           13.645}, {0.76, 9.05}, {0.76, 4.455}, {4.4559, 0.73}, {9.015, 
           0.73}, {13.574, 0.73}, {17.27, 4.455}, {17.27, 9.05}, {17.27, 
           13.645}, {13.574, 17.37}, {9.015, 17.37}}, CompressedData["
1:eJxTTMoPSmViYGCQBGIQbcixRiYqRcVh3bak+pu23A5rf8XkHt2n7OC/fkpq
x2MOB8+5DWqHnik5nP8e/HjpbHYHj4dVIuvYlRyAiisjVrA78Bau6b6toegQ
ApQ9soDdQepAtIJjoILDJ8fzaVefczgs6Nzw8GWoPNx84yMb9fIeyzr831T9
acMFXod1N+LL/OVkHV5uX8/8/IyAw7Fck4btDrIOZQ/mCC7dK+TAXMGtomEn
6/DP+dfb1w0iDkIi9sfufJV1ePRy6iYeQzGHac7dOc+t5R3SwEDcwe7FzTW/
bBQc9kybwF+1TcLh7TwbnStSig7Hd+3oZSuQdDjab1iuy6jk0MIL8qGkg8f+
WlmL50oO9uHRG/fnSDr4fu4LLjmi7HDw1ELXbZslHGDhAzO//9BXjRh+VQeG
iXW/rQzEHKzv+/dOz1N1uFfY1fekSMRhzhGFDUUZqhB/LhaCmFOs6sC0h1VI
ZL+Ag8g6d2AIqjqYCJrZ7L3E64Ae/gDrrapT
           "], CompressedData["
1:eJxTTMoPSmViYGBQBGIQ/emSb5KAhJoDAwg0aDhYbjlRtu++isNudX7urWpK
DrX2pnG7Tqo4TFPsKy2sVnRQvv2zLqtGBULfUXAI6J2eJ8Ss4mDSsN2hKUnB
Ia0jOfZOmrKD/l0Vtsar8g5Gz9apPlms5GDgs4zLLVXeweLHoZRVDxQdnNdm
3ivskneQW/7CQ09e0aHEbco3tnh5h+jLex6LxCo4FErzPtC9IO+wVfT36Xed
8nDzH5tJHYheIOeQBxJ4pOCgu2nu++Vscg75Qs0HTjUqOjDkN7IcPS/rcObd
ycNOukoObqqlTLM4ZOD+O7JRL2/xQWkHHibtdrFITYeb8WX+ctOkHQ6eWui6
zVjLQfD4rh29bdIO/Ye+asTwazuAnJswRdohaIdc6+uL2g6qbI1TnbtlHGy5
ri8uqNVxEIgAhtg3WYj5B3QcgKEkzcsAdOfS2UcUDHQdEp5eULotqehw89z3
4Mepug63pGsSjUyVHMr3zZfSj9V1uKKdKvkoQtmhOGPi25p6XQeQ8p91KhB9
lroOIGH7UlWH+qw9JZNn6EDs54bGF4OOA9AVtlzhag6KG4oyJupqO4CCYaGr
mgM4XiO0HK5WvFQz9FBzuAzi7tR0cNv2+e8VCzUHJ5AF0poO6PEPAFdvzZk=

           "]}]}, AspectRatio -> Automatic, BaselinePosition -> Scaled[0.1], 
        ImagePadding -> 0.5, ImageSize -> {14., 14.778}, 
        PlotRange -> {{0.76, 17.27}, {0.73, 17.37}}]& )}], 
   Cell[
    StyleData["FileManagerFile", StyleDefinitions -> StyleData["Text"]], 
    CellMargins -> {{60, Inherited}, {0, 0}}, Deployed -> True, Evaluatable -> 
    True, CellGroupingRules -> {"SectionGrouping", 100}, 
    CellFrameMargins -> {{5, 5}, {2, 2}}, 
    CellFrameLabelMargins -> {{0, Inherited}, {Inherited, Inherited}}, 
    ContextMenu -> {
      MenuItem["Open", 
       KernelExecute[
        ToExpression[
        "DefinitionNotebookClient`FileTreeOpen[EvaluationCell[]]"]], 
       MenuEvaluator -> Automatic, Method -> "Queued"], 
      MenuItem["Un/Mark as Excluded", 
       KernelExecute[
        ToExpression[
        "DefinitionNotebookClient`FileTreeExclusionToggle[EvaluationCell[]]"]]\
, MenuEvaluator -> Automatic, Method -> "Queued"], 
      MenuItem["Copy Path to Clipboard", 
       KernelExecute[
        ToExpression[
        "DefinitionNotebookClient`FileTreeCopy[EvaluationCell[]]"]], 
       MenuEvaluator -> Automatic, Method -> "Queued"]}, ShowStringCharacters -> 
    False, Background :> FEPrivate`If[
      CurrentValue["MouseOver"], 
      GrayLevel[0.92], 
      GrayLevel[0.99]]], 
   Cell[
    StyleData[
    "FileManagerDirectory", StyleDefinitions -> StyleData["FileManagerFile"]],
     ShowGroupOpener -> "Inline", Evaluatable -> False, CellEventActions -> 
    None, CellFrameLabels -> {{
       Cell[
        BoxData[
         TemplateBox[{}, "FileManagerDirectoryIconTemplate"]], Background -> 
        None], None}, {None, None}}, ContextMenu -> {
      MenuItem["Open/Close Group", 
       KernelExecute[SelectionMove[
          EvaluationCell[], All, Cell]; FrontEndTokenExecute[
          EvaluationNotebook[], "OpenCloseGroup"]], MenuEvaluator -> 
       Automatic, Method -> "Queued"], 
      MenuItem["Open Directory", 
       KernelExecute[
        ToExpression[
        "DefinitionNotebookClient`FileTreeOpen[EvaluationCell[]]"]], 
       MenuEvaluator -> Automatic, Method -> "Queued"], 
      MenuItem["Un/Mark as Excluded", 
       KernelExecute[
        ToExpression[
        "DefinitionNotebookClient`FileTreeExclusionToggle[EvaluationCell[]]"]]\
, MenuEvaluator -> Automatic, Method -> "Queued"], 
      MenuItem["Copy Path to Clipboard", 
       KernelExecute[
        ToExpression[
        "DefinitionNotebookClient`FileTreeCopy[EvaluationCell[]]"]], 
       MenuEvaluator -> Automatic, Method -> "Queued"]}, Background -> 
    GrayLevel[0.99]], 
   Cell[
    StyleData[
    "FileManagerEmptyDirectory", StyleDefinitions -> 
     StyleData["FileManagerDirectory"]], CellFrameLabels -> {{
       Cell[
        BoxData[
         TemplateBox[{}, "FileManagerEmptyDirectoryIconTemplate"]], 
        Background -> None], None}, {None, None}}], 
   Cell[
    StyleData["FileManagerBottomSpacer"], ShowCellBracket -> False], 
   Cell[
    StyleData["FileManagerTopSpacer"], CellMargins -> 0, 
    CellElementSpacings -> {"CellMinHeight" -> 0, "ClosedCellHeight" -> 0}, 
    CellOpen -> False], 
   Cell[
    StyleData["UsageInputs", StyleDefinitions -> StyleData["Input"]], 
    CellMargins -> {{66, 10}, {0, 8}}, 
    StyleKeyMapping -> {"Tab" -> "UsageDescription"}, Evaluatable -> False, 
    CellEventActions -> {"ReturnKeyDown" :> With[{RSNB`nb$ = Notebooks[
           EvaluationCell[]]}, SelectionMove[
          EvaluationCell[], After, Cell]; NotebookWrite[RSNB`nb$, 
          Cell["", "UsageDescription"], All]; 
        SelectionMove[RSNB`nb$, Before, CellContents]], {"KeyDown", "\t"} :> 
      Replace[SelectionMove[
          SelectedNotebook[], After, Cell]; NotebookFind[
          SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
          WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
          SelectedNotebook[], All, CellContents, AutoScroll -> True]]}, 
    ShowAutoStyles -> False, ShowCodeAssist -> False, 
    CodeAssistOptions -> {"DynamicHighlighting" -> False}, 
    LineSpacing -> {1, 3}, TabSpacings -> {2.5}, CounterIncrements -> "Text", 
    FontFamily -> "Source Sans Pro", FontSize -> 15, FontWeight -> "Plain"], 
   Cell[
    StyleData["UsageDescription", StyleDefinitions -> StyleData["Text"]], 
    CellMargins -> {{86, 10}, {7, 0}}, 
    StyleKeyMapping -> {"Backspace" -> "UsageInputs"}, CellGroupingRules -> 
    "OutputGrouping", 
    CellEventActions -> {"ReturnKeyDown" :> With[{RSNB`nb$ = Notebooks[
           EvaluationCell[]]}, SelectionMove[
          EvaluationCell[], After, Cell]; NotebookWrite[RSNB`nb$, 
          Cell[
           BoxData[""], "UsageInputs", FontFamily -> "Source Sans Pro"], All]; 
        SelectionMove[RSNB`nb$, Before, CellContents]], {"KeyDown", "\t"} :> 
      Replace[SelectionMove[
          SelectedNotebook[], After, Cell]; NotebookFind[
          SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
          WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
          SelectedNotebook[], All, CellContents, AutoScroll -> True]]}, 
    ShowAutoSpellCheck -> False], 
   Cell[
    StyleData["Notes", StyleDefinitions -> StyleData["Item"]], CellDingbat -> 
    StyleBox["\[FilledVerySmallSquare]", FontColor -> GrayLevel[0.6]], 
    CellMargins -> {{66, 24}, {9, 7}}, ReturnCreatesNewCell -> False, 
    StyleKeyMapping -> {}, DefaultNewCellStyle -> "Notes", ShowAutoSpellCheck -> 
    False, GridBoxOptions -> {BaseStyle -> "TableNotes"}], 
   Cell[
    StyleData["TableNotes", StyleDefinitions -> StyleData["Notes"]], 
    CellDingbat -> None, CellFrameColor -> RGBColor[0.749, 0.694, 0.553], 
    StyleMenuListing -> None, 
    ButtonBoxOptions -> {Appearance -> {Automatic, None}}, 
    GridBoxOptions -> {
     FrameStyle -> GrayLevel[0.906], 
      GridBoxAlignment -> {
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}}, 
      GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{True}}}, 
      GridDefaultElement -> Cell["\[Placeholder]", "TableText"]}], 
   Cell[
    StyleData["TableText"], DefaultInlineFormatType -> 
    "DefaultInputInlineFormatType", AutoQuoteCharacters -> {}, 
    PasteAutoQuoteCharacters -> {}, StyleMenuListing -> None], 
   Cell[
    StyleData["ExampleDelimiter"], Selectable -> False, ShowCellBracket -> 
    Automatic, CellMargins -> {{66, 14}, {5, 10}}, Evaluatable -> True, 
    CellGroupingRules -> {"SectionGrouping", 58}, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False, 
    CellLabelAutoDelete -> True, TabFilling -> 
    "\[LongDash]\[NegativeThickSpace]", TabSpacings -> {100}, 
    StyleMenuListing -> None, FontFamily -> "Verdana", FontWeight -> Bold, 
    FontSlant -> "Plain", FontColor -> GrayLevel[0.906]], 
   Cell[
    StyleData["ExampleText", StyleDefinitions -> StyleData["Text"]]], 
   Cell[
    StyleData["PageBreak", StyleDefinitions -> StyleData["ExampleDelimiter"]],
     Selectable -> False, CellFrame -> {{0, 0}, {1, 0}}, 
    CellMargins -> {{66, 14}, {15, -5}}, 
    CellElementSpacings -> {"CellMinHeight" -> 1}, Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), CellFrameColor -> 
    GrayLevel[
      Rational[77, 85]]], 
   Cell[
    StyleData["Subsection"], Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False], 
   
   Cell[
    StyleData["Subsubsection"], Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False], 
   
   Cell[
    StyleData["ExampleImage"], PageWidth :> First[{650}], 
    CellMargins -> {{66, 66}, {16, 5}}, Evaluatable -> False, ShowCellLabel -> 
    False, MenuSortingValue -> 10000, 
    RasterBoxOptions -> {ImageEditMode -> False}], 
   Cell[
    StyleData["Link"], FontFamily -> "Source Sans Pro", FontColor -> Dynamic[
      If[
       CurrentValue["MouseOver"], 
       RGBColor[0.855, 0.396, 0.145], 
       RGBColor[0.02, 0.286, 0.651]]]], 
   Cell[
    StyleData["StringTypeLink", StyleDefinitions -> StyleData["Link"]], 
    FontColor -> Dynamic[
      If[
       CurrentValue["MouseOver"], 
       RGBColor[0.969, 0.467, 0.], 
       GrayLevel[0.467]]]], 
   Cell[
    StyleData["CharactersRefLink"], ShowSpecialCharacters -> False], 
   Cell[
    StyleData["Excluded"], 
    CellBracketOptions -> {
     "Color" -> RGBColor[0.9, 0.4, 0.4], "Thickness" -> 2}, 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "Excluded"}, 
      "Message" -> {"Message", "MSG", "Excluded"}, 
      "Output" -> {"Output", "Excluded"}, "Print" -> {"Print", "Excluded"}, 
      "PrintTemporary" -> {"PrintTemporary", "Excluded"}}, CellFrameMargins -> 
    4, CellFrameLabels -> {{None, 
       Cell[
        BoxData[
         TemplateBox[{
           StyleBox[
           "\"excluded\"", "ExcludedCellLabel", StripOnInput -> False], 
           "\"Excluded cells will not appear anywhere in the published \
resource except for the definition notebook\""}, "PrettyTooltipTemplate"]], 
        "ExcludedCellLabel"]}, {None, None}}, StyleMenuListing -> None, 
    Background -> RGBColor[1, 0.95, 0.95]], 
   Cell[
    StyleData["ExcludedCellLabel", StyleDefinitions -> StyleData["Text"]], 
    ShowStringCharacters -> False, FontFamily -> "Source Sans Pro", FontSize -> 
    9, FontWeight -> Plain, FontSlant -> Italic, FontColor -> 
    RGBColor[0.9, 0.4, 0.4, 0.5], Background -> None], 
   Cell[
    StyleData["Comment", StyleDefinitions -> StyleData["Text"]], 
    CellFrame -> {{3, 0}, {0, 0}}, CellMargins -> {{66, 0}, {1, 0}}, 
    CellElementSpacings -> {"ClosedCellHeight" -> 0}, 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "Comment"}, 
      "Message" -> {"Message", "MSG", "Comment"}, 
      "Output" -> {"Output", "Comment"}, "Print" -> {"Print", "Comment"}, 
      "PrintTemporary" -> {"PrintTemporary", "Comment"}}, CellFrameColor -> 
    RGBColor[0.88072, 0.61104, 0.14205], 
    CellFrameLabelMargins -> {{0, 10}, {0, 0}}, FontColor -> GrayLevel[0.25], 
    Background -> RGBColor[0.982, 0.942, 0.871]], 
   Cell[
    StyleData["AuthorComment", StyleDefinitions -> StyleData["Comment"]], 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "AuthorComment"}, 
      "Message" -> {"Message", "MSG", "AuthorComment"}, 
      "Output" -> {"Output", "AuthorComment"}, 
      "Print" -> {"Print", "AuthorComment"}, 
      "PrintTemporary" -> {"PrintTemporary", "AuthorComment"}}, 
    CellFrameColor -> RGBColor[0.36842, 0.50678, 0.7098], Background -> 
    RGBColor[0.905, 0.926, 0.956]], 
   Cell[
    StyleData["ReviewerComment", StyleDefinitions -> StyleData["Comment"]], 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "ReviewerComment"}, 
      "Message" -> {"Message", "MSG", "ReviewerComment"}, 
      "Output" -> {"Output", "ReviewerComment"}, 
      "Print" -> {"Print", "ReviewerComment"}, 
      "PrintTemporary" -> {"PrintTemporary", "ReviewerComment"}}, 
    CellFrameColor -> RGBColor[0.56018, 0.69157, 0.19488], Background -> 
    RGBColor[0.934, 0.954, 0.879]], 
   Cell[
    StyleData["CommentLabel", StyleDefinitions -> StyleData["Text"]], 
    ShowStringCharacters -> False, FontSlant -> "Italic", 
    PrivateFontOptions -> {"OperatorSubstitution" -> False}, FontColor -> 
    GrayLevel[0.5]], 
   Cell[
    StyleData["FormObjectCell"], CellMargins -> {{66, 66}, {16, 5}}], 
   Cell[
    StyleData["LocalFileInput", StyleDefinitions -> StyleData["Input"]], 
    CellFrameLabels -> {{None, 
       Cell[
        BoxData[
         ButtonBox[
         "\"Choose\"", FrameMargins -> {{5, 5}, {0, 0}}, 
          BaseStyle -> {"Panel", FontSize -> 12}, Evaluator -> Automatic, 
          Method -> "Queued", ButtonFunction :> 
          With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
            Quiet[
             
             Block[{$ContextPath = RSNB`$cp$, 
               ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
               False, DefinitionNotebookClient`$ButtonCodeID = None}, 
              Internal`WithLocalSettings[
               DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                  ReleaseHold[
                   CurrentValue[
                   RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                  "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                Annotation[
                DefinitionNotebookClient`$ButtonCodeID = 1053094956087266899; 
                 DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                   ReleaseHold[DefinitionNotebookClient`$ButtonCode = HoldForm[
                    If[$VersionNumber >= 13., 
                    DefinitionNotebookClient`LocalFileInputDialog["Paclet", 
                    ParentCell[
                    EvaluationCell[]], "Type" -> "FileOpen"], 
                    MessageDialog[
                    "This feature requires Wolfram Language version 13 or \
later."]]]]], 
                 DefinitionNotebookClient`ButtonCodeID[1053094956087266899]], 
                DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
              Null]]], Appearance :> 
          FEPrivate`FrontEndResource[
           "FEExpressions", "GrayButtonNinePatchAppearance"]]]]}, {
      None, None}}], 
   Cell[
    StyleData["LocalDirectoryInput", StyleDefinitions -> StyleData["Input"]], 
    CellFrameLabels -> {{None, 
       Cell[
        BoxData[
         ButtonBox[
         "\"Choose\"", FrameMargins -> {{5, 5}, {0, 0}}, 
          BaseStyle -> {"Panel", FontSize -> 12}, Evaluator -> Automatic, 
          Method -> "Queued", ButtonFunction :> 
          With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
            Quiet[
             
             Block[{$ContextPath = RSNB`$cp$, 
               ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
               False, DefinitionNotebookClient`$ButtonCodeID = None}, 
              Internal`WithLocalSettings[
               DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                  ReleaseHold[
                   CurrentValue[
                   RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                  "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                Annotation[
                DefinitionNotebookClient`$ButtonCodeID = 4898876371082581810; 
                 DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                   ReleaseHold[DefinitionNotebookClient`$ButtonCode = HoldForm[
                    If[$VersionNumber >= 13., 
                    DefinitionNotebookClient`LocalFileInputDialog["Paclet", 
                    ParentCell[
                    EvaluationCell[]], "Type" -> "Directory"], 
                    MessageDialog[
                    "This feature requires Wolfram Language version 13 or \
later."]]]]], 
                 DefinitionNotebookClient`ButtonCodeID[4898876371082581810]], 
                DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
              Null]]], Appearance :> 
          FEPrivate`FrontEndResource[
           "FEExpressions", "GrayButtonNinePatchAppearance"]]]]}, {
      None, None}}], 
   Cell[
    StyleData["Item"], DefaultNewCellStyle -> "Item"], 
   Cell[
    StyleData["RelatedSymbol", StyleDefinitions -> StyleData["Item"]], 
    DefaultNewCellStyle -> {"RelatedSymbol", FontFamily -> "Source Sans Pro"},
     DefaultFormatType -> DefaultInputFormatType, FormatType -> InputForm], 
   Cell[
    StyleData["ButtonText"], FontFamily -> "Sans Serif", FontSize -> 11, 
    FontWeight -> Bold, FontColor -> RGBColor[0.459, 0.459, 0.459]], 
   Cell[
    StyleData["InlineFormula"], 
    HyphenationOptions -> {"HyphenationCharacter" -> "\[Continuation]"}, 
    LanguageCategory -> "Formula", AutoSpacing -> True, ScriptLevel -> 1, 
    SingleLetterItalics -> False, SpanMaxSize -> 1, StyleMenuListing -> None, 
    FontFamily -> "Source Sans Pro", FontSize -> 1. Inherited, 
    ButtonBoxOptions -> {Appearance -> {Automatic, None}}, 
    FractionBoxOptions -> {BaseStyle -> {SpanMaxSize -> Automatic}}, 
    GridBoxOptions -> {
     GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}}}], 
   Cell[
    StyleData["Input"], CellProlog :> First[{
       Quiet[
        (Block[{$ContextPath}, Once[
           ReleaseHold[
            CurrentValue[#, {TaggingRules, "CompatibilityTest"}]], 
           "KernelSession"]; If[$VersionNumber >= 12.2, 
           Needs["DefinitionNotebookClient`"], 
           Needs["ResourceSystemClient`DefinitionNotebook`"]]; 
         DefinitionNotebookClient`LoadDefinitionNotebook["Paclet", #]; 
         Null]& )[
         InputNotebook[]]]}]], 
   Cell[
    StyleData["Code"], CellProlog :> First[{
       Quiet[
        (Block[{$ContextPath}, Once[
           ReleaseHold[
            CurrentValue[#, {TaggingRules, "CompatibilityTest"}]], 
           "KernelSession"]; If[$VersionNumber >= 12.2, 
           Needs["DefinitionNotebookClient`"], 
           Needs["ResourceSystemClient`DefinitionNotebook`"]]; 
         DefinitionNotebookClient`LoadDefinitionNotebook["Paclet", #]; 
         Null]& )[
         InputNotebook[]]]}]], 
   Cell[
    StyleData["DockedCell"], CellFrameColor -> GrayLevel[0.75], Background -> 
    GrayLevel[
      Rational[16, 17]]], 
   Cell[
    StyleData["DisclosureDetails"], CellMargins -> {{94, Inherited}, {10, 0}},
     FontSize -> 12, FontColor -> GrayLevel[0.5]], 
   Cell[
    StyleData[
    "PacletDirectoryChooser", StyleDefinitions -> StyleData["Output"]], 
    Deletable -> False, CellMargins -> {{50, 40}, {Inherited, Inherited}}], 
   Cell[
    StyleData["PacletDirectoryChooserTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (FrameBox[
        PaneSelectorBox[{"Notebook" -> TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    TemplateBox[{}, "PacletDirectoryIconTemplate"], 
                    StyleBox[
                    "\"Paclet Directory\"", "Text", FontWeight -> "SemiBold", 
                    StripOnInput -> False], "\"\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"]}, {
                    StyleBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{
                    GridBox[{{
                    RadioButtonBox[
                    Dynamic[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "PacletDirectoryType"}], 
                    With[{RSNB`nbo = EvaluationNotebook[], RSNB`cell = 
                    EvaluationCell[]}, {RSNB`nbDir = Quiet[
                    NotebookDirectory[RSNB`nbo]], RSNB`oldDir = 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectory"}]}, 
                    WithCleanup[NotebookDelete[
                    Cells[RSNB`cell, AttachedCell -> True]]; 
                    CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    True, CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectory"}] = Inherited; 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectoryType"}] = #; 
                    Switch[#, "Notebook", 
                    If[
                    DirectoryQ[RSNB`nbDir], 
                    If[
                    And[RSNB`nbDir =!= RSNB`oldDir, 
                    MemberQ[$Packages, "PacletResource`DefinitionNotebook`"]], 
                    
                    With[{RSNB`nb$ = EvaluationNotebook[], 
                    RSNB`$cp$ = $ContextPath}, 
                    Quiet[
                    
                    Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                    Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    341138948110023950; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[
                    
                    PacletResource`DefinitionNotebook`\
RefreshNotebookPacletFiles[RSNB`nbo, RSNB`cell]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    341138948110023950]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                    Null]]]], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[
                    EvaluationCell[], 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{"\"The current notebook is not saved.\""}, 
                    "PacletDirectoryChooserErrorTemplate"]], 
                    "AttachedMessage"], "Inline", 
                    RemovalConditions -> {"EvaluatorQuit"}]; Null], "Custom", 
                    
                    If[
                    Quiet[
                    PacletObjectQ[
                    PacletObject[
                    File[RSNB`nbDir]]]], 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectory"}] = RSNB`nbDir, If[
                    StringQ[RSNB`nbDir], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[RSNB`cell, 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{
                    "\"The specified directory is not a valid paclet \
directory.\""}, "PacletDirectoryChooserErrorTemplate"]], "AttachedMessage"], 
                    "Inline", RemovalConditions -> {"EvaluatorQuit"}]]; 
                    NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]]],
                     CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    False]]& ], {"Notebook"}, DefaultBaseStyle -> 
                    "RadioButtonBar", Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]]], 
                    StyleBox[
                    "\"Same as Notebook\"", "RadioButtonBarLabel", 
                    StripOnInput -> False]}}, AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    ColumnAlignments -> Left, ColumnSpacings -> 0.3, 
                    BaselinePosition -> {1, 2}], "  ", 
                    GridBox[{{
                    RadioButtonBox[
                    Dynamic[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "PacletDirectoryType"}], 
                    With[{RSNB`nbo = EvaluationNotebook[], RSNB`cell = 
                    EvaluationCell[]}, {RSNB`nbDir = Quiet[
                    NotebookDirectory[RSNB`nbo]], RSNB`oldDir = 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectory"}]}, 
                    WithCleanup[NotebookDelete[
                    Cells[RSNB`cell, AttachedCell -> True]]; 
                    CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    True, CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectory"}] = Inherited; 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectoryType"}] = #; 
                    Switch[#, "Notebook", 
                    If[
                    DirectoryQ[RSNB`nbDir], 
                    If[
                    And[RSNB`nbDir =!= RSNB`oldDir, 
                    MemberQ[$Packages, "PacletResource`DefinitionNotebook`"]], 
                    
                    With[{RSNB`nb$ = EvaluationNotebook[], 
                    RSNB`$cp$ = $ContextPath}, 
                    Quiet[
                    
                    Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                    Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    341138948110023950; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[
                    
                    PacletResource`DefinitionNotebook`\
RefreshNotebookPacletFiles[RSNB`nbo, RSNB`cell]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    341138948110023950]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                    Null]]]], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[
                    EvaluationCell[], 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{"\"The current notebook is not saved.\""}, 
                    "PacletDirectoryChooserErrorTemplate"]], 
                    "AttachedMessage"], "Inline", 
                    RemovalConditions -> {"EvaluatorQuit"}]; Null], "Custom", 
                    
                    If[
                    Quiet[
                    PacletObjectQ[
                    PacletObject[
                    File[RSNB`nbDir]]]], 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectory"}] = RSNB`nbDir, If[
                    StringQ[RSNB`nbDir], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[RSNB`cell, 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{
                    "\"The specified directory is not a valid paclet \
directory.\""}, "PacletDirectoryChooserErrorTemplate"]], "AttachedMessage"], 
                    "Inline", RemovalConditions -> {"EvaluatorQuit"}]]; 
                    NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]]],
                     CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    False]]& ], {"Custom"}, DefaultBaseStyle -> 
                    "RadioButtonBar", Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]]], 
                    StyleBox[
                    "\"Other\"", "RadioButtonBarLabel", StripOnInput -> 
                    False]}}, AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    ColumnAlignments -> Left, ColumnSpacings -> 0.3, 
                    BaselinePosition -> {1, 2}]}], "Deploy"], 
                    RadioButtonBar[
                    Dynamic[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "PacletDirectoryType"}], 
                    With[{RSNB`nbo = EvaluationNotebook[], RSNB`cell = 
                    EvaluationCell[]}, {RSNB`nbDir = Quiet[
                    NotebookDirectory[RSNB`nbo]], RSNB`oldDir = 
                    CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectory"}]}, 
                    WithCleanup[NotebookDelete[
                    Cells[RSNB`cell, AttachedCell -> True]]; 
                    CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    True, CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectory"}] = Inherited; 
                    CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectoryType"}] = #; 
                    Switch[#, "Notebook", 
                    If[
                    DirectoryQ[RSNB`nbDir], 
                    If[
                    And[RSNB`nbDir =!= RSNB`oldDir, 
                    MemberQ[$Packages, "PacletResource`DefinitionNotebook`"]], 
                    
                    With[{RSNB`nb$ = EvaluationNotebook[], 
                    RSNB`$cp$ = $ContextPath}, 
                    Quiet[
                    
                    Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                    Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    341138948110023950; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[
                    
                    PacletResource`DefinitionNotebook`\
RefreshNotebookPacletFiles[RSNB`nbo, RSNB`cell]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    341138948110023950]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                    Null]]]], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[
                    EvaluationCell[], 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{"\"The current notebook is not saved.\""}, 
                    "PacletDirectoryChooserErrorTemplate"]], 
                    "AttachedMessage"], "Inline", 
                    RemovalConditions -> {"EvaluatorQuit"}]; Null], "Custom", 
                    
                    If[
                    Quiet[
                    PacletObjectQ[
                    PacletObject[
                    File[RSNB`nbDir]]]], 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectory"}] = RSNB`nbDir, If[
                    StringQ[RSNB`nbDir], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[RSNB`cell, 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{
                    "\"The specified directory is not a valid paclet \
directory.\""}, "PacletDirectoryChooserErrorTemplate"]], "AttachedMessage"], 
                    "Inline", RemovalConditions -> {"EvaluatorQuit"}]]; 
                    NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]]],
                     CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    False]]& ], {
                    "Notebook" -> "Same as Notebook", "Custom" -> "Other"}, 
                    Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]]]], 
                    "Text", FontSize -> 13, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                   ItemBox[
                    TemplateBox[{
                    TemplateBox[{
                    FrameBox[
                    ButtonBox[
                    GraphicsBox[{
                    Thickness[0.02439], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{12.383, 36.391}, {35.711, 36.391}, {35.711, 
                    13.063}, {12.383, 13.063}, {12.383, 36.391}}}]}, {
                    EdgeForm[
                    JoinForm[{"Miter", 10.}]], 
                    EdgeForm[
                    Thickness[0.085346]], 
                    EdgeForm[
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]], 
                    FaceForm[
                    RGBColor[0.98039, 0.98039, 0.98039, 1.]]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{4.609, 28.617}, {27.937, 28.617}, {27.937, 
                    5.289}, {4.609, 5.289}, {4.609, 28.617}}}]}, {
                    EdgeForm[
                    JoinForm[{"Miter", 10.}]], 
                    EdgeForm[
                    Thickness[0.085346]], 
                    EdgeForm[
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]], 
                    FaceForm[
                    RGBColor[0.98039, 0.98039, 0.98039, 1.]]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{12.383, 16.953}, {20.16, 
                    16.953}}}, CurveClosed -> {0}]}, {
                    JoinForm[{"Miter", 10.}], 
                    Thickness[0.085346], 
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{16.273, 20.84}, {16.273, 
                    13.062}}}, CurveClosed -> {0}]}, {
                    JoinForm[{"Miter", 10.}], 
                    Thickness[0.085346], 
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]}, StripOnInput -> 
                    False]}, {
                    ImageSize -> 14, PlotRange -> {{0., 41.}, {0., 41.}}, 
                    AspectRatio -> Automatic}], 
                    ButtonFunction :> (SelectionMove[
                    First[
                    Cells[
                    EvaluationNotebook[], CellStyle -> "FileManagerTopSpacer",
                     CellTags -> "FileManager-PacletFiles"], $Failed], All, 
                    CellGroup, AutoScroll -> False]; FrontEndTokenExecute[
                    EvaluationNotebook[], "SelectionOpenAllGroups"]; 
                    SelectionMove[
                    EvaluationCell[], Before, Cell]; Null), Appearance -> 
                    None, Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]], 
                    FrameMargins -> 2, Method -> "Preemptive", 
                    ImageSize -> {Automatic, 20}, Evaluator -> Automatic], 
                    Background -> Dynamic[
                    If[
                    CurrentValue["MouseOver"], 
                    If[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}], 
                    GrayLevel[0.98], 
                    GrayLevel[0.92]], 
                    GrayLevel[0.98]]], FrameMargins -> 0, FrameStyle -> 
                    GrayLevel[0, 0], StripOnInput -> False], 
                    "\"Expand folders\""}, "PrettyTooltipTemplate"], 
                    TemplateBox[{
                    FrameBox[
                    ButtonBox[
                    GraphicsBox[{
                    Thickness[0.02439], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{12.383, 36.391}, {35.711, 36.391}, {35.711, 
                    13.063}, {12.383, 13.063}, {12.383, 36.391}}}]}, {
                    EdgeForm[
                    JoinForm[{"Miter", 10.}]], 
                    EdgeForm[
                    Thickness[0.085346]], 
                    EdgeForm[
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]], 
                    FaceForm[
                    RGBColor[0.98039, 0.98039, 0.98039, 1.]]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{4.609, 28.617}, {27.937, 28.617}, {27.937, 
                    5.289}, {4.609, 5.289}, {4.609, 28.617}}}]}, {
                    EdgeForm[
                    JoinForm[{"Miter", 10.}]], 
                    EdgeForm[
                    Thickness[0.085346]], 
                    EdgeForm[
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]], 
                    FaceForm[
                    RGBColor[0.98039, 0.98039, 0.98039, 1.]]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{12.383, 16.953}, {20.16, 
                    16.953}}}, CurveClosed -> {0}]}, {
                    JoinForm[{"Miter", 10.}], 
                    Thickness[0.085346], 
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]}, StripOnInput -> 
                    False]}, {
                    ImageSize -> 14, PlotRange -> {{0., 41.}, {0., 41.}}, 
                    AspectRatio -> Automatic}], 
                    ButtonFunction :> (SelectionMove[
                    First[
                    Cells[
                    EvaluationNotebook[], CellStyle -> "FileManagerTopSpacer",
                     CellTags -> "FileManager-PacletFiles"], $Failed], All, 
                    CellGroup, AutoScroll -> False]; FrontEndTokenExecute[
                    EvaluationNotebook[], "SelectionCloseAllGroups"]; 
                    FrontEndTokenExecute[
                    EvaluationNotebook[], "OpenCloseGroup"]; SelectionMove[
                    EvaluationCell[], Before, Cell]; Null), Appearance -> 
                    None, Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]], 
                    FrameMargins -> 2, Method -> "Preemptive", 
                    ImageSize -> {Automatic, 20}, Evaluator -> Automatic], 
                    Background -> Dynamic[
                    If[
                    CurrentValue["MouseOver"], 
                    If[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}], 
                    GrayLevel[0.98], 
                    GrayLevel[0.92]], 
                    GrayLevel[0.98]]], FrameMargins -> 0, FrameStyle -> 
                    GrayLevel[0, 0], StripOnInput -> False], 
                    "\"Collapse folders\""}, "PrettyTooltipTemplate"], 
                    TemplateBox[{
                    FrameBox[
                    ButtonBox[
                    DynamicModuleBox[{RSNB`r$$ = 0}, 
                    PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[0.65], 
                    Thickness[0.1], 
                    CapForm["Round"], 
                    GeometricTransformationBox[{
                    CircleBox[{0, 0}, 1, 
                    NCache[{(2 Pi)/3, (7 Pi)/3}, {2.0944, 7.3304}]], 
                    LineBox[
                    
                    NCache[{{-1.125, Sqrt[3]/2}, {(-1)/2, Sqrt[3]/2}, {(-1)/2,
                     0.24103}}, {{-1.125, 0.86603}, {-0.5, 0.86603}, {-0.5, 
                    0.24103}}]]}, {{{1, 0}, {0, 1}}, {0, 0}}]}, ImageSize -> 
                    14, ImagePadding -> 1, PlotRange -> 1.3], True -> 
                    OverlayBox[{
                    AnimatorBox[
                    Dynamic[
                    BoxForm`RemapVariable[RSNB`r$$, {0, (-2) Pi}], 
                    BoxForm`RemapValue[#, RSNB`r$$, {0, (-2) Pi}]& ], {0, 1}, 
                    AppearanceElements -> {}, DefaultDuration -> 1, ImageSize -> 
                    0.1], 
                    GraphicsBox[{
                    GrayLevel[0.65], 
                    Thickness[0.1], 
                    CapForm["Round"], 
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    GeometricTransformationBox[{
                    CircleBox[{0, 0}, 1, 
                    NCache[{(2 Pi)/3, (7 Pi)/3}, {2.0944, 7.3304}]], 
                    LineBox[
                    
                    NCache[{{-1.125, Sqrt[3]/2}, {(-1)/2, Sqrt[3]/2}, {(-1)/2,
                     0.24103}}, {{-1.125, 0.86603}, {-0.5, 0.86603}, {-0.5, 
                    0.24103}}]]}, {{{1, 0}, {0, 1}}, {0, 0}}], {{{
                    Cos[
                    Dynamic[RSNB`r$$]], -Sin[
                    Dynamic[RSNB`r$$]]}, {
                    Sin[
                    Dynamic[RSNB`r$$]], 
                    Cos[
                    Dynamic[RSNB`r$$]]}}, {0, 0}}], {{{1, 0}, {0, 1}}, {0, 
                    0}}]}, ImageSize -> 14, ImagePadding -> 1, PlotRange -> 
                    1.3]}]}, 
                    Dynamic[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]], 
                    ContentPadding -> False], 
                    Initialization :> (CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}] = False), 
                    DynamicModuleValues :> {}], ButtonFunction :> 
                    With[{RSNB`nbo = EvaluationNotebook[], RSNB`cell = 
                    EvaluationCell[]}, 
                    WithCleanup[NotebookDelete[
                    Cells[RSNB`cell, AttachedCell -> True]]; 
                    CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    True, 
                    If[
                    And[CurrentValue[
                    EvaluationCell[], {TaggingRules, "PacletDirectoryType"}] === 
                    "Notebook", 
                    Not[
                    DirectoryQ[
                    Quiet[
                    NotebookDirectory[RSNB`nbo]]]]], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[
                    EvaluationCell[], 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{"\"The current notebook is not saved.\""}, 
                    "PacletDirectoryChooserErrorTemplate"]], 
                    "AttachedMessage"], "Inline", 
                    RemovalConditions -> {"EvaluatorQuit"}], 
                    
                    With[{RSNB`nb$ = EvaluationNotebook[], 
                    RSNB`$cp$ = $ContextPath}, 
                    Quiet[
                    
                    Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                    Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    341138948110023950; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[
                    
                    PacletResource`DefinitionNotebook`\
RefreshNotebookPacletFiles[RSNB`nbo, RSNB`cell]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    341138948110023950]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                    Null]]]], 
                    CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    False]], Appearance -> None, Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]], 
                    FrameMargins -> 2, Method -> "Queued", 
                    ImageSize -> {Automatic, 20}, Evaluator -> Automatic], 
                    Background -> Dynamic[
                    If[
                    CurrentValue["MouseOver"], 
                    If[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}], 
                    GrayLevel[0.98], 
                    GrayLevel[0.92]], 
                    GrayLevel[0.98]]], FrameMargins -> 0, FrameStyle -> 
                    GrayLevel[0, 0], StripOnInput -> False], 
                    "\"Refresh files\""}, "PrettyTooltipTemplate"]}, 
                    "RowDefault"], ItemSize -> Fit, StripOnInput -> False]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Left, Right}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
             DefaultBaseStyle -> "Column", 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
            "Column"], "Custom" -> TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    TemplateBox[{}, "PacletDirectoryIconTemplate"], 
                    StyleBox[
                    "\"Paclet Directory\"", "Text", FontWeight -> "SemiBold", 
                    StripOnInput -> False], "\"\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"]}, {
                    StyleBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{
                    GridBox[{{
                    RadioButtonBox[
                    Dynamic[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "PacletDirectoryType"}], 
                    With[{RSNB`nbo = EvaluationNotebook[], RSNB`cell = 
                    EvaluationCell[]}, {RSNB`nbDir = Quiet[
                    NotebookDirectory[RSNB`nbo]], RSNB`oldDir = 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectory"}]}, 
                    WithCleanup[NotebookDelete[
                    Cells[RSNB`cell, AttachedCell -> True]]; 
                    CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    True, CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectory"}] = Inherited; 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectoryType"}] = #; 
                    Switch[#, "Notebook", 
                    If[
                    DirectoryQ[RSNB`nbDir], 
                    If[
                    And[RSNB`nbDir =!= RSNB`oldDir, 
                    MemberQ[$Packages, "PacletResource`DefinitionNotebook`"]], 
                    
                    With[{RSNB`nb$ = EvaluationNotebook[], 
                    RSNB`$cp$ = $ContextPath}, 
                    Quiet[
                    
                    Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                    Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    341138948110023950; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[
                    
                    PacletResource`DefinitionNotebook`\
RefreshNotebookPacletFiles[RSNB`nbo, RSNB`cell]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    341138948110023950]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                    Null]]]], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[
                    EvaluationCell[], 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{"\"The current notebook is not saved.\""}, 
                    "PacletDirectoryChooserErrorTemplate"]], 
                    "AttachedMessage"], "Inline", 
                    RemovalConditions -> {"EvaluatorQuit"}]; Null], "Custom", 
                    
                    If[
                    Quiet[
                    PacletObjectQ[
                    PacletObject[
                    File[RSNB`nbDir]]]], 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectory"}] = RSNB`nbDir, If[
                    StringQ[RSNB`nbDir], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[RSNB`cell, 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{
                    "\"The specified directory is not a valid paclet \
directory.\""}, "PacletDirectoryChooserErrorTemplate"]], "AttachedMessage"], 
                    "Inline", RemovalConditions -> {"EvaluatorQuit"}]]; 
                    NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]]],
                     CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    False]]& ], {"Notebook"}, DefaultBaseStyle -> 
                    "RadioButtonBar", Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]]], 
                    StyleBox[
                    "\"Same as Notebook\"", "RadioButtonBarLabel", 
                    StripOnInput -> False]}}, AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    ColumnAlignments -> Left, ColumnSpacings -> 0.3, 
                    BaselinePosition -> {1, 2}], "  ", 
                    GridBox[{{
                    RadioButtonBox[
                    Dynamic[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "PacletDirectoryType"}], 
                    With[{RSNB`nbo = EvaluationNotebook[], RSNB`cell = 
                    EvaluationCell[]}, {RSNB`nbDir = Quiet[
                    NotebookDirectory[RSNB`nbo]], RSNB`oldDir = 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectory"}]}, 
                    WithCleanup[NotebookDelete[
                    Cells[RSNB`cell, AttachedCell -> True]]; 
                    CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    True, CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectory"}] = Inherited; 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectoryType"}] = #; 
                    Switch[#, "Notebook", 
                    If[
                    DirectoryQ[RSNB`nbDir], 
                    If[
                    And[RSNB`nbDir =!= RSNB`oldDir, 
                    MemberQ[$Packages, "PacletResource`DefinitionNotebook`"]], 
                    
                    With[{RSNB`nb$ = EvaluationNotebook[], 
                    RSNB`$cp$ = $ContextPath}, 
                    Quiet[
                    
                    Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                    Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    341138948110023950; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[
                    
                    PacletResource`DefinitionNotebook`\
RefreshNotebookPacletFiles[RSNB`nbo, RSNB`cell]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    341138948110023950]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                    Null]]]], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[
                    EvaluationCell[], 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{"\"The current notebook is not saved.\""}, 
                    "PacletDirectoryChooserErrorTemplate"]], 
                    "AttachedMessage"], "Inline", 
                    RemovalConditions -> {"EvaluatorQuit"}]; Null], "Custom", 
                    
                    If[
                    Quiet[
                    PacletObjectQ[
                    PacletObject[
                    File[RSNB`nbDir]]]], 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectory"}] = RSNB`nbDir, If[
                    StringQ[RSNB`nbDir], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[RSNB`cell, 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{
                    "\"The specified directory is not a valid paclet \
directory.\""}, "PacletDirectoryChooserErrorTemplate"]], "AttachedMessage"], 
                    "Inline", RemovalConditions -> {"EvaluatorQuit"}]]; 
                    NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]]],
                     CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    False]]& ], {"Custom"}, DefaultBaseStyle -> 
                    "RadioButtonBar", Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]]], 
                    StyleBox[
                    "\"Other\"", "RadioButtonBarLabel", StripOnInput -> 
                    False]}}, AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    ColumnAlignments -> Left, ColumnSpacings -> 0.3, 
                    BaselinePosition -> {1, 2}]}], "Deploy"], 
                    RadioButtonBar[
                    Dynamic[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "PacletDirectoryType"}], 
                    With[{RSNB`nbo = EvaluationNotebook[], RSNB`cell = 
                    EvaluationCell[]}, {RSNB`nbDir = Quiet[
                    NotebookDirectory[RSNB`nbo]], RSNB`oldDir = 
                    CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectory"}]}, 
                    WithCleanup[NotebookDelete[
                    Cells[RSNB`cell, AttachedCell -> True]]; 
                    CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    True, CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectory"}] = Inherited; 
                    CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectoryType"}] = #; 
                    Switch[#, "Notebook", 
                    If[
                    DirectoryQ[RSNB`nbDir], 
                    If[
                    And[RSNB`nbDir =!= RSNB`oldDir, 
                    MemberQ[$Packages, "PacletResource`DefinitionNotebook`"]], 
                    
                    With[{RSNB`nb$ = EvaluationNotebook[], 
                    RSNB`$cp$ = $ContextPath}, 
                    Quiet[
                    
                    Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                    Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    341138948110023950; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[
                    
                    PacletResource`DefinitionNotebook`\
RefreshNotebookPacletFiles[RSNB`nbo, RSNB`cell]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    341138948110023950]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                    Null]]]], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[
                    EvaluationCell[], 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{"\"The current notebook is not saved.\""}, 
                    "PacletDirectoryChooserErrorTemplate"]], 
                    "AttachedMessage"], "Inline", 
                    RemovalConditions -> {"EvaluatorQuit"}]; Null], "Custom", 
                    
                    If[
                    Quiet[
                    PacletObjectQ[
                    PacletObject[
                    File[RSNB`nbDir]]]], 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectory"}] = RSNB`nbDir, If[
                    StringQ[RSNB`nbDir], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[RSNB`cell, 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{
                    "\"The specified directory is not a valid paclet \
directory.\""}, "PacletDirectoryChooserErrorTemplate"]], "AttachedMessage"], 
                    "Inline", RemovalConditions -> {"EvaluatorQuit"}]]; 
                    NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]]],
                     CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    False]]& ], {
                    "Notebook" -> "Same as Notebook", "Custom" -> "Other"}, 
                    Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]]]], 
                    "Text", FontSize -> 13, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                   ItemBox[
                    TemplateBox[{
                    TemplateBox[{
                    FrameBox[
                    ButtonBox[
                    GraphicsBox[{
                    Thickness[0.02439], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{12.383, 36.391}, {35.711, 36.391}, {35.711, 
                    13.063}, {12.383, 13.063}, {12.383, 36.391}}}]}, {
                    EdgeForm[
                    JoinForm[{"Miter", 10.}]], 
                    EdgeForm[
                    Thickness[0.085346]], 
                    EdgeForm[
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]], 
                    FaceForm[
                    RGBColor[0.98039, 0.98039, 0.98039, 1.]]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{4.609, 28.617}, {27.937, 28.617}, {27.937, 
                    5.289}, {4.609, 5.289}, {4.609, 28.617}}}]}, {
                    EdgeForm[
                    JoinForm[{"Miter", 10.}]], 
                    EdgeForm[
                    Thickness[0.085346]], 
                    EdgeForm[
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]], 
                    FaceForm[
                    RGBColor[0.98039, 0.98039, 0.98039, 1.]]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{12.383, 16.953}, {20.16, 
                    16.953}}}, CurveClosed -> {0}]}, {
                    JoinForm[{"Miter", 10.}], 
                    Thickness[0.085346], 
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{16.273, 20.84}, {16.273, 
                    13.062}}}, CurveClosed -> {0}]}, {
                    JoinForm[{"Miter", 10.}], 
                    Thickness[0.085346], 
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]}, StripOnInput -> 
                    False]}, {
                    ImageSize -> 14, PlotRange -> {{0., 41.}, {0., 41.}}, 
                    AspectRatio -> Automatic}], 
                    ButtonFunction :> (SelectionMove[
                    First[
                    Cells[
                    EvaluationNotebook[], CellStyle -> "FileManagerTopSpacer",
                     CellTags -> "FileManager-PacletFiles"], $Failed], All, 
                    CellGroup, AutoScroll -> False]; FrontEndTokenExecute[
                    EvaluationNotebook[], "SelectionOpenAllGroups"]; 
                    SelectionMove[
                    EvaluationCell[], Before, Cell]; Null), Appearance -> 
                    None, Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]], 
                    FrameMargins -> 2, Method -> "Preemptive", 
                    ImageSize -> {Automatic, 20}, Evaluator -> Automatic], 
                    Background -> Dynamic[
                    If[
                    CurrentValue["MouseOver"], 
                    If[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}], 
                    GrayLevel[0.98], 
                    GrayLevel[0.92]], 
                    GrayLevel[0.98]]], FrameMargins -> 0, FrameStyle -> 
                    GrayLevel[0, 0], StripOnInput -> False], 
                    "\"Expand folders\""}, "PrettyTooltipTemplate"], 
                    TemplateBox[{
                    FrameBox[
                    ButtonBox[
                    GraphicsBox[{
                    Thickness[0.02439], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{12.383, 36.391}, {35.711, 36.391}, {35.711, 
                    13.063}, {12.383, 13.063}, {12.383, 36.391}}}]}, {
                    EdgeForm[
                    JoinForm[{"Miter", 10.}]], 
                    EdgeForm[
                    Thickness[0.085346]], 
                    EdgeForm[
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]], 
                    FaceForm[
                    RGBColor[0.98039, 0.98039, 0.98039, 1.]]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{4.609, 28.617}, {27.937, 28.617}, {27.937, 
                    5.289}, {4.609, 5.289}, {4.609, 28.617}}}]}, {
                    EdgeForm[
                    JoinForm[{"Miter", 10.}]], 
                    EdgeForm[
                    Thickness[0.085346]], 
                    EdgeForm[
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]], 
                    FaceForm[
                    RGBColor[0.98039, 0.98039, 0.98039, 1.]]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{12.383, 16.953}, {20.16, 
                    16.953}}}, CurveClosed -> {0}]}, {
                    JoinForm[{"Miter", 10.}], 
                    Thickness[0.085346], 
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]}, StripOnInput -> 
                    False]}, {
                    ImageSize -> 14, PlotRange -> {{0., 41.}, {0., 41.}}, 
                    AspectRatio -> Automatic}], 
                    ButtonFunction :> (SelectionMove[
                    First[
                    Cells[
                    EvaluationNotebook[], CellStyle -> "FileManagerTopSpacer",
                     CellTags -> "FileManager-PacletFiles"], $Failed], All, 
                    CellGroup, AutoScroll -> False]; FrontEndTokenExecute[
                    EvaluationNotebook[], "SelectionCloseAllGroups"]; 
                    FrontEndTokenExecute[
                    EvaluationNotebook[], "OpenCloseGroup"]; SelectionMove[
                    EvaluationCell[], Before, Cell]; Null), Appearance -> 
                    None, Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]], 
                    FrameMargins -> 2, Method -> "Preemptive", 
                    ImageSize -> {Automatic, 20}, Evaluator -> Automatic], 
                    Background -> Dynamic[
                    If[
                    CurrentValue["MouseOver"], 
                    If[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}], 
                    GrayLevel[0.98], 
                    GrayLevel[0.92]], 
                    GrayLevel[0.98]]], FrameMargins -> 0, FrameStyle -> 
                    GrayLevel[0, 0], StripOnInput -> False], 
                    "\"Collapse folders\""}, "PrettyTooltipTemplate"], 
                    TemplateBox[{
                    FrameBox[
                    ButtonBox[
                    DynamicModuleBox[{RSNB`r$$ = 0}, 
                    PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[0.65], 
                    Thickness[0.1], 
                    CapForm["Round"], 
                    GeometricTransformationBox[{
                    CircleBox[{0, 0}, 1, 
                    NCache[{(2 Pi)/3, (7 Pi)/3}, {2.0944, 7.3304}]], 
                    LineBox[
                    
                    NCache[{{-1.125, Sqrt[3]/2}, {(-1)/2, Sqrt[3]/2}, {(-1)/2,
                     0.24103}}, {{-1.125, 0.86603}, {-0.5, 0.86603}, {-0.5, 
                    0.24103}}]]}, {{{1, 0}, {0, 1}}, {0, 0}}]}, ImageSize -> 
                    14, ImagePadding -> 1, PlotRange -> 1.3], True -> 
                    OverlayBox[{
                    AnimatorBox[
                    Dynamic[
                    BoxForm`RemapVariable[RSNB`r$$, {0, (-2) Pi}], 
                    BoxForm`RemapValue[#, RSNB`r$$, {0, (-2) Pi}]& ], {0, 1}, 
                    AppearanceElements -> {}, DefaultDuration -> 1, ImageSize -> 
                    0.1], 
                    GraphicsBox[{
                    GrayLevel[0.65], 
                    Thickness[0.1], 
                    CapForm["Round"], 
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    GeometricTransformationBox[{
                    CircleBox[{0, 0}, 1, 
                    NCache[{(2 Pi)/3, (7 Pi)/3}, {2.0944, 7.3304}]], 
                    LineBox[
                    
                    NCache[{{-1.125, Sqrt[3]/2}, {(-1)/2, Sqrt[3]/2}, {(-1)/2,
                     0.24103}}, {{-1.125, 0.86603}, {-0.5, 0.86603}, {-0.5, 
                    0.24103}}]]}, {{{1, 0}, {0, 1}}, {0, 0}}], {{{
                    Cos[
                    Dynamic[RSNB`r$$]], -Sin[
                    Dynamic[RSNB`r$$]]}, {
                    Sin[
                    Dynamic[RSNB`r$$]], 
                    Cos[
                    Dynamic[RSNB`r$$]]}}, {0, 0}}], {{{1, 0}, {0, 1}}, {0, 
                    0}}]}, ImageSize -> 14, ImagePadding -> 1, PlotRange -> 
                    1.3]}]}, 
                    Dynamic[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]], 
                    ContentPadding -> False], 
                    Initialization :> (CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}] = False), 
                    DynamicModuleValues :> {}], ButtonFunction :> 
                    With[{RSNB`nbo = EvaluationNotebook[], RSNB`cell = 
                    EvaluationCell[]}, 
                    WithCleanup[NotebookDelete[
                    Cells[RSNB`cell, AttachedCell -> True]]; 
                    CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    True, 
                    If[
                    And[CurrentValue[
                    EvaluationCell[], {TaggingRules, "PacletDirectoryType"}] === 
                    "Notebook", 
                    Not[
                    DirectoryQ[
                    Quiet[
                    NotebookDirectory[RSNB`nbo]]]]], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[
                    EvaluationCell[], 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{"\"The current notebook is not saved.\""}, 
                    "PacletDirectoryChooserErrorTemplate"]], 
                    "AttachedMessage"], "Inline", 
                    RemovalConditions -> {"EvaluatorQuit"}], 
                    
                    With[{RSNB`nb$ = EvaluationNotebook[], 
                    RSNB`$cp$ = $ContextPath}, 
                    Quiet[
                    
                    Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                    Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    341138948110023950; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[
                    
                    PacletResource`DefinitionNotebook`\
RefreshNotebookPacletFiles[RSNB`nbo, RSNB`cell]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    341138948110023950]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                    Null]]]], 
                    CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    False]], Appearance -> None, Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]], 
                    FrameMargins -> 2, Method -> "Queued", 
                    ImageSize -> {Automatic, 20}, Evaluator -> Automatic], 
                    Background -> Dynamic[
                    If[
                    CurrentValue["MouseOver"], 
                    If[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}], 
                    GrayLevel[0.98], 
                    GrayLevel[0.92]], 
                    GrayLevel[0.98]]], FrameMargins -> 0, FrameStyle -> 
                    GrayLevel[0, 0], StripOnInput -> False], 
                    "\"Refresh files\""}, "PrettyTooltipTemplate"]}, 
                    "RowDefault"], ItemSize -> Fit, StripOnInput -> False]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Left, Right}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                "Grid"]}, {
               TagBox[
                GridBox[{{
                   InputFieldBox[
                    Dynamic[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "PacletDirectory"}]], 
                    String, FieldHint -> "Choose paclet directory", 
                    BaseStyle -> {
                    FontSize -> 12, FontColor -> GrayLevel[0.25]}, 
                    ImageSize -> {Full, 24}, BaselinePosition -> Baseline, 
                    FrameMargins -> {{3, 3}, {1, 1}}], 
                   ButtonBox[
                    StyleBox[
                    "\"Browse\[Ellipsis]\"", "Text", FontSize -> 12, 
                    StripOnInput -> False], ButtonFunction :> 
                    With[{RSNB`nbo = EvaluationNotebook[], RSNB`cell = 
                    EvaluationCell[]}, 
                    WithCleanup[NotebookDelete[
                    Cells[RSNB`cell, AttachedCell -> True]]; 
                    CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    True, 
                    Replace[
                    SystemDialogInput["Directory", 
                    Replace[
                    CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectory"}], Except[
                    PatternTest[
                    Blank[], DirectoryQ]] :> Replace[
                    Quiet[
                    NotebookDirectory[RSNB`nbo]], Except[
                    PatternTest[
                    Blank[], DirectoryQ]] :> Directory[]]]], Pattern[RSNB`s, 
                    Blank[String]] :> With[{RSNB`nbDir = Quiet[
                    NotebookDirectory[RSNB`nbo]]}, 
                    If[RSNB`nbDir === RSNB`s, 
                    CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectory"}] = Inherited; 
                    CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectoryType"}] = 
                    "Notebook"; Null, 
                    CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectory"}] = RSNB`s; 
                    CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectoryType"}] = 
                    "Custom"; Null]; If[
                    Quiet[
                    PacletObjectQ[
                    PacletObject[
                    File[RSNB`s]]]], 
                    
                    With[{RSNB`nb$ = EvaluationNotebook[], 
                    RSNB`$cp$ = $ContextPath}, 
                    Quiet[
                    
                    Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                    Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    341138948110023950; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[
                    
                    PacletResource`DefinitionNotebook`\
RefreshNotebookPacletFiles[RSNB`nbo, RSNB`cell]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    341138948110023950]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                    Null]]], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[RSNB`cell, 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{
                    "\"The specified directory is not a valid paclet \
directory.\""}, "PacletDirectoryChooserErrorTemplate"]], "AttachedMessage"], 
                    "Inline", RemovalConditions -> {"EvaluatorQuit"}]]]], 
                    CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    False]], Method -> "Queued", ImageSize -> {Automatic, 24},
                     Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]], 
                    Appearance -> Automatic, Evaluator -> Automatic]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Center}}}, 
                 AutoDelete -> False, 
                 GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {"Text"}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
             "Column", 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
            "Column"]}, 
         Dynamic[
          CurrentValue[
           EvaluationCell[], {TaggingRules, "PacletDirectoryType"}]], 
         ImageSize -> Automatic], Background -> GrayLevel[0.98], FrameMargins -> 
        10, FrameStyle -> GrayLevel[0.8], ImageSize -> {
          Scaled[1], Automatic}, StripOnInput -> False]& )}], 
   Cell[
    StyleData["PacletDirectoryChooserErrorTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        TagBox[
         GridBox[{{
            GraphicsBox[{
              Thickness[0.028571], 
              StyleBox[{
                
                FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
                  0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3,
                   3}, {0, 1, 0}, {1, 3, 3}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 
                  3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {
                  1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}, {{1, 4, 3}, {0, 
                  1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                  3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
                  1, 3, 3}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBWIQfbJs33yp88YO51advxqWI+LApN0udvOdsYOre9FP
/pciDhGWW06U/TN26EiOvePWLArnb35VvFXUWgzOtzeN2+WZowTnX614qWZ4
QgluXmvNhc2RosoOMPsOnlroui1Y2SGMT3fT3PXGDn8kiq8LTVJ24Lq+uMC2
y9ihx+sVi8lGZYenF5Ru/4xD8EHW8Djpw/lvAnfItb7Wg/NDHi+dfWSBHty8
fKHmA6cS9eD2/Vn58ZKvkh7cPQG90/OEmPXg7oXxYf6B8WH+hfFh4QEzDxZe
MPtg4QlzD9if74Xh7pU6EK3guFEY7h8YH+ZfGB8WHjA+LLxg5qHHHwAbtMYJ

                  "], CompressedData["
1:eJxTTMoPSmViYGCQBWIQfdzbvNPxgLEDSxif7qa7Gg6WW06U7btv7HC14qWa
IYemw78rQMZHY4cIkISdpoPIOveHVV+MHRhAoEHToXSyBEuYn4nDwVMLXbdN
NoXznRKeXlDabQox19bE4V2NvWncLVMH5ds/67JkTKDmmsLNz5j4tsZe1Mxh
2+e/VypOGjs0TnXuzlE3c9g3X0r/7hIEv/kAyCI9OB9kHV8ugg+2T1YPbt4u
Tx4m7eO6cPt+BD9eOrtFF+4e8Zvnvgcn6zpot4vdPLcdwa8FSu/qNHU4ewYI
ePTg/oXxYeEBCg4RPT14eBXacl1fXKAHD09jENis57Bs9hGFDZs0HAJ6p+cJ
MetD5OdqOIDDPwHBjwM52NsYzp81EwgqEXyQ9uYFxnDz0OMPAAfUunk=
                  "], CompressedData["
1:eJxTTMoPSmViYGBQAmIQbcixRibqiJFD41Tn7pzl9g58upvmvlc3drA3jdvl
mWPv0Hzg1ELXMmOHaUDp59L2Dkza7WI31xlDxLfZOQT0Ts8TCnZ0MAo10Fop
zOsQlWJ937/X0eFMvcf+2rlsDue/Bz9e2u3okLoqISRIncFhnfvDKhE/R4c/
Kz9e8k36bJ8vBDTJ0NHh5OQl2Wr3X9k7JTy9oMTt6PDE85Lp5PyH9uogB95y
cHilKHXX8c0Vex6QA1Y6OOgfsLMqfbrb3i9JIMKyxMGBAQqArl9+zBrB318r
a5HuwgLnV0asMD27mwHOjxTffpHh3i97mHmb9PIWM+75Yg+zz/Dyt/VrTN7a
w9wzU8jzi1HXY3uYe4Gh8nvlxxv2MP8YXD0TxeWxfT/Mv9M49185P3vXflh4
/LrA+lW3+Jo9LLzA+hbpwcPzV13WnhJhfXh4P146+4jCBn14fIDD09oAHl/F
GRPf1sw3cDj8VSOm/5G9w5vAHXKt3IZQ/0HDoQHBFwFFwBcEHxR9zQlGcP3o
6QEAaQXeGQ==
                  "]}]}, {
                FaceForm[
                 RGBColor[0.85098, 0., 0.10588, 1.]]}, StripOnInput -> 
               False]}, {
             ImageSize -> 12, BaselinePosition -> Scaled[0.05], ImageSize -> 
              16}], #}}, 
          GridBoxAlignment -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
          False, GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"], FontColor -> 
        RGBColor[0.86667, 0.06667, 0.], FontSize -> 13, FontFamily -> 
        "Source Sans Pro", StripOnInput -> False]& )}], 
   Cell[
    StyleData["PacletDirectoryIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (OverlayBox[{
         TemplateBox[{}, "FileManagerDirectoryIconTemplate"], 
         GraphicsBox[{
           Thickness[0.041667], {
            FaceForm[{
              RGBColor[0.961, 0.961, 0.961], 
              Opacity[1.]}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
              1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.545, 22.597}, {
             7.5464, 20.5}, {2.5454, 18.402}, {2.5454, 12.598}, {2.5454, 
             12.597}, {2.5454, 6.7952}, {7.5454, 4.6962}, {7.546, 4.6972}, {
             12.545, 2.5992}, {17.545, 4.6972}, {17.545, 4.6962}, {22.545, 
             6.7952}, {22.545, 12.597}, {22.545, 12.598}, {22.545, 
             18.402}}}]}, {
            FaceForm[{
              RGBColor[0.898, 0.898, 0.898], 
              Opacity[1.]}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}}}, {{{17.125, 8.3359}, {17.125, 14.057}, {
             16.875, 14.057}, {16.875, 8.3359}, {17., 8.1169}, {21.952, 
             6.0399}, {22.049, 6.2709}}}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}}}, {{{7.125, 8.3359}, {7.125, 14.057}, {6.875, 
             14.057}, {6.875, 8.3359}, {1.952, 6.2709}, {2.048, 6.0399}, {7., 
             8.1169}}}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}}}, {{{11.874, 6.2383}, {6.9515, 4.1733}, {7.0475, 
             3.9423}, {12., 6.0193}, {16.952, 3.9423}, {17.048, 4.1733}}}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}}}, {{{17.125, 14.139}, {17.125, 19.86}, {16.875,
              19.86}, {16.875, 14.139}, {17., 13.92}, {21.952, 11.843}, {
             22.049, 12.074}}}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}}}, {{{7.125, 14.139}, {7.125, 19.86}, {6.875, 
             19.86}, {6.875, 14.139}, {1.952, 12.074}, {2.048, 11.843}, {7., 
             13.92}}}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}}}, {{{11.875, 21.363}, {11.875, 18.356}, {12., 18.303}, {
             12.125, 18.356}, {12.125, 21.363}, {12., 21.415}}}]}, {
            FaceForm[{
              RGBColor[0.749, 0.749, 0.749], 
              Opacity[1.]}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
               1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}}, {{{8.292, 
              19.859}, {12., 21.415}, {15.707, 19.859}, {12., 18.303}}, {{
              17.5, 19.527}, {17.5, 20.192}, {12., 22.5}, {6.5, 20.192}, {6.5,
               19.528}, {12., 17.219}, {12., 17.219}, {15.7, 18.772}, {17.5, 
              19.527}}}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}}}, {{{11.5, 8.5156}, {11.5, 6.4876}, {11.5, 5.4026}, {12.5,
              5.8226}, {12.5, 8.5156}, {12., 8.3056}}}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
               1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
              0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
              0}}}, {{{21.5, 6.4873}, {17.5, 4.8083}, {17.5, 9.5283}, {21.5, 
              11.207}}, {{21.5, 12.711}, {21.5, 12.291}, {17., 10.403}, {16.5,
               10.613}, {16.5, 10.194}, {15.707, 9.8613}, {16.5, 9.5283}, {
              16.5, 4.8083}, {16.5, 4.8093}, {16.5, 4.3903}, {15.707, 
              4.0573}, {17., 3.5143}, {22.5, 5.8223}, {22.5, 12.291}}}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
               1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
              0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
              0}}}, {{{6.5, 4.8086}, {2.5, 6.4876}, {2.5, 11.207}, {6.5, 
              9.5286}}, {{7.5, 9.1096}, {7.5, 9.1096}, {7.5, 9.5286}, {8.292, 
              9.8616}, {7.5, 10.194}, {7.5, 10.614}, {7., 10.404}, {2.5, 
              12.291}, {2.5, 12.711}, {1.5, 12.292}, {1.5, 5.8226}, {7., 
              3.5146}, {8.293, 4.0576}, {7.5, 4.3906}}}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
               1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
              0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
              1, 0}}}, {{{3.2925, 17.762}, {7.0005, 19.318}, {10.708, 
              17.762}, {7.0005, 16.206}}, {{6.5005, 10.612}, {2.5005, 
              12.291}, {2.5005, 17.01}, {6.5005, 15.332}}, {{7.5005, 
              10.193}, {7.5005, 10.612}, {7.5005, 15.332}, {12., 17.22}, {
              12.5, 17.01}, {12.5, 18.095}, {7.0005, 20.403}, {1.5005, 
              18.095}, {1.5005, 11.626}, {7.0005, 9.3182}, {8.2935, 
              9.8612}}}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
               1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
              0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
              1, 0}}}, {{{21.5, 12.291}, {17.5, 10.612}, {17.5, 15.332}, {
              21.5, 17.01}}, {{13.293, 17.762}, {17., 19.318}, {20.708, 
              17.762}, {17., 16.207}}, {{17., 20.403}, {11.5, 18.095}, {11.5, 
              17.01}, {12., 17.22}, {16.5, 15.332}, {16.5, 10.612}, {16.5, 
              10.194}, {15.706, 9.861}, {17., 9.318}, {22.5, 11.626}, {22.5, 
              18.095}}}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
               1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
              0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
              1, 0}}}, {{{16.5, 4.3906}, {12.5, 2.7116}, {12.5, 7.4316}, {
              16.5, 9.1096}}, {{11.5, 2.7116}, {7.4995, 4.3906}, {7.4995, 
              9.1096}, {11.5, 7.4316}}, {{16.5, 10.614}, {16.5, 10.195}, {12.,
               8.3056}, {8.2915, 9.8616}, {7.4995, 10.194}, {7.4995, 
              10.615}, {6.4995, 10.195}, {6.4995, 3.7256}, {12., 1.4176}, {
              17.5, 3.7256}, {17.5, 10.195}}}]}, {
            FaceForm[{
              RGBColor[0.965, 0.765, 0.749], 
              Opacity[1.]}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}}}, {{{12., 17.662}, {16.945, 15.586}, {16.945, 9.9376}, {
             12., 7.8636}, {7.055, 9.9376}, {7.055, 15.586}}}]}, {
            FaceForm[{
              RGBColor[0.91, 0.655, 0.635], 
              Opacity[1.]}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.125, 17.763}, {
             11.875, 17.763}, {11.875, 12.041}, {6.952, 9.9757}, {7.048, 
             9.7447}, {12., 11.823}, {16.952, 9.7447}, {17.048, 9.9757}, {
             12.125, 12.041}}}]}, {
            FaceForm[{
              RGBColor[0.867, 0.067, 0.], 
              Opacity[1.]}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
               1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
              0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.5, 
              8.5146}, {12.5, 13.234}, {16.5, 14.912}, {16.5, 10.193}}, {{7.5,
               14.912}, {11.5, 13.234}, {11.5, 8.5146}, {7.5, 10.193}}, {{
              15.708, 15.664}, {12., 14.109}, {8.292, 15.664}, {12., 
              17.221}}, {{12., 18.305}, {6.5, 15.996}, {6.5, 9.5286}, {12., 
              7.2206}, {17.5, 9.5286}, {17.5, 15.996}}}]}}, {
          ImageSize -> 12, AspectRatio -> Automatic, ImageSize -> {24., 24.}, 
           PlotRange -> {{0., 24.}, {0., 24.}}}]}, 
        Alignment -> {Right, Bottom}]& )}], 
   Cell[
    StyleData[
    "MainGuideChooser", StyleDefinitions -> 
     StyleData["PacletDirectoryChooser"]], CellGroupingRules -> 
    "NormalGrouping"], 
   Cell[
    StyleData["MainGuideChooserTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (FrameBox[
        TagBox[
         GridBox[{{
            PaneSelectorBox[{True -> RowBox[{
                 TemplateBox[{}, "PacletDirectoryIconTemplate"], 
                 StyleBox["/", FontColor -> GrayLevel[0.5]]}], False -> 
              RowBox[{
                 TemplateBox[{}, "FileManagerNBIconTemplate"], 
                 StyleBox["/", ShowContents -> False]}]}, 
             Dynamic[
              CurrentValue[
               EvaluationCell[], {TaggingRules, "Relative"}]]], 
            InputFieldBox[
             Dynamic[
              CurrentValue[
               EvaluationCell[], {TaggingRules, "MainGuidePageString"}]], 
             String, FieldHint -> "Choose a guide page", 
             BaseStyle -> {FontSize -> 12, FontColor -> GrayLevel[0.25]}, 
             ImageSize -> {Full, 24}, BaselinePosition -> Baseline, 
             FrameMargins -> {{3, 3}, {1, 1}}], 
            ButtonBox[
             StyleBox[
             "\"Browse\[Ellipsis]\"", "Text", FontSize -> 12, StripOnInput -> 
              False], ButtonFunction :> 
             With[{RSNB`nbo = EvaluationNotebook[], RSNB`cell = 
                EvaluationCell[]}, 
               WithCleanup[NotebookDelete[
                  Cells[RSNB`cell, AttachedCell -> True]]; 
                CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = True, 
                
                
                Module[{RSNB`initial$, RSNB`res$}, 
                 RSNB`initial$ = SelectFirst[{
                    FileNameJoin[{
                    With[{RSNB`cell$ = First[
                    Cells[
                    RSNB`nbo, CellStyle -> "PacletDirectoryChooser", CellTags -> 
                    "PacletManifestPanel"], $Failed]}, 
                    Replace[{
                    CurrentValue[
                    RSNB`cell$, {TaggingRules, "PacletDirectoryType"}], 
                    CurrentValue[
                    RSNB`cell$, {TaggingRules, "PacletDirectory"}]}, {{
                    "Notebook", 
                    Blank[]} :> Quiet[
                    NotebookDirectory[RSNB`nbo]], {"Custom", 
                    Pattern[RSNB`dir, 
                    Blank[]]} :> RSNB`dir}]], "Documentation", $Language, 
                    "Guides"}], 
                    With[{RSNB`cell$ = First[
                    Cells[
                    RSNB`nbo, CellStyle -> "PacletDirectoryChooser", CellTags -> 
                    "PacletManifestPanel"], $Failed]}, 
                    Replace[{
                    CurrentValue[
                    RSNB`cell$, {TaggingRules, "PacletDirectoryType"}], 
                    CurrentValue[
                    RSNB`cell$, {TaggingRules, "PacletDirectory"}]}, {{
                    "Notebook", 
                    Blank[]} :> Quiet[
                    NotebookDirectory[RSNB`nbo]], {"Custom", 
                    Pattern[RSNB`dir, 
                    Blank[]]} :> RSNB`dir}]], 
                    Quiet[
                    NotebookDirectory[RSNB`nbo]]}, DirectoryQ, 
                    Directory[]]; 
                 RSNB`res$ = SystemDialogInput["FileOpen", RSNB`initial$]; 
                 If[
                   And[
                    StringQ[
                    With[{RSNB`cell$ = First[
                    Cells[
                    RSNB`nbo, CellStyle -> "PacletDirectoryChooser", CellTags -> 
                    "PacletManifestPanel"], $Failed]}, 
                    Replace[{
                    CurrentValue[
                    RSNB`cell$, {TaggingRules, "PacletDirectoryType"}], 
                    CurrentValue[
                    RSNB`cell$, {TaggingRules, "PacletDirectory"}]}, {{
                    "Notebook", 
                    Blank[]} :> Quiet[
                    NotebookDirectory[RSNB`nbo]], {"Custom", 
                    Pattern[RSNB`dir, 
                    Blank[]]} :> RSNB`dir}]]], 
                    StringQ[RSNB`res$], 
                    StringStartsQ[RSNB`res$, 
                    With[{RSNB`cell$ = First[
                    Cells[
                    RSNB`nbo, CellStyle -> "PacletDirectoryChooser", CellTags -> 
                    "PacletManifestPanel"], $Failed]}, 
                    Replace[{
                    CurrentValue[
                    RSNB`cell$, {TaggingRules, "PacletDirectoryType"}], 
                    CurrentValue[
                    RSNB`cell$, {TaggingRules, "PacletDirectory"}]}, {{
                    "Notebook", 
                    Blank[]} :> Quiet[
                    NotebookDirectory[RSNB`nbo]], {"Custom", 
                    Pattern[RSNB`dir, 
                    Blank[]]} :> RSNB`dir}]]]], RSNB`res$ = StringReplace[
                    StringDelete[RSNB`res$, 
                    StringExpression[StartOfString, 
                    With[{RSNB`cell$ = First[
                    Cells[
                    RSNB`nbo, CellStyle -> "PacletDirectoryChooser", CellTags -> 
                    "PacletManifestPanel"], $Failed]}, 
                    Replace[{
                    CurrentValue[
                    RSNB`cell$, {TaggingRules, "PacletDirectoryType"}], 
                    CurrentValue[
                    RSNB`cell$, {TaggingRules, "PacletDirectory"}]}, {{
                    "Notebook", 
                    Blank[]} :> Quiet[
                    NotebookDirectory[RSNB`nbo]], {"Custom", 
                    Pattern[RSNB`dir, 
                    Blank[]]} :> RSNB`dir}]], 
                    Alternatives[$PathnameSeparator, ""]]], "\\" -> "/"]; 
                   CurrentValue[RSNB`cell, {TaggingRules, "Relative"}] = True,
                    CurrentValue[RSNB`cell, {TaggingRules, "Relative"}] = 
                   False]; If[
                   StringQ[RSNB`res$], 
                   CurrentValue[
                    RSNB`cell, {TaggingRules, "MainGuidePageString"}] = 
                   RSNB`res$]], 
                CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                False]], Method -> "Queued", ImageSize -> {Automatic, 24}, 
             Enabled -> Dynamic[
               Not[
                CurrentValue[
                 EvaluationCell[], {TaggingRules, "Refreshing"}]]], 
             Appearance -> Automatic, Evaluator -> Automatic]}}, 
          GridBoxAlignment -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Center}}}, AutoDelete -> 
          False, GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {
           "ColumnsIndexed" -> {2 -> 0.2}, "Rows" -> {{Automatic}}}, 
          BaseStyle -> {"Text"}], "Grid"], Background -> GrayLevel[0.98], 
        FrameMargins -> 10, FrameStyle -> GrayLevel[0.8], ImageSize -> {
          Scaled[1], Automatic}, StripOnInput -> False]& )}], 
   Cell[
    StyleData["AttachedMessage"], Deletable -> True, 
    CellMargins -> {{60, 40}, {15, 5}}]}, Visible -> False, FrontEndVersion -> 
  "14.2 for Mac OS X ARM (64-bit) (March 16, 2025)", StyleDefinitions -> 
  "PrivateStylesheetFormatting.nb"],
ExpressionUUID->"9b0ba472-6795-4086-a177-4ff2a5dee9b5"
]

